// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "rt_tps_optoutput.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tps {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* RT_TPS_OptOutput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RT_TPS_OptOutput_reflection_ = NULL;
const ::google::protobuf::Descriptor* RT_TPS_OptResultValue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RT_TPS_OptResultValue_reflection_ = NULL;
const ::google::protobuf::Descriptor* RT_TPS_EudValueList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RT_TPS_EudValueList_reflection_ = NULL;
const ::google::protobuf::Descriptor* RT_TPS_ObjectValueList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RT_TPS_ObjectValueList_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_rt_5ftps_5foptoutput_2eproto() {
  protobuf_AddDesc_rt_5ftps_5foptoutput_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "rt_tps_optoutput.proto");
  GOOGLE_CHECK(file != NULL);
  RT_TPS_OptOutput_descriptor_ = file->message_type(0);
  static const int RT_TPS_OptOutput_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_OptOutput, nguid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_OptOutput, iterationnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_OptOutput, iterationresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_OptOutput, progressvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_OptOutput, ngmu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_OptOutput, ngsegmentcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_OptOutput, timeleft_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_OptOutput, timedelived_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_OptOutput, eudvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_OptOutput, optreturnvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_OptOutput, objectvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_OptOutput, algstatus_),
  };
  RT_TPS_OptOutput_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RT_TPS_OptOutput_descriptor_,
      RT_TPS_OptOutput::default_instance_,
      RT_TPS_OptOutput_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_OptOutput, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_OptOutput, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RT_TPS_OptOutput));
  RT_TPS_OptResultValue_descriptor_ = file->message_type(1);
  static const int RT_TPS_OptResultValue_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_OptResultValue, optuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_OptResultValue, resultvalue_),
  };
  RT_TPS_OptResultValue_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RT_TPS_OptResultValue_descriptor_,
      RT_TPS_OptResultValue::default_instance_,
      RT_TPS_OptResultValue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_OptResultValue, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_OptResultValue, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RT_TPS_OptResultValue));
  RT_TPS_EudValueList_descriptor_ = file->message_type(2);
  static const int RT_TPS_EudValueList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_EudValueList, eudvaluelist_),
  };
  RT_TPS_EudValueList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RT_TPS_EudValueList_descriptor_,
      RT_TPS_EudValueList::default_instance_,
      RT_TPS_EudValueList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_EudValueList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_EudValueList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RT_TPS_EudValueList));
  RT_TPS_ObjectValueList_descriptor_ = file->message_type(3);
  static const int RT_TPS_ObjectValueList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_ObjectValueList, objectvaluelist_),
  };
  RT_TPS_ObjectValueList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RT_TPS_ObjectValueList_descriptor_,
      RT_TPS_ObjectValueList::default_instance_,
      RT_TPS_ObjectValueList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_ObjectValueList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_ObjectValueList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RT_TPS_ObjectValueList));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_rt_5ftps_5foptoutput_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RT_TPS_OptOutput_descriptor_, &RT_TPS_OptOutput::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RT_TPS_OptResultValue_descriptor_, &RT_TPS_OptResultValue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RT_TPS_EudValueList_descriptor_, &RT_TPS_EudValueList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RT_TPS_ObjectValueList_descriptor_, &RT_TPS_ObjectValueList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_rt_5ftps_5foptoutput_2eproto() {
  delete RT_TPS_OptOutput::default_instance_;
  delete RT_TPS_OptOutput_reflection_;
  delete RT_TPS_OptResultValue::default_instance_;
  delete RT_TPS_OptResultValue_reflection_;
  delete RT_TPS_EudValueList::default_instance_;
  delete RT_TPS_EudValueList_reflection_;
  delete RT_TPS_ObjectValueList::default_instance_;
  delete RT_TPS_ObjectValueList_reflection_;
}

void protobuf_AddDesc_rt_5ftps_5foptoutput_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026rt_tps_optoutput.proto\022\ttps.proto\"\314\002\n\020"
    "RT_TPS_OptOutput\022\r\n\005ngUid\030\001 \001(\t\022\027\n\017itera"
    "tionNumber\030\002 \001(\005\022\027\n\017iterationResult\030\003 \001("
    "\002\022\025\n\rprogressValue\030\004 \001(\002\022\014\n\004ngMU\030\005 \001(\002\022\026"
    "\n\016ngSegmentCount\030\006 \001(\005\022\020\n\010timeLeft\030\007 \001(\005"
    "\022\023\n\013timeDelived\030\010 \001(\005\0220\n\010eudValue\030\t \001(\0132"
    "\036.tps.proto.RT_TPS_EudValueList\022\026\n\016optRe"
    "turnValue\030\n \001(\005\0226\n\013objectValue\030\013 \001(\0132!.t"
    "ps.proto.RT_TPS_ObjectValueList\022\021\n\talgst"
    "atus\030\014 \001(\005\"<\n\025RT_TPS_OptResultValue\022\016\n\006o"
    "ptUid\030\001 \002(\t\022\023\n\013resultValue\030\002 \002(\002\"M\n\023RT_T"
    "PS_EudValueList\0226\n\014eudValuelist\030\001 \003(\0132 ."
    "tps.proto.RT_TPS_OptResultValue\"S\n\026RT_TP"
    "S_ObjectValueList\0229\n\017objectValuelist\030\001 \003"
    "(\0132 .tps.proto.RT_TPS_OptResultValue", 596);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rt_tps_optoutput.proto", &protobuf_RegisterTypes);
  RT_TPS_OptOutput::default_instance_ = new RT_TPS_OptOutput();
  RT_TPS_OptResultValue::default_instance_ = new RT_TPS_OptResultValue();
  RT_TPS_EudValueList::default_instance_ = new RT_TPS_EudValueList();
  RT_TPS_ObjectValueList::default_instance_ = new RT_TPS_ObjectValueList();
  RT_TPS_OptOutput::default_instance_->InitAsDefaultInstance();
  RT_TPS_OptResultValue::default_instance_->InitAsDefaultInstance();
  RT_TPS_EudValueList::default_instance_->InitAsDefaultInstance();
  RT_TPS_ObjectValueList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_rt_5ftps_5foptoutput_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_rt_5ftps_5foptoutput_2eproto {
  StaticDescriptorInitializer_rt_5ftps_5foptoutput_2eproto() {
    protobuf_AddDesc_rt_5ftps_5foptoutput_2eproto();
  }
} static_descriptor_initializer_rt_5ftps_5foptoutput_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int RT_TPS_OptOutput::kNgUidFieldNumber;
const int RT_TPS_OptOutput::kIterationNumberFieldNumber;
const int RT_TPS_OptOutput::kIterationResultFieldNumber;
const int RT_TPS_OptOutput::kProgressValueFieldNumber;
const int RT_TPS_OptOutput::kNgMUFieldNumber;
const int RT_TPS_OptOutput::kNgSegmentCountFieldNumber;
const int RT_TPS_OptOutput::kTimeLeftFieldNumber;
const int RT_TPS_OptOutput::kTimeDelivedFieldNumber;
const int RT_TPS_OptOutput::kEudValueFieldNumber;
const int RT_TPS_OptOutput::kOptReturnValueFieldNumber;
const int RT_TPS_OptOutput::kObjectValueFieldNumber;
const int RT_TPS_OptOutput::kAlgstatusFieldNumber;
#endif  // !_MSC_VER

RT_TPS_OptOutput::RT_TPS_OptOutput()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RT_TPS_OptOutput::InitAsDefaultInstance() {
  eudvalue_ = const_cast< ::tps::proto::RT_TPS_EudValueList*>(&::tps::proto::RT_TPS_EudValueList::default_instance());
  objectvalue_ = const_cast< ::tps::proto::RT_TPS_ObjectValueList*>(&::tps::proto::RT_TPS_ObjectValueList::default_instance());
}

RT_TPS_OptOutput::RT_TPS_OptOutput(const RT_TPS_OptOutput& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RT_TPS_OptOutput::SharedCtor() {
  _cached_size_ = 0;
  nguid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  iterationnumber_ = 0;
  iterationresult_ = 0;
  progressvalue_ = 0;
  ngmu_ = 0;
  ngsegmentcount_ = 0;
  timeleft_ = 0;
  timedelived_ = 0;
  eudvalue_ = NULL;
  optreturnvalue_ = 0;
  objectvalue_ = NULL;
  algstatus_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RT_TPS_OptOutput::~RT_TPS_OptOutput() {
  SharedDtor();
}

void RT_TPS_OptOutput::SharedDtor() {
  if (nguid_ != &::google::protobuf::internal::kEmptyString) {
    delete nguid_;
  }
  if (this != default_instance_) {
    delete eudvalue_;
    delete objectvalue_;
  }
}

void RT_TPS_OptOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RT_TPS_OptOutput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RT_TPS_OptOutput_descriptor_;
}

const RT_TPS_OptOutput& RT_TPS_OptOutput::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rt_5ftps_5foptoutput_2eproto();  return *default_instance_;
}

RT_TPS_OptOutput* RT_TPS_OptOutput::default_instance_ = NULL;

RT_TPS_OptOutput* RT_TPS_OptOutput::New() const {
  return new RT_TPS_OptOutput;
}

void RT_TPS_OptOutput::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_nguid()) {
      if (nguid_ != &::google::protobuf::internal::kEmptyString) {
        nguid_->clear();
      }
    }
    iterationnumber_ = 0;
    iterationresult_ = 0;
    progressvalue_ = 0;
    ngmu_ = 0;
    ngsegmentcount_ = 0;
    timeleft_ = 0;
    timedelived_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_eudvalue()) {
      if (eudvalue_ != NULL) eudvalue_->::tps::proto::RT_TPS_EudValueList::Clear();
    }
    optreturnvalue_ = 0;
    if (has_objectvalue()) {
      if (objectvalue_ != NULL) objectvalue_->::tps::proto::RT_TPS_ObjectValueList::Clear();
    }
    algstatus_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RT_TPS_OptOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ngUid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nguid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->nguid().data(), this->nguid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_iterationNumber;
        break;
      }
      
      // optional int32 iterationNumber = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_iterationNumber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iterationnumber_)));
          set_has_iterationnumber();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(29)) goto parse_iterationResult;
        break;
      }
      
      // optional float iterationResult = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_iterationResult:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &iterationresult_)));
          set_has_iterationresult();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(37)) goto parse_progressValue;
        break;
      }
      
      // optional float progressValue = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_progressValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &progressvalue_)));
          set_has_progressvalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(45)) goto parse_ngMU;
        break;
      }
      
      // optional float ngMU = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_ngMU:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ngmu_)));
          set_has_ngmu();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_ngSegmentCount;
        break;
      }
      
      // optional int32 ngSegmentCount = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ngSegmentCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ngsegmentcount_)));
          set_has_ngsegmentcount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_timeLeft;
        break;
      }
      
      // optional int32 timeLeft = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_timeLeft:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timeleft_)));
          set_has_timeleft();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_timeDelived;
        break;
      }
      
      // optional int32 timeDelived = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_timeDelived:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timedelived_)));
          set_has_timedelived();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_eudValue;
        break;
      }
      
      // optional .tps.proto.RT_TPS_EudValueList eudValue = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_eudValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_eudvalue()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_optReturnValue;
        break;
      }
      
      // optional int32 optReturnValue = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_optReturnValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &optreturnvalue_)));
          set_has_optreturnvalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_objectValue;
        break;
      }
      
      // optional .tps.proto.RT_TPS_ObjectValueList objectValue = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_objectValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_objectvalue()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_algstatus;
        break;
      }
      
      // optional int32 algstatus = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_algstatus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &algstatus_)));
          set_has_algstatus();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RT_TPS_OptOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string ngUid = 1;
  if (has_nguid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nguid().data(), this->nguid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->nguid(), output);
  }
  
  // optional int32 iterationNumber = 2;
  if (has_iterationnumber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->iterationnumber(), output);
  }
  
  // optional float iterationResult = 3;
  if (has_iterationresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->iterationresult(), output);
  }
  
  // optional float progressValue = 4;
  if (has_progressvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->progressvalue(), output);
  }
  
  // optional float ngMU = 5;
  if (has_ngmu()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->ngmu(), output);
  }
  
  // optional int32 ngSegmentCount = 6;
  if (has_ngsegmentcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->ngsegmentcount(), output);
  }
  
  // optional int32 timeLeft = 7;
  if (has_timeleft()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->timeleft(), output);
  }
  
  // optional int32 timeDelived = 8;
  if (has_timedelived()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->timedelived(), output);
  }
  
  // optional .tps.proto.RT_TPS_EudValueList eudValue = 9;
  if (has_eudvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->eudvalue(), output);
  }
  
  // optional int32 optReturnValue = 10;
  if (has_optreturnvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->optreturnvalue(), output);
  }
  
  // optional .tps.proto.RT_TPS_ObjectValueList objectValue = 11;
  if (has_objectvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->objectvalue(), output);
  }
  
  // optional int32 algstatus = 12;
  if (has_algstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->algstatus(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RT_TPS_OptOutput::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string ngUid = 1;
  if (has_nguid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nguid().data(), this->nguid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nguid(), target);
  }
  
  // optional int32 iterationNumber = 2;
  if (has_iterationnumber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->iterationnumber(), target);
  }
  
  // optional float iterationResult = 3;
  if (has_iterationresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->iterationresult(), target);
  }
  
  // optional float progressValue = 4;
  if (has_progressvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->progressvalue(), target);
  }
  
  // optional float ngMU = 5;
  if (has_ngmu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->ngmu(), target);
  }
  
  // optional int32 ngSegmentCount = 6;
  if (has_ngsegmentcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->ngsegmentcount(), target);
  }
  
  // optional int32 timeLeft = 7;
  if (has_timeleft()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->timeleft(), target);
  }
  
  // optional int32 timeDelived = 8;
  if (has_timedelived()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->timedelived(), target);
  }
  
  // optional .tps.proto.RT_TPS_EudValueList eudValue = 9;
  if (has_eudvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->eudvalue(), target);
  }
  
  // optional int32 optReturnValue = 10;
  if (has_optreturnvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->optreturnvalue(), target);
  }
  
  // optional .tps.proto.RT_TPS_ObjectValueList objectValue = 11;
  if (has_objectvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->objectvalue(), target);
  }
  
  // optional int32 algstatus = 12;
  if (has_algstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->algstatus(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RT_TPS_OptOutput::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string ngUid = 1;
    if (has_nguid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nguid());
    }
    
    // optional int32 iterationNumber = 2;
    if (has_iterationnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->iterationnumber());
    }
    
    // optional float iterationResult = 3;
    if (has_iterationresult()) {
      total_size += 1 + 4;
    }
    
    // optional float progressValue = 4;
    if (has_progressvalue()) {
      total_size += 1 + 4;
    }
    
    // optional float ngMU = 5;
    if (has_ngmu()) {
      total_size += 1 + 4;
    }
    
    // optional int32 ngSegmentCount = 6;
    if (has_ngsegmentcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ngsegmentcount());
    }
    
    // optional int32 timeLeft = 7;
    if (has_timeleft()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->timeleft());
    }
    
    // optional int32 timeDelived = 8;
    if (has_timedelived()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->timedelived());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .tps.proto.RT_TPS_EudValueList eudValue = 9;
    if (has_eudvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->eudvalue());
    }
    
    // optional int32 optReturnValue = 10;
    if (has_optreturnvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->optreturnvalue());
    }
    
    // optional .tps.proto.RT_TPS_ObjectValueList objectValue = 11;
    if (has_objectvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->objectvalue());
    }
    
    // optional int32 algstatus = 12;
    if (has_algstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->algstatus());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RT_TPS_OptOutput::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RT_TPS_OptOutput* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RT_TPS_OptOutput*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RT_TPS_OptOutput::MergeFrom(const RT_TPS_OptOutput& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nguid()) {
      set_nguid(from.nguid());
    }
    if (from.has_iterationnumber()) {
      set_iterationnumber(from.iterationnumber());
    }
    if (from.has_iterationresult()) {
      set_iterationresult(from.iterationresult());
    }
    if (from.has_progressvalue()) {
      set_progressvalue(from.progressvalue());
    }
    if (from.has_ngmu()) {
      set_ngmu(from.ngmu());
    }
    if (from.has_ngsegmentcount()) {
      set_ngsegmentcount(from.ngsegmentcount());
    }
    if (from.has_timeleft()) {
      set_timeleft(from.timeleft());
    }
    if (from.has_timedelived()) {
      set_timedelived(from.timedelived());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_eudvalue()) {
      mutable_eudvalue()->::tps::proto::RT_TPS_EudValueList::MergeFrom(from.eudvalue());
    }
    if (from.has_optreturnvalue()) {
      set_optreturnvalue(from.optreturnvalue());
    }
    if (from.has_objectvalue()) {
      mutable_objectvalue()->::tps::proto::RT_TPS_ObjectValueList::MergeFrom(from.objectvalue());
    }
    if (from.has_algstatus()) {
      set_algstatus(from.algstatus());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RT_TPS_OptOutput::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RT_TPS_OptOutput::CopyFrom(const RT_TPS_OptOutput& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RT_TPS_OptOutput::IsInitialized() const {
  
  if (has_eudvalue()) {
    if (!this->eudvalue().IsInitialized()) return false;
  }
  if (has_objectvalue()) {
    if (!this->objectvalue().IsInitialized()) return false;
  }
  return true;
}

void RT_TPS_OptOutput::Swap(RT_TPS_OptOutput* other) {
  if (other != this) {
    std::swap(nguid_, other->nguid_);
    std::swap(iterationnumber_, other->iterationnumber_);
    std::swap(iterationresult_, other->iterationresult_);
    std::swap(progressvalue_, other->progressvalue_);
    std::swap(ngmu_, other->ngmu_);
    std::swap(ngsegmentcount_, other->ngsegmentcount_);
    std::swap(timeleft_, other->timeleft_);
    std::swap(timedelived_, other->timedelived_);
    std::swap(eudvalue_, other->eudvalue_);
    std::swap(optreturnvalue_, other->optreturnvalue_);
    std::swap(objectvalue_, other->objectvalue_);
    std::swap(algstatus_, other->algstatus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RT_TPS_OptOutput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RT_TPS_OptOutput_descriptor_;
  metadata.reflection = RT_TPS_OptOutput_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RT_TPS_OptResultValue::kOptUidFieldNumber;
const int RT_TPS_OptResultValue::kResultValueFieldNumber;
#endif  // !_MSC_VER

RT_TPS_OptResultValue::RT_TPS_OptResultValue()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RT_TPS_OptResultValue::InitAsDefaultInstance() {
}

RT_TPS_OptResultValue::RT_TPS_OptResultValue(const RT_TPS_OptResultValue& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RT_TPS_OptResultValue::SharedCtor() {
  _cached_size_ = 0;
  optuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  resultvalue_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RT_TPS_OptResultValue::~RT_TPS_OptResultValue() {
  SharedDtor();
}

void RT_TPS_OptResultValue::SharedDtor() {
  if (optuid_ != &::google::protobuf::internal::kEmptyString) {
    delete optuid_;
  }
  if (this != default_instance_) {
  }
}

void RT_TPS_OptResultValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RT_TPS_OptResultValue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RT_TPS_OptResultValue_descriptor_;
}

const RT_TPS_OptResultValue& RT_TPS_OptResultValue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rt_5ftps_5foptoutput_2eproto();  return *default_instance_;
}

RT_TPS_OptResultValue* RT_TPS_OptResultValue::default_instance_ = NULL;

RT_TPS_OptResultValue* RT_TPS_OptResultValue::New() const {
  return new RT_TPS_OptResultValue;
}

void RT_TPS_OptResultValue::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_optuid()) {
      if (optuid_ != &::google::protobuf::internal::kEmptyString) {
        optuid_->clear();
      }
    }
    resultvalue_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RT_TPS_OptResultValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string optUid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->optuid().data(), this->optuid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(21)) goto parse_resultValue;
        break;
      }
      
      // required float resultValue = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_resultValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &resultvalue_)));
          set_has_resultvalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RT_TPS_OptResultValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string optUid = 1;
  if (has_optuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->optuid().data(), this->optuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->optuid(), output);
  }
  
  // required float resultValue = 2;
  if (has_resultvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->resultvalue(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RT_TPS_OptResultValue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string optUid = 1;
  if (has_optuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->optuid().data(), this->optuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->optuid(), target);
  }
  
  // required float resultValue = 2;
  if (has_resultvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->resultvalue(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RT_TPS_OptResultValue::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string optUid = 1;
    if (has_optuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->optuid());
    }
    
    // required float resultValue = 2;
    if (has_resultvalue()) {
      total_size += 1 + 4;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RT_TPS_OptResultValue::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RT_TPS_OptResultValue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RT_TPS_OptResultValue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RT_TPS_OptResultValue::MergeFrom(const RT_TPS_OptResultValue& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_optuid()) {
      set_optuid(from.optuid());
    }
    if (from.has_resultvalue()) {
      set_resultvalue(from.resultvalue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RT_TPS_OptResultValue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RT_TPS_OptResultValue::CopyFrom(const RT_TPS_OptResultValue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RT_TPS_OptResultValue::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void RT_TPS_OptResultValue::Swap(RT_TPS_OptResultValue* other) {
  if (other != this) {
    std::swap(optuid_, other->optuid_);
    std::swap(resultvalue_, other->resultvalue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RT_TPS_OptResultValue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RT_TPS_OptResultValue_descriptor_;
  metadata.reflection = RT_TPS_OptResultValue_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RT_TPS_EudValueList::kEudValuelistFieldNumber;
#endif  // !_MSC_VER

RT_TPS_EudValueList::RT_TPS_EudValueList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RT_TPS_EudValueList::InitAsDefaultInstance() {
}

RT_TPS_EudValueList::RT_TPS_EudValueList(const RT_TPS_EudValueList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RT_TPS_EudValueList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RT_TPS_EudValueList::~RT_TPS_EudValueList() {
  SharedDtor();
}

void RT_TPS_EudValueList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RT_TPS_EudValueList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RT_TPS_EudValueList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RT_TPS_EudValueList_descriptor_;
}

const RT_TPS_EudValueList& RT_TPS_EudValueList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rt_5ftps_5foptoutput_2eproto();  return *default_instance_;
}

RT_TPS_EudValueList* RT_TPS_EudValueList::default_instance_ = NULL;

RT_TPS_EudValueList* RT_TPS_EudValueList::New() const {
  return new RT_TPS_EudValueList;
}

void RT_TPS_EudValueList::Clear() {
  eudvaluelist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RT_TPS_EudValueList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tps.proto.RT_TPS_OptResultValue eudValuelist = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_eudValuelist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_eudvaluelist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_eudValuelist;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RT_TPS_EudValueList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .tps.proto.RT_TPS_OptResultValue eudValuelist = 1;
  for (int i = 0; i < this->eudvaluelist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->eudvaluelist(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RT_TPS_EudValueList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .tps.proto.RT_TPS_OptResultValue eudValuelist = 1;
  for (int i = 0; i < this->eudvaluelist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->eudvaluelist(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RT_TPS_EudValueList::ByteSize() const {
  int total_size = 0;
  
  // repeated .tps.proto.RT_TPS_OptResultValue eudValuelist = 1;
  total_size += 1 * this->eudvaluelist_size();
  for (int i = 0; i < this->eudvaluelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->eudvaluelist(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RT_TPS_EudValueList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RT_TPS_EudValueList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RT_TPS_EudValueList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RT_TPS_EudValueList::MergeFrom(const RT_TPS_EudValueList& from) {
  GOOGLE_CHECK_NE(&from, this);
  eudvaluelist_.MergeFrom(from.eudvaluelist_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RT_TPS_EudValueList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RT_TPS_EudValueList::CopyFrom(const RT_TPS_EudValueList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RT_TPS_EudValueList::IsInitialized() const {
  
  for (int i = 0; i < eudvaluelist_size(); i++) {
    if (!this->eudvaluelist(i).IsInitialized()) return false;
  }
  return true;
}

void RT_TPS_EudValueList::Swap(RT_TPS_EudValueList* other) {
  if (other != this) {
    eudvaluelist_.Swap(&other->eudvaluelist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RT_TPS_EudValueList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RT_TPS_EudValueList_descriptor_;
  metadata.reflection = RT_TPS_EudValueList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RT_TPS_ObjectValueList::kObjectValuelistFieldNumber;
#endif  // !_MSC_VER

RT_TPS_ObjectValueList::RT_TPS_ObjectValueList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RT_TPS_ObjectValueList::InitAsDefaultInstance() {
}

RT_TPS_ObjectValueList::RT_TPS_ObjectValueList(const RT_TPS_ObjectValueList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RT_TPS_ObjectValueList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RT_TPS_ObjectValueList::~RT_TPS_ObjectValueList() {
  SharedDtor();
}

void RT_TPS_ObjectValueList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RT_TPS_ObjectValueList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RT_TPS_ObjectValueList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RT_TPS_ObjectValueList_descriptor_;
}

const RT_TPS_ObjectValueList& RT_TPS_ObjectValueList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rt_5ftps_5foptoutput_2eproto();  return *default_instance_;
}

RT_TPS_ObjectValueList* RT_TPS_ObjectValueList::default_instance_ = NULL;

RT_TPS_ObjectValueList* RT_TPS_ObjectValueList::New() const {
  return new RT_TPS_ObjectValueList;
}

void RT_TPS_ObjectValueList::Clear() {
  objectvaluelist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RT_TPS_ObjectValueList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tps.proto.RT_TPS_OptResultValue objectValuelist = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_objectValuelist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_objectvaluelist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_objectValuelist;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RT_TPS_ObjectValueList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .tps.proto.RT_TPS_OptResultValue objectValuelist = 1;
  for (int i = 0; i < this->objectvaluelist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->objectvaluelist(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RT_TPS_ObjectValueList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .tps.proto.RT_TPS_OptResultValue objectValuelist = 1;
  for (int i = 0; i < this->objectvaluelist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->objectvaluelist(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RT_TPS_ObjectValueList::ByteSize() const {
  int total_size = 0;
  
  // repeated .tps.proto.RT_TPS_OptResultValue objectValuelist = 1;
  total_size += 1 * this->objectvaluelist_size();
  for (int i = 0; i < this->objectvaluelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->objectvaluelist(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RT_TPS_ObjectValueList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RT_TPS_ObjectValueList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RT_TPS_ObjectValueList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RT_TPS_ObjectValueList::MergeFrom(const RT_TPS_ObjectValueList& from) {
  GOOGLE_CHECK_NE(&from, this);
  objectvaluelist_.MergeFrom(from.objectvaluelist_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RT_TPS_ObjectValueList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RT_TPS_ObjectValueList::CopyFrom(const RT_TPS_ObjectValueList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RT_TPS_ObjectValueList::IsInitialized() const {
  
  for (int i = 0; i < objectvaluelist_size(); i++) {
    if (!this->objectvaluelist(i).IsInitialized()) return false;
  }
  return true;
}

void RT_TPS_ObjectValueList::Swap(RT_TPS_ObjectValueList* other) {
  if (other != this) {
    objectvaluelist_.Swap(&other->objectvaluelist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RT_TPS_ObjectValueList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RT_TPS_ObjectValueList_descriptor_;
  metadata.reflection = RT_TPS_ObjectValueList_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace tps

// @@protoc_insertion_point(global_scope)
