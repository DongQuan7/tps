// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "rt_tps_proto_voi_setting.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tps {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* RtTpsProtoVoiSetting_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RtTpsProtoVoiSetting_reflection_ = NULL;
const ::google::protobuf::Descriptor* RtTpsProtoRepeatedVoiSetting_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RtTpsProtoRepeatedVoiSetting_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_rt_5ftps_5fproto_5fvoi_5fsetting_2eproto() {
  protobuf_AddDesc_rt_5ftps_5fproto_5fvoi_5fsetting_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "rt_tps_proto_voi_setting.proto");
  GOOGLE_CHECK(file != NULL);
  RtTpsProtoVoiSetting_descriptor_ = file->message_type(0);
  static const int RtTpsProtoVoiSetting_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoVoiSetting, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoVoiSetting, site_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoVoiSetting, roiname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoVoiSetting, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoVoiSetting, chndescription_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoVoiSetting, planningrole_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoVoiSetting, biologyrole_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoVoiSetting, roicolor_),
  };
  RtTpsProtoVoiSetting_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RtTpsProtoVoiSetting_descriptor_,
      RtTpsProtoVoiSetting::default_instance_,
      RtTpsProtoVoiSetting_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoVoiSetting, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoVoiSetting, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RtTpsProtoVoiSetting));
  RtTpsProtoRepeatedVoiSetting_descriptor_ = file->message_type(1);
  static const int RtTpsProtoRepeatedVoiSetting_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoRepeatedVoiSetting, voisetting_),
  };
  RtTpsProtoRepeatedVoiSetting_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RtTpsProtoRepeatedVoiSetting_descriptor_,
      RtTpsProtoRepeatedVoiSetting::default_instance_,
      RtTpsProtoRepeatedVoiSetting_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoRepeatedVoiSetting, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoRepeatedVoiSetting, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RtTpsProtoRepeatedVoiSetting));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_rt_5ftps_5fproto_5fvoi_5fsetting_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RtTpsProtoVoiSetting_descriptor_, &RtTpsProtoVoiSetting::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RtTpsProtoRepeatedVoiSetting_descriptor_, &RtTpsProtoRepeatedVoiSetting::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_rt_5ftps_5fproto_5fvoi_5fsetting_2eproto() {
  delete RtTpsProtoVoiSetting::default_instance_;
  delete RtTpsProtoVoiSetting_reflection_;
  delete RtTpsProtoRepeatedVoiSetting::default_instance_;
  delete RtTpsProtoRepeatedVoiSetting_reflection_;
}

void protobuf_AddDesc_rt_5ftps_5fproto_5fvoi_5fsetting_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\036rt_tps_proto_voi_setting.proto\022\ttps.pr"
    "oto\"\254\001\n\024RtTpsProtoVoiSetting\022\013\n\003uid\030\001 \001("
    "\t\022\014\n\004site\030\002 \001(\t\022\017\n\007roiname\030\003 \001(\t\022\023\n\013desc"
    "ription\030\004 \001(\t\022\026\n\016chndescription\030\005 \001(\t\022\024\n"
    "\014planningRole\030\006 \001(\005\022\023\n\013biologyRole\030\007 \001(\005"
    "\022\020\n\010roicolor\030\010 \001(\t\"S\n\034RtTpsProtoRepeated"
    "VoiSetting\0223\n\nvoiSetting\030\001 \003(\0132\037.tps.pro"
    "to.RtTpsProtoVoiSetting", 303);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rt_tps_proto_voi_setting.proto", &protobuf_RegisterTypes);
  RtTpsProtoVoiSetting::default_instance_ = new RtTpsProtoVoiSetting();
  RtTpsProtoRepeatedVoiSetting::default_instance_ = new RtTpsProtoRepeatedVoiSetting();
  RtTpsProtoVoiSetting::default_instance_->InitAsDefaultInstance();
  RtTpsProtoRepeatedVoiSetting::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_rt_5ftps_5fproto_5fvoi_5fsetting_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_rt_5ftps_5fproto_5fvoi_5fsetting_2eproto {
  StaticDescriptorInitializer_rt_5ftps_5fproto_5fvoi_5fsetting_2eproto() {
    protobuf_AddDesc_rt_5ftps_5fproto_5fvoi_5fsetting_2eproto();
  }
} static_descriptor_initializer_rt_5ftps_5fproto_5fvoi_5fsetting_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int RtTpsProtoVoiSetting::kUidFieldNumber;
const int RtTpsProtoVoiSetting::kSiteFieldNumber;
const int RtTpsProtoVoiSetting::kRoinameFieldNumber;
const int RtTpsProtoVoiSetting::kDescriptionFieldNumber;
const int RtTpsProtoVoiSetting::kChndescriptionFieldNumber;
const int RtTpsProtoVoiSetting::kPlanningRoleFieldNumber;
const int RtTpsProtoVoiSetting::kBiologyRoleFieldNumber;
const int RtTpsProtoVoiSetting::kRoicolorFieldNumber;
#endif  // !_MSC_VER

RtTpsProtoVoiSetting::RtTpsProtoVoiSetting()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RtTpsProtoVoiSetting::InitAsDefaultInstance() {
}

RtTpsProtoVoiSetting::RtTpsProtoVoiSetting(const RtTpsProtoVoiSetting& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RtTpsProtoVoiSetting::SharedCtor() {
  _cached_size_ = 0;
  uid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  site_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  roiname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  description_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  chndescription_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  planningrole_ = 0;
  biologyrole_ = 0;
  roicolor_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RtTpsProtoVoiSetting::~RtTpsProtoVoiSetting() {
  SharedDtor();
}

void RtTpsProtoVoiSetting::SharedDtor() {
  if (uid_ != &::google::protobuf::internal::kEmptyString) {
    delete uid_;
  }
  if (site_ != &::google::protobuf::internal::kEmptyString) {
    delete site_;
  }
  if (roiname_ != &::google::protobuf::internal::kEmptyString) {
    delete roiname_;
  }
  if (description_ != &::google::protobuf::internal::kEmptyString) {
    delete description_;
  }
  if (chndescription_ != &::google::protobuf::internal::kEmptyString) {
    delete chndescription_;
  }
  if (roicolor_ != &::google::protobuf::internal::kEmptyString) {
    delete roicolor_;
  }
  if (this != default_instance_) {
  }
}

void RtTpsProtoVoiSetting::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RtTpsProtoVoiSetting::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RtTpsProtoVoiSetting_descriptor_;
}

const RtTpsProtoVoiSetting& RtTpsProtoVoiSetting::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rt_5ftps_5fproto_5fvoi_5fsetting_2eproto();  return *default_instance_;
}

RtTpsProtoVoiSetting* RtTpsProtoVoiSetting::default_instance_ = NULL;

RtTpsProtoVoiSetting* RtTpsProtoVoiSetting::New() const {
  return new RtTpsProtoVoiSetting;
}

void RtTpsProtoVoiSetting::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_uid()) {
      if (uid_ != &::google::protobuf::internal::kEmptyString) {
        uid_->clear();
      }
    }
    if (has_site()) {
      if (site_ != &::google::protobuf::internal::kEmptyString) {
        site_->clear();
      }
    }
    if (has_roiname()) {
      if (roiname_ != &::google::protobuf::internal::kEmptyString) {
        roiname_->clear();
      }
    }
    if (has_description()) {
      if (description_ != &::google::protobuf::internal::kEmptyString) {
        description_->clear();
      }
    }
    if (has_chndescription()) {
      if (chndescription_ != &::google::protobuf::internal::kEmptyString) {
        chndescription_->clear();
      }
    }
    planningrole_ = 0;
    biologyrole_ = 0;
    if (has_roicolor()) {
      if (roicolor_ != &::google::protobuf::internal::kEmptyString) {
        roicolor_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RtTpsProtoVoiSetting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string uid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->uid().data(), this->uid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_site;
        break;
      }
      
      // optional string site = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_site:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_site()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->site().data(), this->site().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_roiname;
        break;
      }
      
      // optional string roiname = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_roiname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roiname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->roiname().data(), this->roiname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_description;
        break;
      }
      
      // optional string description = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_chndescription;
        break;
      }
      
      // optional string chndescription = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_chndescription:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chndescription()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->chndescription().data(), this->chndescription().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_planningRole;
        break;
      }
      
      // optional int32 planningRole = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_planningRole:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &planningrole_)));
          set_has_planningrole();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_biologyRole;
        break;
      }
      
      // optional int32 biologyRole = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_biologyRole:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &biologyrole_)));
          set_has_biologyrole();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_roicolor;
        break;
      }
      
      // optional string roicolor = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_roicolor:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roicolor()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->roicolor().data(), this->roicolor().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RtTpsProtoVoiSetting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->uid(), output);
  }
  
  // optional string site = 2;
  if (has_site()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->site().data(), this->site().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->site(), output);
  }
  
  // optional string roiname = 3;
  if (has_roiname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roiname().data(), this->roiname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->roiname(), output);
  }
  
  // optional string description = 4;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->description(), output);
  }
  
  // optional string chndescription = 5;
  if (has_chndescription()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->chndescription().data(), this->chndescription().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->chndescription(), output);
  }
  
  // optional int32 planningRole = 6;
  if (has_planningrole()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->planningrole(), output);
  }
  
  // optional int32 biologyRole = 7;
  if (has_biologyrole()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->biologyrole(), output);
  }
  
  // optional string roicolor = 8;
  if (has_roicolor()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roicolor().data(), this->roicolor().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->roicolor(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RtTpsProtoVoiSetting::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }
  
  // optional string site = 2;
  if (has_site()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->site().data(), this->site().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->site(), target);
  }
  
  // optional string roiname = 3;
  if (has_roiname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roiname().data(), this->roiname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->roiname(), target);
  }
  
  // optional string description = 4;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->description(), target);
  }
  
  // optional string chndescription = 5;
  if (has_chndescription()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->chndescription().data(), this->chndescription().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->chndescription(), target);
  }
  
  // optional int32 planningRole = 6;
  if (has_planningrole()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->planningrole(), target);
  }
  
  // optional int32 biologyRole = 7;
  if (has_biologyrole()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->biologyrole(), target);
  }
  
  // optional string roicolor = 8;
  if (has_roicolor()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->roicolor().data(), this->roicolor().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->roicolor(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RtTpsProtoVoiSetting::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uid());
    }
    
    // optional string site = 2;
    if (has_site()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->site());
    }
    
    // optional string roiname = 3;
    if (has_roiname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roiname());
    }
    
    // optional string description = 4;
    if (has_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }
    
    // optional string chndescription = 5;
    if (has_chndescription()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->chndescription());
    }
    
    // optional int32 planningRole = 6;
    if (has_planningrole()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->planningrole());
    }
    
    // optional int32 biologyRole = 7;
    if (has_biologyrole()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->biologyrole());
    }
    
    // optional string roicolor = 8;
    if (has_roicolor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roicolor());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RtTpsProtoVoiSetting::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RtTpsProtoVoiSetting* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RtTpsProtoVoiSetting*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RtTpsProtoVoiSetting::MergeFrom(const RtTpsProtoVoiSetting& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_site()) {
      set_site(from.site());
    }
    if (from.has_roiname()) {
      set_roiname(from.roiname());
    }
    if (from.has_description()) {
      set_description(from.description());
    }
    if (from.has_chndescription()) {
      set_chndescription(from.chndescription());
    }
    if (from.has_planningrole()) {
      set_planningrole(from.planningrole());
    }
    if (from.has_biologyrole()) {
      set_biologyrole(from.biologyrole());
    }
    if (from.has_roicolor()) {
      set_roicolor(from.roicolor());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RtTpsProtoVoiSetting::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RtTpsProtoVoiSetting::CopyFrom(const RtTpsProtoVoiSetting& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RtTpsProtoVoiSetting::IsInitialized() const {
  
  return true;
}

void RtTpsProtoVoiSetting::Swap(RtTpsProtoVoiSetting* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(site_, other->site_);
    std::swap(roiname_, other->roiname_);
    std::swap(description_, other->description_);
    std::swap(chndescription_, other->chndescription_);
    std::swap(planningrole_, other->planningrole_);
    std::swap(biologyrole_, other->biologyrole_);
    std::swap(roicolor_, other->roicolor_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RtTpsProtoVoiSetting::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RtTpsProtoVoiSetting_descriptor_;
  metadata.reflection = RtTpsProtoVoiSetting_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RtTpsProtoRepeatedVoiSetting::kVoiSettingFieldNumber;
#endif  // !_MSC_VER

RtTpsProtoRepeatedVoiSetting::RtTpsProtoRepeatedVoiSetting()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RtTpsProtoRepeatedVoiSetting::InitAsDefaultInstance() {
}

RtTpsProtoRepeatedVoiSetting::RtTpsProtoRepeatedVoiSetting(const RtTpsProtoRepeatedVoiSetting& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RtTpsProtoRepeatedVoiSetting::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RtTpsProtoRepeatedVoiSetting::~RtTpsProtoRepeatedVoiSetting() {
  SharedDtor();
}

void RtTpsProtoRepeatedVoiSetting::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RtTpsProtoRepeatedVoiSetting::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RtTpsProtoRepeatedVoiSetting::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RtTpsProtoRepeatedVoiSetting_descriptor_;
}

const RtTpsProtoRepeatedVoiSetting& RtTpsProtoRepeatedVoiSetting::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rt_5ftps_5fproto_5fvoi_5fsetting_2eproto();  return *default_instance_;
}

RtTpsProtoRepeatedVoiSetting* RtTpsProtoRepeatedVoiSetting::default_instance_ = NULL;

RtTpsProtoRepeatedVoiSetting* RtTpsProtoRepeatedVoiSetting::New() const {
  return new RtTpsProtoRepeatedVoiSetting;
}

void RtTpsProtoRepeatedVoiSetting::Clear() {
  voisetting_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RtTpsProtoRepeatedVoiSetting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tps.proto.RtTpsProtoVoiSetting voiSetting = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_voiSetting:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_voisetting()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_voiSetting;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RtTpsProtoRepeatedVoiSetting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .tps.proto.RtTpsProtoVoiSetting voiSetting = 1;
  for (int i = 0; i < this->voisetting_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->voisetting(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RtTpsProtoRepeatedVoiSetting::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .tps.proto.RtTpsProtoVoiSetting voiSetting = 1;
  for (int i = 0; i < this->voisetting_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->voisetting(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RtTpsProtoRepeatedVoiSetting::ByteSize() const {
  int total_size = 0;
  
  // repeated .tps.proto.RtTpsProtoVoiSetting voiSetting = 1;
  total_size += 1 * this->voisetting_size();
  for (int i = 0; i < this->voisetting_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->voisetting(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RtTpsProtoRepeatedVoiSetting::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RtTpsProtoRepeatedVoiSetting* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RtTpsProtoRepeatedVoiSetting*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RtTpsProtoRepeatedVoiSetting::MergeFrom(const RtTpsProtoRepeatedVoiSetting& from) {
  GOOGLE_CHECK_NE(&from, this);
  voisetting_.MergeFrom(from.voisetting_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RtTpsProtoRepeatedVoiSetting::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RtTpsProtoRepeatedVoiSetting::CopyFrom(const RtTpsProtoRepeatedVoiSetting& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RtTpsProtoRepeatedVoiSetting::IsInitialized() const {
  
  return true;
}

void RtTpsProtoRepeatedVoiSetting::Swap(RtTpsProtoRepeatedVoiSetting* other) {
  if (other != this) {
    voisetting_.Swap(&other->voisetting_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RtTpsProtoRepeatedVoiSetting::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RtTpsProtoRepeatedVoiSetting_descriptor_;
  metadata.reflection = RtTpsProtoRepeatedVoiSetting_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace tps

// @@protoc_insertion_point(global_scope)
