// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "rt_tps_proto_patient_tree_data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tps {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* RtTpsProtoPatientTreeData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RtTpsProtoPatientTreeData_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_rt_5ftps_5fproto_5fpatient_5ftree_5fdata_2eproto() {
  protobuf_AddDesc_rt_5ftps_5fproto_5fpatient_5ftree_5fdata_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "rt_tps_proto_patient_tree_data.proto");
  GOOGLE_CHECK(file != NULL);
  RtTpsProtoPatientTreeData_descriptor_ = file->message_type(0);
  static const int RtTpsProtoPatientTreeData_offsets_[19] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoPatientTreeData, patient_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoPatientTreeData, courselist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoPatientTreeData, serieslist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoPatientTreeData, voilist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoPatientTreeData, planlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoPatientTreeData, poilist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoPatientTreeData, normalizationgrouplist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoPatientTreeData, beamlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoPatientTreeData, segmentlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoPatientTreeData, prescriptionlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoPatientTreeData, constraintlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoPatientTreeData, doselinelist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoPatientTreeData, optgoallist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoPatientTreeData, tpstable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoPatientTreeData, seriesgroup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoPatientTreeData, rtimagelist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoPatientTreeData, sitelist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoPatientTreeData, dvhlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoPatientTreeData, maxpointlist_),
  };
  RtTpsProtoPatientTreeData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RtTpsProtoPatientTreeData_descriptor_,
      RtTpsProtoPatientTreeData::default_instance_,
      RtTpsProtoPatientTreeData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoPatientTreeData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoPatientTreeData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RtTpsProtoPatientTreeData));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_rt_5ftps_5fproto_5fpatient_5ftree_5fdata_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RtTpsProtoPatientTreeData_descriptor_, &RtTpsProtoPatientTreeData::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_rt_5ftps_5fproto_5fpatient_5ftree_5fdata_2eproto() {
  delete RtTpsProtoPatientTreeData::default_instance_;
  delete RtTpsProtoPatientTreeData_reflection_;
}

void protobuf_AddDesc_rt_5ftps_5fproto_5fpatient_5ftree_5fdata_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::tps::proto::protobuf_AddDesc_rt_5ftps_5fproto_5fpatient_2eproto();
  ::tps::proto::protobuf_AddDesc_rt_5ftps_5fproto_5fcourse_2eproto();
  ::tps::proto::protobuf_AddDesc_rt_5ftps_5fproto_5fseries_2eproto();
  ::tps::proto::protobuf_AddDesc_rt_5ftps_5fproto_5fvoi_2eproto();
  ::tps::proto::protobuf_AddDesc_rt_5ftps_5fproto_5fplan_2eproto();
  ::tps::proto::protobuf_AddDesc_rt_5ftps_5fproto_5fpoi_2eproto();
  ::tps::proto::protobuf_AddDesc_rt_5ftps_5fproto_5fnormalizationgroup_2eproto();
  ::tps::proto::protobuf_AddDesc_rt_5ftps_5fproto_5fbeam_2eproto();
  ::tps::proto::protobuf_AddDesc_rt_5ftps_5fproto_5fsegment_2eproto();
  ::tps::proto::protobuf_AddDesc_rt_5ftps_5fproto_5fprescription_2eproto();
  ::tps::proto::protobuf_AddDesc_rt_5ftps_5fproto_5fconstraint_2eproto();
  ::tps::proto::protobuf_AddDesc_rt_5ftps_5fproto_5fdoseline_2eproto();
  ::tps::proto::protobuf_AddDesc_rt_5ftps_5fproto_5fdoselinesetting_2eproto();
  ::tps::proto::protobuf_AddDesc_rt_5ftps_5foptgoals_2eproto();
  ::tps::proto::protobuf_AddDesc_rt_5ftps_5fproto_5ftable_2eproto();
  ::tps::proto::protobuf_AddDesc_rt_5ftps_5fproto_5fseries_5fgroup_2eproto();
  ::tps::proto::protobuf_AddDesc_rt_5ftps_5freferenceimage_2eproto();
  ::tps::proto::protobuf_AddDesc_rt_5ftps_5fproto_5fsite_2eproto();
  ::tps::proto::protobuf_AddDesc_rt_5ftps_5fdvhdata_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n$rt_tps_proto_patient_tree_data.proto\022\t"
    "tps.proto\032\032rt_tps_proto_patient.proto\032\031r"
    "t_tps_proto_course.proto\032\031rt_tps_proto_s"
    "eries.proto\032\026rt_tps_proto_voi.proto\032\027rt_"
    "tps_proto_plan.proto\032\026rt_tps_proto_poi.p"
    "roto\032%rt_tps_proto_normalizationgroup.pr"
    "oto\032\027rt_tps_proto_beam.proto\032\032rt_tps_pro"
    "to_segment.proto\032\037rt_tps_proto_prescript"
    "ion.proto\032\035rt_tps_proto_constraint.proto"
    "\032\033rt_tps_proto_doseline.proto\032\"rt_tps_pr"
    "oto_doselinesetting.proto\032\025rt_tps_optgoa"
    "ls.proto\032\030rt_tps_proto_table.proto\032\037rt_t"
    "ps_proto_series_group.proto\032\033rt_tps_refe"
    "renceimage.proto\032\027rt_tps_proto_site.prot"
    "o\032\024rt_tps_dvhdata.proto\"\321\007\n\031RtTpsProtoPa"
    "tientTreeData\022-\n\007patient\030\001 \001(\0132\034.tps.pro"
    "to.RtTpsProtoPatient\022/\n\ncourseList\030\002 \003(\013"
    "2\033.tps.proto.RtTpsProtoCourse\022/\n\nseriesL"
    "ist\030\003 \003(\0132\033.tps.proto.RtTpsProtoSeries\022)"
    "\n\007voiList\030\004 \003(\0132\030.tps.proto.RtTpsProtoVo"
    "i\022+\n\010planList\030\005 \003(\0132\031.tps.proto.RtTpsPro"
    "toPlan\022)\n\007poiList\030\006 \003(\0132\030.tps.proto.RtTp"
    "sProtoPoi\022G\n\026normalizationGroupList\030\007 \003("
    "\0132\'.tps.proto.RtTpsProtoNormalizationGro"
    "up\022+\n\010beamList\030\010 \003(\0132\031.tps.proto.RtTpsPr"
    "otoBeam\0221\n\013segmentList\030\t \003(\0132\034.tps.proto"
    ".RtTpsProtoSegment\022;\n\020prescriptionList\030\n"
    " \003(\0132!.tps.proto.RtTpsProtoPrescription\022"
    "7\n\016constraintList\030\013 \003(\0132\037.tps.proto.RtTp"
    "sProtoConstraint\0223\n\014doseLineList\030\014 \003(\0132\035"
    ".tps.proto.RtTpsProtoDoseLine\022.\n\013optGoal"
    "List\030\r \003(\0132\031.tps.proto.RT_TPS_Optgoal\022,\n"
    "\010tpsTable\030\016 \003(\0132\032.tps.proto.RtTpsProtoTa"
    "ble\0225\n\013seriesGroup\030\017 \003(\0132 .tps.proto.RtT"
    "psProtoSeriesGroup\022.\n\013rtImageList\030\020 \003(\0132"
    "\031.tps.proto.ReferenceImage\022+\n\010siteList\030\021"
    " \003(\0132\031.tps.proto.RtTpsProtoSite\022*\n\007dvhLi"
    "st\030\022 \003(\0132\031.tps.proto.RT_TPS_DVHData\022.\n\014m"
    "axPointList\030\023 \003(\0132\030.tps.proto.RtTpsProto"
    "Poi", 1563);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rt_tps_proto_patient_tree_data.proto", &protobuf_RegisterTypes);
  RtTpsProtoPatientTreeData::default_instance_ = new RtTpsProtoPatientTreeData();
  RtTpsProtoPatientTreeData::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_rt_5ftps_5fproto_5fpatient_5ftree_5fdata_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_rt_5ftps_5fproto_5fpatient_5ftree_5fdata_2eproto {
  StaticDescriptorInitializer_rt_5ftps_5fproto_5fpatient_5ftree_5fdata_2eproto() {
    protobuf_AddDesc_rt_5ftps_5fproto_5fpatient_5ftree_5fdata_2eproto();
  }
} static_descriptor_initializer_rt_5ftps_5fproto_5fpatient_5ftree_5fdata_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int RtTpsProtoPatientTreeData::kPatientFieldNumber;
const int RtTpsProtoPatientTreeData::kCourseListFieldNumber;
const int RtTpsProtoPatientTreeData::kSeriesListFieldNumber;
const int RtTpsProtoPatientTreeData::kVoiListFieldNumber;
const int RtTpsProtoPatientTreeData::kPlanListFieldNumber;
const int RtTpsProtoPatientTreeData::kPoiListFieldNumber;
const int RtTpsProtoPatientTreeData::kNormalizationGroupListFieldNumber;
const int RtTpsProtoPatientTreeData::kBeamListFieldNumber;
const int RtTpsProtoPatientTreeData::kSegmentListFieldNumber;
const int RtTpsProtoPatientTreeData::kPrescriptionListFieldNumber;
const int RtTpsProtoPatientTreeData::kConstraintListFieldNumber;
const int RtTpsProtoPatientTreeData::kDoseLineListFieldNumber;
const int RtTpsProtoPatientTreeData::kOptGoalListFieldNumber;
const int RtTpsProtoPatientTreeData::kTpsTableFieldNumber;
const int RtTpsProtoPatientTreeData::kSeriesGroupFieldNumber;
const int RtTpsProtoPatientTreeData::kRtImageListFieldNumber;
const int RtTpsProtoPatientTreeData::kSiteListFieldNumber;
const int RtTpsProtoPatientTreeData::kDvhListFieldNumber;
const int RtTpsProtoPatientTreeData::kMaxPointListFieldNumber;
#endif  // !_MSC_VER

RtTpsProtoPatientTreeData::RtTpsProtoPatientTreeData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RtTpsProtoPatientTreeData::InitAsDefaultInstance() {
  patient_ = const_cast< ::tps::proto::RtTpsProtoPatient*>(&::tps::proto::RtTpsProtoPatient::default_instance());
}

RtTpsProtoPatientTreeData::RtTpsProtoPatientTreeData(const RtTpsProtoPatientTreeData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RtTpsProtoPatientTreeData::SharedCtor() {
  _cached_size_ = 0;
  patient_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RtTpsProtoPatientTreeData::~RtTpsProtoPatientTreeData() {
  SharedDtor();
}

void RtTpsProtoPatientTreeData::SharedDtor() {
  if (this != default_instance_) {
    delete patient_;
  }
}

void RtTpsProtoPatientTreeData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RtTpsProtoPatientTreeData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RtTpsProtoPatientTreeData_descriptor_;
}

const RtTpsProtoPatientTreeData& RtTpsProtoPatientTreeData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rt_5ftps_5fproto_5fpatient_5ftree_5fdata_2eproto();  return *default_instance_;
}

RtTpsProtoPatientTreeData* RtTpsProtoPatientTreeData::default_instance_ = NULL;

RtTpsProtoPatientTreeData* RtTpsProtoPatientTreeData::New() const {
  return new RtTpsProtoPatientTreeData;
}

void RtTpsProtoPatientTreeData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_patient()) {
      if (patient_ != NULL) patient_->::tps::proto::RtTpsProtoPatient::Clear();
    }
  }
  courselist_.Clear();
  serieslist_.Clear();
  voilist_.Clear();
  planlist_.Clear();
  poilist_.Clear();
  normalizationgrouplist_.Clear();
  beamlist_.Clear();
  segmentlist_.Clear();
  prescriptionlist_.Clear();
  constraintlist_.Clear();
  doselinelist_.Clear();
  optgoallist_.Clear();
  tpstable_.Clear();
  seriesgroup_.Clear();
  rtimagelist_.Clear();
  sitelist_.Clear();
  dvhlist_.Clear();
  maxpointlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RtTpsProtoPatientTreeData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .tps.proto.RtTpsProtoPatient patient = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_patient()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_courseList;
        break;
      }
      
      // repeated .tps.proto.RtTpsProtoCourse courseList = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_courseList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_courselist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_courseList;
        if (input->ExpectTag(26)) goto parse_seriesList;
        break;
      }
      
      // repeated .tps.proto.RtTpsProtoSeries seriesList = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_seriesList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_serieslist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_seriesList;
        if (input->ExpectTag(34)) goto parse_voiList;
        break;
      }
      
      // repeated .tps.proto.RtTpsProtoVoi voiList = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_voiList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_voilist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_voiList;
        if (input->ExpectTag(42)) goto parse_planList;
        break;
      }
      
      // repeated .tps.proto.RtTpsProtoPlan planList = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_planList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_planlist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_planList;
        if (input->ExpectTag(50)) goto parse_poiList;
        break;
      }
      
      // repeated .tps.proto.RtTpsProtoPoi poiList = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_poiList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_poilist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_poiList;
        if (input->ExpectTag(58)) goto parse_normalizationGroupList;
        break;
      }
      
      // repeated .tps.proto.RtTpsProtoNormalizationGroup normalizationGroupList = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_normalizationGroupList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_normalizationgrouplist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_normalizationGroupList;
        if (input->ExpectTag(66)) goto parse_beamList;
        break;
      }
      
      // repeated .tps.proto.RtTpsProtoBeam beamList = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_beamList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_beamlist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_beamList;
        if (input->ExpectTag(74)) goto parse_segmentList;
        break;
      }
      
      // repeated .tps.proto.RtTpsProtoSegment segmentList = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_segmentList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_segmentlist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_segmentList;
        if (input->ExpectTag(82)) goto parse_prescriptionList;
        break;
      }
      
      // repeated .tps.proto.RtTpsProtoPrescription prescriptionList = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prescriptionList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prescriptionlist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_prescriptionList;
        if (input->ExpectTag(90)) goto parse_constraintList;
        break;
      }
      
      // repeated .tps.proto.RtTpsProtoConstraint constraintList = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_constraintList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_constraintlist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_constraintList;
        if (input->ExpectTag(98)) goto parse_doseLineList;
        break;
      }
      
      // repeated .tps.proto.RtTpsProtoDoseLine doseLineList = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_doseLineList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_doselinelist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_doseLineList;
        if (input->ExpectTag(106)) goto parse_optGoalList;
        break;
      }
      
      // repeated .tps.proto.RT_TPS_Optgoal optGoalList = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_optGoalList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_optgoallist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_optGoalList;
        if (input->ExpectTag(114)) goto parse_tpsTable;
        break;
      }
      
      // repeated .tps.proto.RtTpsProtoTable tpsTable = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_tpsTable:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tpstable()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_tpsTable;
        if (input->ExpectTag(122)) goto parse_seriesGroup;
        break;
      }
      
      // repeated .tps.proto.RtTpsProtoSeriesGroup seriesGroup = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_seriesGroup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_seriesgroup()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_seriesGroup;
        if (input->ExpectTag(130)) goto parse_rtImageList;
        break;
      }
      
      // repeated .tps.proto.ReferenceImage rtImageList = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rtImageList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rtimagelist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_rtImageList;
        if (input->ExpectTag(138)) goto parse_siteList;
        break;
      }
      
      // repeated .tps.proto.RtTpsProtoSite siteList = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_siteList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sitelist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_siteList;
        if (input->ExpectTag(146)) goto parse_dvhList;
        break;
      }
      
      // repeated .tps.proto.RT_TPS_DVHData dvhList = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dvhList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dvhlist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_dvhList;
        if (input->ExpectTag(154)) goto parse_maxPointList;
        break;
      }
      
      // repeated .tps.proto.RtTpsProtoPoi maxPointList = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_maxPointList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_maxpointlist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_maxPointList;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RtTpsProtoPatientTreeData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .tps.proto.RtTpsProtoPatient patient = 1;
  if (has_patient()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->patient(), output);
  }
  
  // repeated .tps.proto.RtTpsProtoCourse courseList = 2;
  for (int i = 0; i < this->courselist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->courselist(i), output);
  }
  
  // repeated .tps.proto.RtTpsProtoSeries seriesList = 3;
  for (int i = 0; i < this->serieslist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->serieslist(i), output);
  }
  
  // repeated .tps.proto.RtTpsProtoVoi voiList = 4;
  for (int i = 0; i < this->voilist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->voilist(i), output);
  }
  
  // repeated .tps.proto.RtTpsProtoPlan planList = 5;
  for (int i = 0; i < this->planlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->planlist(i), output);
  }
  
  // repeated .tps.proto.RtTpsProtoPoi poiList = 6;
  for (int i = 0; i < this->poilist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->poilist(i), output);
  }
  
  // repeated .tps.proto.RtTpsProtoNormalizationGroup normalizationGroupList = 7;
  for (int i = 0; i < this->normalizationgrouplist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->normalizationgrouplist(i), output);
  }
  
  // repeated .tps.proto.RtTpsProtoBeam beamList = 8;
  for (int i = 0; i < this->beamlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->beamlist(i), output);
  }
  
  // repeated .tps.proto.RtTpsProtoSegment segmentList = 9;
  for (int i = 0; i < this->segmentlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->segmentlist(i), output);
  }
  
  // repeated .tps.proto.RtTpsProtoPrescription prescriptionList = 10;
  for (int i = 0; i < this->prescriptionlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->prescriptionlist(i), output);
  }
  
  // repeated .tps.proto.RtTpsProtoConstraint constraintList = 11;
  for (int i = 0; i < this->constraintlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->constraintlist(i), output);
  }
  
  // repeated .tps.proto.RtTpsProtoDoseLine doseLineList = 12;
  for (int i = 0; i < this->doselinelist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->doselinelist(i), output);
  }
  
  // repeated .tps.proto.RT_TPS_Optgoal optGoalList = 13;
  for (int i = 0; i < this->optgoallist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->optgoallist(i), output);
  }
  
  // repeated .tps.proto.RtTpsProtoTable tpsTable = 14;
  for (int i = 0; i < this->tpstable_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->tpstable(i), output);
  }
  
  // repeated .tps.proto.RtTpsProtoSeriesGroup seriesGroup = 15;
  for (int i = 0; i < this->seriesgroup_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->seriesgroup(i), output);
  }
  
  // repeated .tps.proto.ReferenceImage rtImageList = 16;
  for (int i = 0; i < this->rtimagelist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->rtimagelist(i), output);
  }
  
  // repeated .tps.proto.RtTpsProtoSite siteList = 17;
  for (int i = 0; i < this->sitelist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->sitelist(i), output);
  }
  
  // repeated .tps.proto.RT_TPS_DVHData dvhList = 18;
  for (int i = 0; i < this->dvhlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->dvhlist(i), output);
  }
  
  // repeated .tps.proto.RtTpsProtoPoi maxPointList = 19;
  for (int i = 0; i < this->maxpointlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->maxpointlist(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RtTpsProtoPatientTreeData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .tps.proto.RtTpsProtoPatient patient = 1;
  if (has_patient()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->patient(), target);
  }
  
  // repeated .tps.proto.RtTpsProtoCourse courseList = 2;
  for (int i = 0; i < this->courselist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->courselist(i), target);
  }
  
  // repeated .tps.proto.RtTpsProtoSeries seriesList = 3;
  for (int i = 0; i < this->serieslist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->serieslist(i), target);
  }
  
  // repeated .tps.proto.RtTpsProtoVoi voiList = 4;
  for (int i = 0; i < this->voilist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->voilist(i), target);
  }
  
  // repeated .tps.proto.RtTpsProtoPlan planList = 5;
  for (int i = 0; i < this->planlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->planlist(i), target);
  }
  
  // repeated .tps.proto.RtTpsProtoPoi poiList = 6;
  for (int i = 0; i < this->poilist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->poilist(i), target);
  }
  
  // repeated .tps.proto.RtTpsProtoNormalizationGroup normalizationGroupList = 7;
  for (int i = 0; i < this->normalizationgrouplist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->normalizationgrouplist(i), target);
  }
  
  // repeated .tps.proto.RtTpsProtoBeam beamList = 8;
  for (int i = 0; i < this->beamlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->beamlist(i), target);
  }
  
  // repeated .tps.proto.RtTpsProtoSegment segmentList = 9;
  for (int i = 0; i < this->segmentlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->segmentlist(i), target);
  }
  
  // repeated .tps.proto.RtTpsProtoPrescription prescriptionList = 10;
  for (int i = 0; i < this->prescriptionlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->prescriptionlist(i), target);
  }
  
  // repeated .tps.proto.RtTpsProtoConstraint constraintList = 11;
  for (int i = 0; i < this->constraintlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->constraintlist(i), target);
  }
  
  // repeated .tps.proto.RtTpsProtoDoseLine doseLineList = 12;
  for (int i = 0; i < this->doselinelist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->doselinelist(i), target);
  }
  
  // repeated .tps.proto.RT_TPS_Optgoal optGoalList = 13;
  for (int i = 0; i < this->optgoallist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->optgoallist(i), target);
  }
  
  // repeated .tps.proto.RtTpsProtoTable tpsTable = 14;
  for (int i = 0; i < this->tpstable_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->tpstable(i), target);
  }
  
  // repeated .tps.proto.RtTpsProtoSeriesGroup seriesGroup = 15;
  for (int i = 0; i < this->seriesgroup_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->seriesgroup(i), target);
  }
  
  // repeated .tps.proto.ReferenceImage rtImageList = 16;
  for (int i = 0; i < this->rtimagelist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->rtimagelist(i), target);
  }
  
  // repeated .tps.proto.RtTpsProtoSite siteList = 17;
  for (int i = 0; i < this->sitelist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->sitelist(i), target);
  }
  
  // repeated .tps.proto.RT_TPS_DVHData dvhList = 18;
  for (int i = 0; i < this->dvhlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->dvhlist(i), target);
  }
  
  // repeated .tps.proto.RtTpsProtoPoi maxPointList = 19;
  for (int i = 0; i < this->maxpointlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->maxpointlist(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RtTpsProtoPatientTreeData::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .tps.proto.RtTpsProtoPatient patient = 1;
    if (has_patient()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->patient());
    }
    
  }
  // repeated .tps.proto.RtTpsProtoCourse courseList = 2;
  total_size += 1 * this->courselist_size();
  for (int i = 0; i < this->courselist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->courselist(i));
  }
  
  // repeated .tps.proto.RtTpsProtoSeries seriesList = 3;
  total_size += 1 * this->serieslist_size();
  for (int i = 0; i < this->serieslist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->serieslist(i));
  }
  
  // repeated .tps.proto.RtTpsProtoVoi voiList = 4;
  total_size += 1 * this->voilist_size();
  for (int i = 0; i < this->voilist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->voilist(i));
  }
  
  // repeated .tps.proto.RtTpsProtoPlan planList = 5;
  total_size += 1 * this->planlist_size();
  for (int i = 0; i < this->planlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->planlist(i));
  }
  
  // repeated .tps.proto.RtTpsProtoPoi poiList = 6;
  total_size += 1 * this->poilist_size();
  for (int i = 0; i < this->poilist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->poilist(i));
  }
  
  // repeated .tps.proto.RtTpsProtoNormalizationGroup normalizationGroupList = 7;
  total_size += 1 * this->normalizationgrouplist_size();
  for (int i = 0; i < this->normalizationgrouplist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->normalizationgrouplist(i));
  }
  
  // repeated .tps.proto.RtTpsProtoBeam beamList = 8;
  total_size += 1 * this->beamlist_size();
  for (int i = 0; i < this->beamlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->beamlist(i));
  }
  
  // repeated .tps.proto.RtTpsProtoSegment segmentList = 9;
  total_size += 1 * this->segmentlist_size();
  for (int i = 0; i < this->segmentlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->segmentlist(i));
  }
  
  // repeated .tps.proto.RtTpsProtoPrescription prescriptionList = 10;
  total_size += 1 * this->prescriptionlist_size();
  for (int i = 0; i < this->prescriptionlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prescriptionlist(i));
  }
  
  // repeated .tps.proto.RtTpsProtoConstraint constraintList = 11;
  total_size += 1 * this->constraintlist_size();
  for (int i = 0; i < this->constraintlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->constraintlist(i));
  }
  
  // repeated .tps.proto.RtTpsProtoDoseLine doseLineList = 12;
  total_size += 1 * this->doselinelist_size();
  for (int i = 0; i < this->doselinelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->doselinelist(i));
  }
  
  // repeated .tps.proto.RT_TPS_Optgoal optGoalList = 13;
  total_size += 1 * this->optgoallist_size();
  for (int i = 0; i < this->optgoallist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->optgoallist(i));
  }
  
  // repeated .tps.proto.RtTpsProtoTable tpsTable = 14;
  total_size += 1 * this->tpstable_size();
  for (int i = 0; i < this->tpstable_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tpstable(i));
  }
  
  // repeated .tps.proto.RtTpsProtoSeriesGroup seriesGroup = 15;
  total_size += 1 * this->seriesgroup_size();
  for (int i = 0; i < this->seriesgroup_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->seriesgroup(i));
  }
  
  // repeated .tps.proto.ReferenceImage rtImageList = 16;
  total_size += 2 * this->rtimagelist_size();
  for (int i = 0; i < this->rtimagelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rtimagelist(i));
  }
  
  // repeated .tps.proto.RtTpsProtoSite siteList = 17;
  total_size += 2 * this->sitelist_size();
  for (int i = 0; i < this->sitelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sitelist(i));
  }
  
  // repeated .tps.proto.RT_TPS_DVHData dvhList = 18;
  total_size += 2 * this->dvhlist_size();
  for (int i = 0; i < this->dvhlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dvhlist(i));
  }
  
  // repeated .tps.proto.RtTpsProtoPoi maxPointList = 19;
  total_size += 2 * this->maxpointlist_size();
  for (int i = 0; i < this->maxpointlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->maxpointlist(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RtTpsProtoPatientTreeData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RtTpsProtoPatientTreeData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RtTpsProtoPatientTreeData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RtTpsProtoPatientTreeData::MergeFrom(const RtTpsProtoPatientTreeData& from) {
  GOOGLE_CHECK_NE(&from, this);
  courselist_.MergeFrom(from.courselist_);
  serieslist_.MergeFrom(from.serieslist_);
  voilist_.MergeFrom(from.voilist_);
  planlist_.MergeFrom(from.planlist_);
  poilist_.MergeFrom(from.poilist_);
  normalizationgrouplist_.MergeFrom(from.normalizationgrouplist_);
  beamlist_.MergeFrom(from.beamlist_);
  segmentlist_.MergeFrom(from.segmentlist_);
  prescriptionlist_.MergeFrom(from.prescriptionlist_);
  constraintlist_.MergeFrom(from.constraintlist_);
  doselinelist_.MergeFrom(from.doselinelist_);
  optgoallist_.MergeFrom(from.optgoallist_);
  tpstable_.MergeFrom(from.tpstable_);
  seriesgroup_.MergeFrom(from.seriesgroup_);
  rtimagelist_.MergeFrom(from.rtimagelist_);
  sitelist_.MergeFrom(from.sitelist_);
  dvhlist_.MergeFrom(from.dvhlist_);
  maxpointlist_.MergeFrom(from.maxpointlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_patient()) {
      mutable_patient()->::tps::proto::RtTpsProtoPatient::MergeFrom(from.patient());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RtTpsProtoPatientTreeData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RtTpsProtoPatientTreeData::CopyFrom(const RtTpsProtoPatientTreeData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RtTpsProtoPatientTreeData::IsInitialized() const {
  
  if (has_patient()) {
    if (!this->patient().IsInitialized()) return false;
  }
  for (int i = 0; i < courselist_size(); i++) {
    if (!this->courselist(i).IsInitialized()) return false;
  }
  for (int i = 0; i < serieslist_size(); i++) {
    if (!this->serieslist(i).IsInitialized()) return false;
  }
  for (int i = 0; i < voilist_size(); i++) {
    if (!this->voilist(i).IsInitialized()) return false;
  }
  for (int i = 0; i < planlist_size(); i++) {
    if (!this->planlist(i).IsInitialized()) return false;
  }
  for (int i = 0; i < poilist_size(); i++) {
    if (!this->poilist(i).IsInitialized()) return false;
  }
  for (int i = 0; i < normalizationgrouplist_size(); i++) {
    if (!this->normalizationgrouplist(i).IsInitialized()) return false;
  }
  for (int i = 0; i < beamlist_size(); i++) {
    if (!this->beamlist(i).IsInitialized()) return false;
  }
  for (int i = 0; i < segmentlist_size(); i++) {
    if (!this->segmentlist(i).IsInitialized()) return false;
  }
  for (int i = 0; i < prescriptionlist_size(); i++) {
    if (!this->prescriptionlist(i).IsInitialized()) return false;
  }
  for (int i = 0; i < constraintlist_size(); i++) {
    if (!this->constraintlist(i).IsInitialized()) return false;
  }
  for (int i = 0; i < doselinelist_size(); i++) {
    if (!this->doselinelist(i).IsInitialized()) return false;
  }
  for (int i = 0; i < tpstable_size(); i++) {
    if (!this->tpstable(i).IsInitialized()) return false;
  }
  for (int i = 0; i < seriesgroup_size(); i++) {
    if (!this->seriesgroup(i).IsInitialized()) return false;
  }
  for (int i = 0; i < dvhlist_size(); i++) {
    if (!this->dvhlist(i).IsInitialized()) return false;
  }
  for (int i = 0; i < maxpointlist_size(); i++) {
    if (!this->maxpointlist(i).IsInitialized()) return false;
  }
  return true;
}

void RtTpsProtoPatientTreeData::Swap(RtTpsProtoPatientTreeData* other) {
  if (other != this) {
    std::swap(patient_, other->patient_);
    courselist_.Swap(&other->courselist_);
    serieslist_.Swap(&other->serieslist_);
    voilist_.Swap(&other->voilist_);
    planlist_.Swap(&other->planlist_);
    poilist_.Swap(&other->poilist_);
    normalizationgrouplist_.Swap(&other->normalizationgrouplist_);
    beamlist_.Swap(&other->beamlist_);
    segmentlist_.Swap(&other->segmentlist_);
    prescriptionlist_.Swap(&other->prescriptionlist_);
    constraintlist_.Swap(&other->constraintlist_);
    doselinelist_.Swap(&other->doselinelist_);
    optgoallist_.Swap(&other->optgoallist_);
    tpstable_.Swap(&other->tpstable_);
    seriesgroup_.Swap(&other->seriesgroup_);
    rtimagelist_.Swap(&other->rtimagelist_);
    sitelist_.Swap(&other->sitelist_);
    dvhlist_.Swap(&other->dvhlist_);
    maxpointlist_.Swap(&other->maxpointlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RtTpsProtoPatientTreeData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RtTpsProtoPatientTreeData_descriptor_;
  metadata.reflection = RtTpsProtoPatientTreeData_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace tps

// @@protoc_insertion_point(global_scope)
