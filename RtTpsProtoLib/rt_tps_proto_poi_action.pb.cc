// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "rt_tps_proto_poi_action.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tps {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* RtTpsProtoPoiAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RtTpsProtoPoiAction_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_rt_5ftps_5fproto_5fpoi_5faction_2eproto() {
  protobuf_AddDesc_rt_5ftps_5fproto_5fpoi_5faction_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "rt_tps_proto_poi_action.proto");
  GOOGLE_CHECK(file != NULL);
  RtTpsProtoPoiAction_descriptor_ = file->message_type(0);
  static const int RtTpsProtoPoiAction_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoPoiAction, poi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoPoiAction, mouse_),
  };
  RtTpsProtoPoiAction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RtTpsProtoPoiAction_descriptor_,
      RtTpsProtoPoiAction::default_instance_,
      RtTpsProtoPoiAction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoPoiAction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoPoiAction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RtTpsProtoPoiAction));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_rt_5ftps_5fproto_5fpoi_5faction_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RtTpsProtoPoiAction_descriptor_, &RtTpsProtoPoiAction::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_rt_5ftps_5fproto_5fpoi_5faction_2eproto() {
  delete RtTpsProtoPoiAction::default_instance_;
  delete RtTpsProtoPoiAction_reflection_;
}

void protobuf_AddDesc_rt_5ftps_5fproto_5fpoi_5faction_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::tps::proto::protobuf_AddDesc_rt_5ftps_5fproto_5fpoi_2eproto();
  ::tps::proto::protobuf_AddDesc_rt_5ftps_5fproto_5fmouse_5faction_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\035rt_tps_proto_poi_action.proto\022\ttps.pro"
    "to\032\026rt_tps_proto_poi.proto\032\037rt_tps_proto"
    "_mouse_action.proto\"m\n\023RtTpsProtoPoiActi"
    "on\022%\n\003poi\030\001 \002(\0132\030.tps.proto.RtTpsProtoPo"
    "i\022/\n\005mouse\030\002 \002(\0132 .tps.proto.RtTpsProtoM"
    "ouseAction", 210);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rt_tps_proto_poi_action.proto", &protobuf_RegisterTypes);
  RtTpsProtoPoiAction::default_instance_ = new RtTpsProtoPoiAction();
  RtTpsProtoPoiAction::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_rt_5ftps_5fproto_5fpoi_5faction_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_rt_5ftps_5fproto_5fpoi_5faction_2eproto {
  StaticDescriptorInitializer_rt_5ftps_5fproto_5fpoi_5faction_2eproto() {
    protobuf_AddDesc_rt_5ftps_5fproto_5fpoi_5faction_2eproto();
  }
} static_descriptor_initializer_rt_5ftps_5fproto_5fpoi_5faction_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int RtTpsProtoPoiAction::kPoiFieldNumber;
const int RtTpsProtoPoiAction::kMouseFieldNumber;
#endif  // !_MSC_VER

RtTpsProtoPoiAction::RtTpsProtoPoiAction()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RtTpsProtoPoiAction::InitAsDefaultInstance() {
  poi_ = const_cast< ::tps::proto::RtTpsProtoPoi*>(&::tps::proto::RtTpsProtoPoi::default_instance());
  mouse_ = const_cast< ::tps::proto::RtTpsProtoMouseAction*>(&::tps::proto::RtTpsProtoMouseAction::default_instance());
}

RtTpsProtoPoiAction::RtTpsProtoPoiAction(const RtTpsProtoPoiAction& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RtTpsProtoPoiAction::SharedCtor() {
  _cached_size_ = 0;
  poi_ = NULL;
  mouse_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RtTpsProtoPoiAction::~RtTpsProtoPoiAction() {
  SharedDtor();
}

void RtTpsProtoPoiAction::SharedDtor() {
  if (this != default_instance_) {
    delete poi_;
    delete mouse_;
  }
}

void RtTpsProtoPoiAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RtTpsProtoPoiAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RtTpsProtoPoiAction_descriptor_;
}

const RtTpsProtoPoiAction& RtTpsProtoPoiAction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rt_5ftps_5fproto_5fpoi_5faction_2eproto();  return *default_instance_;
}

RtTpsProtoPoiAction* RtTpsProtoPoiAction::default_instance_ = NULL;

RtTpsProtoPoiAction* RtTpsProtoPoiAction::New() const {
  return new RtTpsProtoPoiAction;
}

void RtTpsProtoPoiAction::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_poi()) {
      if (poi_ != NULL) poi_->::tps::proto::RtTpsProtoPoi::Clear();
    }
    if (has_mouse()) {
      if (mouse_ != NULL) mouse_->::tps::proto::RtTpsProtoMouseAction::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RtTpsProtoPoiAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .tps.proto.RtTpsProtoPoi poi = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_poi()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_mouse;
        break;
      }
      
      // required .tps.proto.RtTpsProtoMouseAction mouse = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mouse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mouse()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RtTpsProtoPoiAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .tps.proto.RtTpsProtoPoi poi = 1;
  if (has_poi()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->poi(), output);
  }
  
  // required .tps.proto.RtTpsProtoMouseAction mouse = 2;
  if (has_mouse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->mouse(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RtTpsProtoPoiAction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .tps.proto.RtTpsProtoPoi poi = 1;
  if (has_poi()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->poi(), target);
  }
  
  // required .tps.proto.RtTpsProtoMouseAction mouse = 2;
  if (has_mouse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->mouse(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RtTpsProtoPoiAction::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .tps.proto.RtTpsProtoPoi poi = 1;
    if (has_poi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->poi());
    }
    
    // required .tps.proto.RtTpsProtoMouseAction mouse = 2;
    if (has_mouse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->mouse());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RtTpsProtoPoiAction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RtTpsProtoPoiAction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RtTpsProtoPoiAction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RtTpsProtoPoiAction::MergeFrom(const RtTpsProtoPoiAction& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_poi()) {
      mutable_poi()->::tps::proto::RtTpsProtoPoi::MergeFrom(from.poi());
    }
    if (from.has_mouse()) {
      mutable_mouse()->::tps::proto::RtTpsProtoMouseAction::MergeFrom(from.mouse());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RtTpsProtoPoiAction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RtTpsProtoPoiAction::CopyFrom(const RtTpsProtoPoiAction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RtTpsProtoPoiAction::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_poi()) {
    if (!this->poi().IsInitialized()) return false;
  }
  if (has_mouse()) {
    if (!this->mouse().IsInitialized()) return false;
  }
  return true;
}

void RtTpsProtoPoiAction::Swap(RtTpsProtoPoiAction* other) {
  if (other != this) {
    std::swap(poi_, other->poi_);
    std::swap(mouse_, other->mouse_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RtTpsProtoPoiAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RtTpsProtoPoiAction_descriptor_;
  metadata.reflection = RtTpsProtoPoiAction_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace tps

// @@protoc_insertion_point(global_scope)
