// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "rt_tps_optinput.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tps {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* RT_TPS_Optinput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RT_TPS_Optinput_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_rt_5ftps_5foptinput_2eproto() {
  protobuf_AddDesc_rt_5ftps_5foptinput_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "rt_tps_optinput.proto");
  GOOGLE_CHECK(file != NULL);
  RT_TPS_Optinput_descriptor_ = file->message_type(0);
  static const int RT_TPS_Optinput_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_Optinput, optnguid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_Optinput, basedonnguids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_Optinput, goals_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_Optinput, endcriterialtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_Optinput, endcriterialvalue_),
  };
  RT_TPS_Optinput_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RT_TPS_Optinput_descriptor_,
      RT_TPS_Optinput::default_instance_,
      RT_TPS_Optinput_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_Optinput, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_TPS_Optinput, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RT_TPS_Optinput));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_rt_5ftps_5foptinput_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RT_TPS_Optinput_descriptor_, &RT_TPS_Optinput::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_rt_5ftps_5foptinput_2eproto() {
  delete RT_TPS_Optinput::default_instance_;
  delete RT_TPS_Optinput_reflection_;
}

void protobuf_AddDesc_rt_5ftps_5foptinput_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::tps::proto::protobuf_AddDesc_rt_5ftps_5foptgoals_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025rt_tps_optinput.proto\022\ttps.proto\032\025rt_t"
    "ps_optgoals.proto\"\231\001\n\017RT_TPS_Optinput\022\020\n"
    "\010OptNgUid\030\001 \001(\t\022\025\n\rBasedOnNgUids\030\002 \003(\t\022("
    "\n\005goals\030\003 \003(\0132\031.tps.proto.RT_TPS_Optgoal"
    "\022\030\n\020endCriterialType\030\004 \001(\005\022\031\n\021endCriteri"
    "alValue\030\005 \001(\005", 213);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rt_tps_optinput.proto", &protobuf_RegisterTypes);
  RT_TPS_Optinput::default_instance_ = new RT_TPS_Optinput();
  RT_TPS_Optinput::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_rt_5ftps_5foptinput_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_rt_5ftps_5foptinput_2eproto {
  StaticDescriptorInitializer_rt_5ftps_5foptinput_2eproto() {
    protobuf_AddDesc_rt_5ftps_5foptinput_2eproto();
  }
} static_descriptor_initializer_rt_5ftps_5foptinput_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int RT_TPS_Optinput::kOptNgUidFieldNumber;
const int RT_TPS_Optinput::kBasedOnNgUidsFieldNumber;
const int RT_TPS_Optinput::kGoalsFieldNumber;
const int RT_TPS_Optinput::kEndCriterialTypeFieldNumber;
const int RT_TPS_Optinput::kEndCriterialValueFieldNumber;
#endif  // !_MSC_VER

RT_TPS_Optinput::RT_TPS_Optinput()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RT_TPS_Optinput::InitAsDefaultInstance() {
}

RT_TPS_Optinput::RT_TPS_Optinput(const RT_TPS_Optinput& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RT_TPS_Optinput::SharedCtor() {
  _cached_size_ = 0;
  optnguid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  endcriterialtype_ = 0;
  endcriterialvalue_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RT_TPS_Optinput::~RT_TPS_Optinput() {
  SharedDtor();
}

void RT_TPS_Optinput::SharedDtor() {
  if (optnguid_ != &::google::protobuf::internal::kEmptyString) {
    delete optnguid_;
  }
  if (this != default_instance_) {
  }
}

void RT_TPS_Optinput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RT_TPS_Optinput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RT_TPS_Optinput_descriptor_;
}

const RT_TPS_Optinput& RT_TPS_Optinput::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rt_5ftps_5foptinput_2eproto();  return *default_instance_;
}

RT_TPS_Optinput* RT_TPS_Optinput::default_instance_ = NULL;

RT_TPS_Optinput* RT_TPS_Optinput::New() const {
  return new RT_TPS_Optinput;
}

void RT_TPS_Optinput::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_optnguid()) {
      if (optnguid_ != &::google::protobuf::internal::kEmptyString) {
        optnguid_->clear();
      }
    }
    endcriterialtype_ = 0;
    endcriterialvalue_ = 0;
  }
  basedonnguids_.Clear();
  goals_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RT_TPS_Optinput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string OptNgUid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optnguid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->optnguid().data(), this->optnguid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_BasedOnNgUids;
        break;
      }
      
      // repeated string BasedOnNgUids = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_BasedOnNgUids:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_basedonnguids()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->basedonnguids(0).data(), this->basedonnguids(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_BasedOnNgUids;
        if (input->ExpectTag(26)) goto parse_goals;
        break;
      }
      
      // repeated .tps.proto.RT_TPS_Optgoal goals = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_goals:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goals()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_goals;
        if (input->ExpectTag(32)) goto parse_endCriterialType;
        break;
      }
      
      // optional int32 endCriterialType = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_endCriterialType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &endcriterialtype_)));
          set_has_endcriterialtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_endCriterialValue;
        break;
      }
      
      // optional int32 endCriterialValue = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_endCriterialValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &endcriterialvalue_)));
          set_has_endcriterialvalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RT_TPS_Optinput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string OptNgUid = 1;
  if (has_optnguid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->optnguid().data(), this->optnguid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->optnguid(), output);
  }
  
  // repeated string BasedOnNgUids = 2;
  for (int i = 0; i < this->basedonnguids_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->basedonnguids(i).data(), this->basedonnguids(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->basedonnguids(i), output);
  }
  
  // repeated .tps.proto.RT_TPS_Optgoal goals = 3;
  for (int i = 0; i < this->goals_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->goals(i), output);
  }
  
  // optional int32 endCriterialType = 4;
  if (has_endcriterialtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->endcriterialtype(), output);
  }
  
  // optional int32 endCriterialValue = 5;
  if (has_endcriterialvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->endcriterialvalue(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RT_TPS_Optinput::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string OptNgUid = 1;
  if (has_optnguid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->optnguid().data(), this->optnguid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->optnguid(), target);
  }
  
  // repeated string BasedOnNgUids = 2;
  for (int i = 0; i < this->basedonnguids_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->basedonnguids(i).data(), this->basedonnguids(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->basedonnguids(i), target);
  }
  
  // repeated .tps.proto.RT_TPS_Optgoal goals = 3;
  for (int i = 0; i < this->goals_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->goals(i), target);
  }
  
  // optional int32 endCriterialType = 4;
  if (has_endcriterialtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->endcriterialtype(), target);
  }
  
  // optional int32 endCriterialValue = 5;
  if (has_endcriterialvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->endcriterialvalue(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RT_TPS_Optinput::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string OptNgUid = 1;
    if (has_optnguid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->optnguid());
    }
    
    // optional int32 endCriterialType = 4;
    if (has_endcriterialtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->endcriterialtype());
    }
    
    // optional int32 endCriterialValue = 5;
    if (has_endcriterialvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->endcriterialvalue());
    }
    
  }
  // repeated string BasedOnNgUids = 2;
  total_size += 1 * this->basedonnguids_size();
  for (int i = 0; i < this->basedonnguids_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->basedonnguids(i));
  }
  
  // repeated .tps.proto.RT_TPS_Optgoal goals = 3;
  total_size += 1 * this->goals_size();
  for (int i = 0; i < this->goals_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goals(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RT_TPS_Optinput::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RT_TPS_Optinput* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RT_TPS_Optinput*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RT_TPS_Optinput::MergeFrom(const RT_TPS_Optinput& from) {
  GOOGLE_CHECK_NE(&from, this);
  basedonnguids_.MergeFrom(from.basedonnguids_);
  goals_.MergeFrom(from.goals_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_optnguid()) {
      set_optnguid(from.optnguid());
    }
    if (from.has_endcriterialtype()) {
      set_endcriterialtype(from.endcriterialtype());
    }
    if (from.has_endcriterialvalue()) {
      set_endcriterialvalue(from.endcriterialvalue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RT_TPS_Optinput::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RT_TPS_Optinput::CopyFrom(const RT_TPS_Optinput& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RT_TPS_Optinput::IsInitialized() const {
  
  return true;
}

void RT_TPS_Optinput::Swap(RT_TPS_Optinput* other) {
  if (other != this) {
    std::swap(optnguid_, other->optnguid_);
    basedonnguids_.Swap(&other->basedonnguids_);
    goals_.Swap(&other->goals_);
    std::swap(endcriterialtype_, other->endcriterialtype_);
    std::swap(endcriterialvalue_, other->endcriterialvalue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RT_TPS_Optinput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RT_TPS_Optinput_descriptor_;
  metadata.reflection = RT_TPS_Optinput_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace tps

// @@protoc_insertion_point(global_scope)
