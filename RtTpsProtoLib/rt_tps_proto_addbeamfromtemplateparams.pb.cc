// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "rt_tps_proto_addbeamfromtemplateparams.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tps {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* RtTpsProtoAddBeamFromTemplateParams_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RtTpsProtoAddBeamFromTemplateParams_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_rt_5ftps_5fproto_5faddbeamfromtemplateparams_2eproto() {
  protobuf_AddDesc_rt_5ftps_5fproto_5faddbeamfromtemplateparams_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "rt_tps_proto_addbeamfromtemplateparams.proto");
  GOOGLE_CHECK(file != NULL);
  RtTpsProtoAddBeamFromTemplateParams_descriptor_ = file->message_type(0);
  static const int RtTpsProtoAddBeamFromTemplateParams_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoAddBeamFromTemplateParams, beamtemplateuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoAddBeamFromTemplateParams, normalizationgroupuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoAddBeamFromTemplateParams, commissionedunituid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoAddBeamFromTemplateParams, isocenteruid_),
  };
  RtTpsProtoAddBeamFromTemplateParams_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RtTpsProtoAddBeamFromTemplateParams_descriptor_,
      RtTpsProtoAddBeamFromTemplateParams::default_instance_,
      RtTpsProtoAddBeamFromTemplateParams_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoAddBeamFromTemplateParams, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoAddBeamFromTemplateParams, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RtTpsProtoAddBeamFromTemplateParams));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_rt_5ftps_5fproto_5faddbeamfromtemplateparams_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RtTpsProtoAddBeamFromTemplateParams_descriptor_, &RtTpsProtoAddBeamFromTemplateParams::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_rt_5ftps_5fproto_5faddbeamfromtemplateparams_2eproto() {
  delete RtTpsProtoAddBeamFromTemplateParams::default_instance_;
  delete RtTpsProtoAddBeamFromTemplateParams_reflection_;
}

void protobuf_AddDesc_rt_5ftps_5fproto_5faddbeamfromtemplateparams_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n,rt_tps_proto_addbeamfromtemplateparams"
    ".proto\022\ttps.proto\"\220\001\n#RtTpsProtoAddBeamF"
    "romTemplateParams\022\027\n\017beamTemplateUID\030\001 \001"
    "(\t\022\035\n\025normalizationGroupUID\030\002 \001(\t\022\033\n\023com"
    "missionedUnitUID\030\003 \001(\t\022\024\n\014isocenterUID\030\004"
    " \001(\t", 204);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rt_tps_proto_addbeamfromtemplateparams.proto", &protobuf_RegisterTypes);
  RtTpsProtoAddBeamFromTemplateParams::default_instance_ = new RtTpsProtoAddBeamFromTemplateParams();
  RtTpsProtoAddBeamFromTemplateParams::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_rt_5ftps_5fproto_5faddbeamfromtemplateparams_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_rt_5ftps_5fproto_5faddbeamfromtemplateparams_2eproto {
  StaticDescriptorInitializer_rt_5ftps_5fproto_5faddbeamfromtemplateparams_2eproto() {
    protobuf_AddDesc_rt_5ftps_5fproto_5faddbeamfromtemplateparams_2eproto();
  }
} static_descriptor_initializer_rt_5ftps_5fproto_5faddbeamfromtemplateparams_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int RtTpsProtoAddBeamFromTemplateParams::kBeamTemplateUIDFieldNumber;
const int RtTpsProtoAddBeamFromTemplateParams::kNormalizationGroupUIDFieldNumber;
const int RtTpsProtoAddBeamFromTemplateParams::kCommissionedUnitUIDFieldNumber;
const int RtTpsProtoAddBeamFromTemplateParams::kIsocenterUIDFieldNumber;
#endif  // !_MSC_VER

RtTpsProtoAddBeamFromTemplateParams::RtTpsProtoAddBeamFromTemplateParams()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RtTpsProtoAddBeamFromTemplateParams::InitAsDefaultInstance() {
}

RtTpsProtoAddBeamFromTemplateParams::RtTpsProtoAddBeamFromTemplateParams(const RtTpsProtoAddBeamFromTemplateParams& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RtTpsProtoAddBeamFromTemplateParams::SharedCtor() {
  _cached_size_ = 0;
  beamtemplateuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  normalizationgroupuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  commissionedunituid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  isocenteruid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RtTpsProtoAddBeamFromTemplateParams::~RtTpsProtoAddBeamFromTemplateParams() {
  SharedDtor();
}

void RtTpsProtoAddBeamFromTemplateParams::SharedDtor() {
  if (beamtemplateuid_ != &::google::protobuf::internal::kEmptyString) {
    delete beamtemplateuid_;
  }
  if (normalizationgroupuid_ != &::google::protobuf::internal::kEmptyString) {
    delete normalizationgroupuid_;
  }
  if (commissionedunituid_ != &::google::protobuf::internal::kEmptyString) {
    delete commissionedunituid_;
  }
  if (isocenteruid_ != &::google::protobuf::internal::kEmptyString) {
    delete isocenteruid_;
  }
  if (this != default_instance_) {
  }
}

void RtTpsProtoAddBeamFromTemplateParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RtTpsProtoAddBeamFromTemplateParams::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RtTpsProtoAddBeamFromTemplateParams_descriptor_;
}

const RtTpsProtoAddBeamFromTemplateParams& RtTpsProtoAddBeamFromTemplateParams::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rt_5ftps_5fproto_5faddbeamfromtemplateparams_2eproto();  return *default_instance_;
}

RtTpsProtoAddBeamFromTemplateParams* RtTpsProtoAddBeamFromTemplateParams::default_instance_ = NULL;

RtTpsProtoAddBeamFromTemplateParams* RtTpsProtoAddBeamFromTemplateParams::New() const {
  return new RtTpsProtoAddBeamFromTemplateParams;
}

void RtTpsProtoAddBeamFromTemplateParams::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_beamtemplateuid()) {
      if (beamtemplateuid_ != &::google::protobuf::internal::kEmptyString) {
        beamtemplateuid_->clear();
      }
    }
    if (has_normalizationgroupuid()) {
      if (normalizationgroupuid_ != &::google::protobuf::internal::kEmptyString) {
        normalizationgroupuid_->clear();
      }
    }
    if (has_commissionedunituid()) {
      if (commissionedunituid_ != &::google::protobuf::internal::kEmptyString) {
        commissionedunituid_->clear();
      }
    }
    if (has_isocenteruid()) {
      if (isocenteruid_ != &::google::protobuf::internal::kEmptyString) {
        isocenteruid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RtTpsProtoAddBeamFromTemplateParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string beamTemplateUID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_beamtemplateuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->beamtemplateuid().data(), this->beamtemplateuid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_normalizationGroupUID;
        break;
      }
      
      // optional string normalizationGroupUID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_normalizationGroupUID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_normalizationgroupuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->normalizationgroupuid().data(), this->normalizationgroupuid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_commissionedUnitUID;
        break;
      }
      
      // optional string commissionedUnitUID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_commissionedUnitUID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_commissionedunituid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->commissionedunituid().data(), this->commissionedunituid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_isocenterUID;
        break;
      }
      
      // optional string isocenterUID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_isocenterUID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_isocenteruid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->isocenteruid().data(), this->isocenteruid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RtTpsProtoAddBeamFromTemplateParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string beamTemplateUID = 1;
  if (has_beamtemplateuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->beamtemplateuid().data(), this->beamtemplateuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->beamtemplateuid(), output);
  }
  
  // optional string normalizationGroupUID = 2;
  if (has_normalizationgroupuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->normalizationgroupuid().data(), this->normalizationgroupuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->normalizationgroupuid(), output);
  }
  
  // optional string commissionedUnitUID = 3;
  if (has_commissionedunituid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->commissionedunituid().data(), this->commissionedunituid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->commissionedunituid(), output);
  }
  
  // optional string isocenterUID = 4;
  if (has_isocenteruid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->isocenteruid().data(), this->isocenteruid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->isocenteruid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RtTpsProtoAddBeamFromTemplateParams::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string beamTemplateUID = 1;
  if (has_beamtemplateuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->beamtemplateuid().data(), this->beamtemplateuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->beamtemplateuid(), target);
  }
  
  // optional string normalizationGroupUID = 2;
  if (has_normalizationgroupuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->normalizationgroupuid().data(), this->normalizationgroupuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->normalizationgroupuid(), target);
  }
  
  // optional string commissionedUnitUID = 3;
  if (has_commissionedunituid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->commissionedunituid().data(), this->commissionedunituid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->commissionedunituid(), target);
  }
  
  // optional string isocenterUID = 4;
  if (has_isocenteruid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->isocenteruid().data(), this->isocenteruid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->isocenteruid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RtTpsProtoAddBeamFromTemplateParams::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string beamTemplateUID = 1;
    if (has_beamtemplateuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->beamtemplateuid());
    }
    
    // optional string normalizationGroupUID = 2;
    if (has_normalizationgroupuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->normalizationgroupuid());
    }
    
    // optional string commissionedUnitUID = 3;
    if (has_commissionedunituid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->commissionedunituid());
    }
    
    // optional string isocenterUID = 4;
    if (has_isocenteruid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->isocenteruid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RtTpsProtoAddBeamFromTemplateParams::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RtTpsProtoAddBeamFromTemplateParams* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RtTpsProtoAddBeamFromTemplateParams*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RtTpsProtoAddBeamFromTemplateParams::MergeFrom(const RtTpsProtoAddBeamFromTemplateParams& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_beamtemplateuid()) {
      set_beamtemplateuid(from.beamtemplateuid());
    }
    if (from.has_normalizationgroupuid()) {
      set_normalizationgroupuid(from.normalizationgroupuid());
    }
    if (from.has_commissionedunituid()) {
      set_commissionedunituid(from.commissionedunituid());
    }
    if (from.has_isocenteruid()) {
      set_isocenteruid(from.isocenteruid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RtTpsProtoAddBeamFromTemplateParams::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RtTpsProtoAddBeamFromTemplateParams::CopyFrom(const RtTpsProtoAddBeamFromTemplateParams& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RtTpsProtoAddBeamFromTemplateParams::IsInitialized() const {
  
  return true;
}

void RtTpsProtoAddBeamFromTemplateParams::Swap(RtTpsProtoAddBeamFromTemplateParams* other) {
  if (other != this) {
    std::swap(beamtemplateuid_, other->beamtemplateuid_);
    std::swap(normalizationgroupuid_, other->normalizationgroupuid_);
    std::swap(commissionedunituid_, other->commissionedunituid_);
    std::swap(isocenteruid_, other->isocenteruid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RtTpsProtoAddBeamFromTemplateParams::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RtTpsProtoAddBeamFromTemplateParams_descriptor_;
  metadata.reflection = RtTpsProtoAddBeamFromTemplateParams_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace tps

// @@protoc_insertion_point(global_scope)
