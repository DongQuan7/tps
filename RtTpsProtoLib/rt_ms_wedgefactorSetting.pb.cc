// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "rt_ms_wedgefactorSetting.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ms {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* RT_MS_WedgeFactorSettingInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RT_MS_WedgeFactorSettingInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* RT_MS_WedgeFactorSettingInfoList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RT_MS_WedgeFactorSettingInfoList_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_rt_5fms_5fwedgefactorSetting_2eproto() {
  protobuf_AddDesc_rt_5fms_5fwedgefactorSetting_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "rt_ms_wedgefactorSetting.proto");
  GOOGLE_CHECK(file != NULL);
  RT_MS_WedgeFactorSettingInfo_descriptor_ = file->message_type(0);
  static const int RT_MS_WedgeFactorSettingInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_MS_WedgeFactorSettingInfo, accessoryuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_MS_WedgeFactorSettingInfo, fieldsizex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_MS_WedgeFactorSettingInfo, fieldsizey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_MS_WedgeFactorSettingInfo, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_MS_WedgeFactorSettingInfo, accessoryname_),
  };
  RT_MS_WedgeFactorSettingInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RT_MS_WedgeFactorSettingInfo_descriptor_,
      RT_MS_WedgeFactorSettingInfo::default_instance_,
      RT_MS_WedgeFactorSettingInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_MS_WedgeFactorSettingInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_MS_WedgeFactorSettingInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RT_MS_WedgeFactorSettingInfo));
  RT_MS_WedgeFactorSettingInfoList_descriptor_ = file->message_type(1);
  static const int RT_MS_WedgeFactorSettingInfoList_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_MS_WedgeFactorSettingInfoList, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_MS_WedgeFactorSettingInfoList, parentuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_MS_WedgeFactorSettingInfoList, wedgefactorlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_MS_WedgeFactorSettingInfoList, wedgefactordepth_),
  };
  RT_MS_WedgeFactorSettingInfoList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RT_MS_WedgeFactorSettingInfoList_descriptor_,
      RT_MS_WedgeFactorSettingInfoList::default_instance_,
      RT_MS_WedgeFactorSettingInfoList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_MS_WedgeFactorSettingInfoList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_MS_WedgeFactorSettingInfoList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RT_MS_WedgeFactorSettingInfoList));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_rt_5fms_5fwedgefactorSetting_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RT_MS_WedgeFactorSettingInfo_descriptor_, &RT_MS_WedgeFactorSettingInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RT_MS_WedgeFactorSettingInfoList_descriptor_, &RT_MS_WedgeFactorSettingInfoList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_rt_5fms_5fwedgefactorSetting_2eproto() {
  delete RT_MS_WedgeFactorSettingInfo::default_instance_;
  delete RT_MS_WedgeFactorSettingInfo_reflection_;
  delete RT_MS_WedgeFactorSettingInfoList::default_instance_;
  delete RT_MS_WedgeFactorSettingInfoList_reflection_;
}

void protobuf_AddDesc_rt_5fms_5fwedgefactorSetting_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\036rt_ms_wedgefactorSetting.proto\022\010ms.pro"
    "to\"\202\001\n\034RT_MS_WedgeFactorSettingInfo\022\024\n\014a"
    "ccessoryUID\030\001 \001(\t\022\022\n\nfieldSizeX\030\002 \001(\002\022\022\n"
    "\nfieldSizeY\030\003 \001(\002\022\r\n\005value\030\004 \001(\002\022\025\n\racce"
    "ssoryName\030\005 \001(\t\"\235\001\n RT_MS_WedgeFactorSet"
    "tingInfoList\022\013\n\003uid\030\001 \001(\t\022\021\n\tparentUID\030\002"
    " \001(\t\022\?\n\017wedgeFactorList\030\003 \003(\0132&.ms.proto"
    ".RT_MS_WedgeFactorSettingInfo\022\030\n\020wedgefa"
    "ctordepth\030\004 \001(\002", 335);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rt_ms_wedgefactorSetting.proto", &protobuf_RegisterTypes);
  RT_MS_WedgeFactorSettingInfo::default_instance_ = new RT_MS_WedgeFactorSettingInfo();
  RT_MS_WedgeFactorSettingInfoList::default_instance_ = new RT_MS_WedgeFactorSettingInfoList();
  RT_MS_WedgeFactorSettingInfo::default_instance_->InitAsDefaultInstance();
  RT_MS_WedgeFactorSettingInfoList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_rt_5fms_5fwedgefactorSetting_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_rt_5fms_5fwedgefactorSetting_2eproto {
  StaticDescriptorInitializer_rt_5fms_5fwedgefactorSetting_2eproto() {
    protobuf_AddDesc_rt_5fms_5fwedgefactorSetting_2eproto();
  }
} static_descriptor_initializer_rt_5fms_5fwedgefactorSetting_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int RT_MS_WedgeFactorSettingInfo::kAccessoryUIDFieldNumber;
const int RT_MS_WedgeFactorSettingInfo::kFieldSizeXFieldNumber;
const int RT_MS_WedgeFactorSettingInfo::kFieldSizeYFieldNumber;
const int RT_MS_WedgeFactorSettingInfo::kValueFieldNumber;
const int RT_MS_WedgeFactorSettingInfo::kAccessoryNameFieldNumber;
#endif  // !_MSC_VER

RT_MS_WedgeFactorSettingInfo::RT_MS_WedgeFactorSettingInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RT_MS_WedgeFactorSettingInfo::InitAsDefaultInstance() {
}

RT_MS_WedgeFactorSettingInfo::RT_MS_WedgeFactorSettingInfo(const RT_MS_WedgeFactorSettingInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RT_MS_WedgeFactorSettingInfo::SharedCtor() {
  _cached_size_ = 0;
  accessoryuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  fieldsizex_ = 0;
  fieldsizey_ = 0;
  value_ = 0;
  accessoryname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RT_MS_WedgeFactorSettingInfo::~RT_MS_WedgeFactorSettingInfo() {
  SharedDtor();
}

void RT_MS_WedgeFactorSettingInfo::SharedDtor() {
  if (accessoryuid_ != &::google::protobuf::internal::kEmptyString) {
    delete accessoryuid_;
  }
  if (accessoryname_ != &::google::protobuf::internal::kEmptyString) {
    delete accessoryname_;
  }
  if (this != default_instance_) {
  }
}

void RT_MS_WedgeFactorSettingInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RT_MS_WedgeFactorSettingInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RT_MS_WedgeFactorSettingInfo_descriptor_;
}

const RT_MS_WedgeFactorSettingInfo& RT_MS_WedgeFactorSettingInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rt_5fms_5fwedgefactorSetting_2eproto();  return *default_instance_;
}

RT_MS_WedgeFactorSettingInfo* RT_MS_WedgeFactorSettingInfo::default_instance_ = NULL;

RT_MS_WedgeFactorSettingInfo* RT_MS_WedgeFactorSettingInfo::New() const {
  return new RT_MS_WedgeFactorSettingInfo;
}

void RT_MS_WedgeFactorSettingInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_accessoryuid()) {
      if (accessoryuid_ != &::google::protobuf::internal::kEmptyString) {
        accessoryuid_->clear();
      }
    }
    fieldsizex_ = 0;
    fieldsizey_ = 0;
    value_ = 0;
    if (has_accessoryname()) {
      if (accessoryname_ != &::google::protobuf::internal::kEmptyString) {
        accessoryname_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RT_MS_WedgeFactorSettingInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string accessoryUID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accessoryuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->accessoryuid().data(), this->accessoryuid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(21)) goto parse_fieldSizeX;
        break;
      }
      
      // optional float fieldSizeX = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_fieldSizeX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fieldsizex_)));
          set_has_fieldsizex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(29)) goto parse_fieldSizeY;
        break;
      }
      
      // optional float fieldSizeY = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_fieldSizeY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fieldsizey_)));
          set_has_fieldsizey();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(37)) goto parse_value;
        break;
      }
      
      // optional float value = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_accessoryName;
        break;
      }
      
      // optional string accessoryName = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_accessoryName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accessoryname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->accessoryname().data(), this->accessoryname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RT_MS_WedgeFactorSettingInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string accessoryUID = 1;
  if (has_accessoryuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->accessoryuid().data(), this->accessoryuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->accessoryuid(), output);
  }
  
  // optional float fieldSizeX = 2;
  if (has_fieldsizex()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->fieldsizex(), output);
  }
  
  // optional float fieldSizeY = 3;
  if (has_fieldsizey()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->fieldsizey(), output);
  }
  
  // optional float value = 4;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->value(), output);
  }
  
  // optional string accessoryName = 5;
  if (has_accessoryname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->accessoryname().data(), this->accessoryname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->accessoryname(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RT_MS_WedgeFactorSettingInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string accessoryUID = 1;
  if (has_accessoryuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->accessoryuid().data(), this->accessoryuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->accessoryuid(), target);
  }
  
  // optional float fieldSizeX = 2;
  if (has_fieldsizex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->fieldsizex(), target);
  }
  
  // optional float fieldSizeY = 3;
  if (has_fieldsizey()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->fieldsizey(), target);
  }
  
  // optional float value = 4;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->value(), target);
  }
  
  // optional string accessoryName = 5;
  if (has_accessoryname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->accessoryname().data(), this->accessoryname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->accessoryname(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RT_MS_WedgeFactorSettingInfo::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string accessoryUID = 1;
    if (has_accessoryuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->accessoryuid());
    }
    
    // optional float fieldSizeX = 2;
    if (has_fieldsizex()) {
      total_size += 1 + 4;
    }
    
    // optional float fieldSizeY = 3;
    if (has_fieldsizey()) {
      total_size += 1 + 4;
    }
    
    // optional float value = 4;
    if (has_value()) {
      total_size += 1 + 4;
    }
    
    // optional string accessoryName = 5;
    if (has_accessoryname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->accessoryname());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RT_MS_WedgeFactorSettingInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RT_MS_WedgeFactorSettingInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RT_MS_WedgeFactorSettingInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RT_MS_WedgeFactorSettingInfo::MergeFrom(const RT_MS_WedgeFactorSettingInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_accessoryuid()) {
      set_accessoryuid(from.accessoryuid());
    }
    if (from.has_fieldsizex()) {
      set_fieldsizex(from.fieldsizex());
    }
    if (from.has_fieldsizey()) {
      set_fieldsizey(from.fieldsizey());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
    if (from.has_accessoryname()) {
      set_accessoryname(from.accessoryname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RT_MS_WedgeFactorSettingInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RT_MS_WedgeFactorSettingInfo::CopyFrom(const RT_MS_WedgeFactorSettingInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RT_MS_WedgeFactorSettingInfo::IsInitialized() const {
  
  return true;
}

void RT_MS_WedgeFactorSettingInfo::Swap(RT_MS_WedgeFactorSettingInfo* other) {
  if (other != this) {
    std::swap(accessoryuid_, other->accessoryuid_);
    std::swap(fieldsizex_, other->fieldsizex_);
    std::swap(fieldsizey_, other->fieldsizey_);
    std::swap(value_, other->value_);
    std::swap(accessoryname_, other->accessoryname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RT_MS_WedgeFactorSettingInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RT_MS_WedgeFactorSettingInfo_descriptor_;
  metadata.reflection = RT_MS_WedgeFactorSettingInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RT_MS_WedgeFactorSettingInfoList::kUidFieldNumber;
const int RT_MS_WedgeFactorSettingInfoList::kParentUIDFieldNumber;
const int RT_MS_WedgeFactorSettingInfoList::kWedgeFactorListFieldNumber;
const int RT_MS_WedgeFactorSettingInfoList::kWedgefactordepthFieldNumber;
#endif  // !_MSC_VER

RT_MS_WedgeFactorSettingInfoList::RT_MS_WedgeFactorSettingInfoList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RT_MS_WedgeFactorSettingInfoList::InitAsDefaultInstance() {
}

RT_MS_WedgeFactorSettingInfoList::RT_MS_WedgeFactorSettingInfoList(const RT_MS_WedgeFactorSettingInfoList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RT_MS_WedgeFactorSettingInfoList::SharedCtor() {
  _cached_size_ = 0;
  uid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  parentuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  wedgefactordepth_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RT_MS_WedgeFactorSettingInfoList::~RT_MS_WedgeFactorSettingInfoList() {
  SharedDtor();
}

void RT_MS_WedgeFactorSettingInfoList::SharedDtor() {
  if (uid_ != &::google::protobuf::internal::kEmptyString) {
    delete uid_;
  }
  if (parentuid_ != &::google::protobuf::internal::kEmptyString) {
    delete parentuid_;
  }
  if (this != default_instance_) {
  }
}

void RT_MS_WedgeFactorSettingInfoList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RT_MS_WedgeFactorSettingInfoList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RT_MS_WedgeFactorSettingInfoList_descriptor_;
}

const RT_MS_WedgeFactorSettingInfoList& RT_MS_WedgeFactorSettingInfoList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rt_5fms_5fwedgefactorSetting_2eproto();  return *default_instance_;
}

RT_MS_WedgeFactorSettingInfoList* RT_MS_WedgeFactorSettingInfoList::default_instance_ = NULL;

RT_MS_WedgeFactorSettingInfoList* RT_MS_WedgeFactorSettingInfoList::New() const {
  return new RT_MS_WedgeFactorSettingInfoList;
}

void RT_MS_WedgeFactorSettingInfoList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_uid()) {
      if (uid_ != &::google::protobuf::internal::kEmptyString) {
        uid_->clear();
      }
    }
    if (has_parentuid()) {
      if (parentuid_ != &::google::protobuf::internal::kEmptyString) {
        parentuid_->clear();
      }
    }
    wedgefactordepth_ = 0;
  }
  wedgefactorlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RT_MS_WedgeFactorSettingInfoList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string uid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->uid().data(), this->uid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_parentUID;
        break;
      }
      
      // optional string parentUID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_parentUID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parentuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->parentuid().data(), this->parentuid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_wedgeFactorList;
        break;
      }
      
      // repeated .ms.proto.RT_MS_WedgeFactorSettingInfo wedgeFactorList = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_wedgeFactorList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_wedgefactorlist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_wedgeFactorList;
        if (input->ExpectTag(37)) goto parse_wedgefactordepth;
        break;
      }
      
      // optional float wedgefactordepth = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_wedgefactordepth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &wedgefactordepth_)));
          set_has_wedgefactordepth();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RT_MS_WedgeFactorSettingInfoList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->uid(), output);
  }
  
  // optional string parentUID = 2;
  if (has_parentuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->parentuid().data(), this->parentuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->parentuid(), output);
  }
  
  // repeated .ms.proto.RT_MS_WedgeFactorSettingInfo wedgeFactorList = 3;
  for (int i = 0; i < this->wedgefactorlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->wedgefactorlist(i), output);
  }
  
  // optional float wedgefactordepth = 4;
  if (has_wedgefactordepth()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->wedgefactordepth(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RT_MS_WedgeFactorSettingInfoList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }
  
  // optional string parentUID = 2;
  if (has_parentuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->parentuid().data(), this->parentuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->parentuid(), target);
  }
  
  // repeated .ms.proto.RT_MS_WedgeFactorSettingInfo wedgeFactorList = 3;
  for (int i = 0; i < this->wedgefactorlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->wedgefactorlist(i), target);
  }
  
  // optional float wedgefactordepth = 4;
  if (has_wedgefactordepth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->wedgefactordepth(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RT_MS_WedgeFactorSettingInfoList::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uid());
    }
    
    // optional string parentUID = 2;
    if (has_parentuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->parentuid());
    }
    
    // optional float wedgefactordepth = 4;
    if (has_wedgefactordepth()) {
      total_size += 1 + 4;
    }
    
  }
  // repeated .ms.proto.RT_MS_WedgeFactorSettingInfo wedgeFactorList = 3;
  total_size += 1 * this->wedgefactorlist_size();
  for (int i = 0; i < this->wedgefactorlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->wedgefactorlist(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RT_MS_WedgeFactorSettingInfoList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RT_MS_WedgeFactorSettingInfoList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RT_MS_WedgeFactorSettingInfoList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RT_MS_WedgeFactorSettingInfoList::MergeFrom(const RT_MS_WedgeFactorSettingInfoList& from) {
  GOOGLE_CHECK_NE(&from, this);
  wedgefactorlist_.MergeFrom(from.wedgefactorlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_parentuid()) {
      set_parentuid(from.parentuid());
    }
    if (from.has_wedgefactordepth()) {
      set_wedgefactordepth(from.wedgefactordepth());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RT_MS_WedgeFactorSettingInfoList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RT_MS_WedgeFactorSettingInfoList::CopyFrom(const RT_MS_WedgeFactorSettingInfoList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RT_MS_WedgeFactorSettingInfoList::IsInitialized() const {
  
  return true;
}

void RT_MS_WedgeFactorSettingInfoList::Swap(RT_MS_WedgeFactorSettingInfoList* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(parentuid_, other->parentuid_);
    wedgefactorlist_.Swap(&other->wedgefactorlist_);
    std::swap(wedgefactordepth_, other->wedgefactordepth_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RT_MS_WedgeFactorSettingInfoList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RT_MS_WedgeFactorSettingInfoList_descriptor_;
  metadata.reflection = RT_MS_WedgeFactorSettingInfoList_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace ms

// @@protoc_insertion_point(global_scope)
