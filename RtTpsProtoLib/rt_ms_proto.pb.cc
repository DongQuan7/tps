// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "rt_ms_proto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ms {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* RT_MS_Proto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RT_MS_Proto_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_rt_5fms_5fproto_2eproto() {
  protobuf_AddDesc_rt_5fms_5fproto_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "rt_ms_proto.proto");
  GOOGLE_CHECK(file != NULL);
  RT_MS_Proto_descriptor_ = file->message_type(0);
  static const int RT_MS_Proto_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_MS_Proto, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_MS_Proto, objecttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_MS_Proto, parent_uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_MS_Proto, algtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_MS_Proto, filename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_MS_Proto, physicalwedgeuidlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_MS_Proto, virtualwedgeuidlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_MS_Proto, uid2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_MS_Proto, uid3_),
  };
  RT_MS_Proto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RT_MS_Proto_descriptor_,
      RT_MS_Proto::default_instance_,
      RT_MS_Proto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_MS_Proto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RT_MS_Proto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RT_MS_Proto));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_rt_5fms_5fproto_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RT_MS_Proto_descriptor_, &RT_MS_Proto::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_rt_5fms_5fproto_2eproto() {
  delete RT_MS_Proto::default_instance_;
  delete RT_MS_Proto_reflection_;
}

void protobuf_AddDesc_rt_5fms_5fproto_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021rt_ms_proto.proto\022\010ms.proto\"\274\001\n\013RT_MS_"
    "Proto\022\013\n\003uid\030\001 \001(\t\022\022\n\nobjectType\030\002 \001(\t\022\022"
    "\n\nparent_uid\030\003 \001(\t\022\017\n\007algType\030\004 \001(\005\022\020\n\010f"
    "ilename\030\005 \003(\t\022\034\n\024physicalwedgeuidlist\030\006 "
    "\003(\t\022\033\n\023virtualwedgeuidlist\030\007 \003(\t\022\014\n\004uid2"
    "\030\010 \001(\t\022\014\n\004uid3\030\t \001(\t", 220);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rt_ms_proto.proto", &protobuf_RegisterTypes);
  RT_MS_Proto::default_instance_ = new RT_MS_Proto();
  RT_MS_Proto::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_rt_5fms_5fproto_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_rt_5fms_5fproto_2eproto {
  StaticDescriptorInitializer_rt_5fms_5fproto_2eproto() {
    protobuf_AddDesc_rt_5fms_5fproto_2eproto();
  }
} static_descriptor_initializer_rt_5fms_5fproto_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int RT_MS_Proto::kUidFieldNumber;
const int RT_MS_Proto::kObjectTypeFieldNumber;
const int RT_MS_Proto::kParentUidFieldNumber;
const int RT_MS_Proto::kAlgTypeFieldNumber;
const int RT_MS_Proto::kFilenameFieldNumber;
const int RT_MS_Proto::kPhysicalwedgeuidlistFieldNumber;
const int RT_MS_Proto::kVirtualwedgeuidlistFieldNumber;
const int RT_MS_Proto::kUid2FieldNumber;
const int RT_MS_Proto::kUid3FieldNumber;
#endif  // !_MSC_VER

RT_MS_Proto::RT_MS_Proto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RT_MS_Proto::InitAsDefaultInstance() {
}

RT_MS_Proto::RT_MS_Proto(const RT_MS_Proto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RT_MS_Proto::SharedCtor() {
  _cached_size_ = 0;
  uid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  objecttype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  parent_uid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  algtype_ = 0;
  uid2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  uid3_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RT_MS_Proto::~RT_MS_Proto() {
  SharedDtor();
}

void RT_MS_Proto::SharedDtor() {
  if (uid_ != &::google::protobuf::internal::kEmptyString) {
    delete uid_;
  }
  if (objecttype_ != &::google::protobuf::internal::kEmptyString) {
    delete objecttype_;
  }
  if (parent_uid_ != &::google::protobuf::internal::kEmptyString) {
    delete parent_uid_;
  }
  if (uid2_ != &::google::protobuf::internal::kEmptyString) {
    delete uid2_;
  }
  if (uid3_ != &::google::protobuf::internal::kEmptyString) {
    delete uid3_;
  }
  if (this != default_instance_) {
  }
}

void RT_MS_Proto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RT_MS_Proto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RT_MS_Proto_descriptor_;
}

const RT_MS_Proto& RT_MS_Proto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rt_5fms_5fproto_2eproto();  return *default_instance_;
}

RT_MS_Proto* RT_MS_Proto::default_instance_ = NULL;

RT_MS_Proto* RT_MS_Proto::New() const {
  return new RT_MS_Proto;
}

void RT_MS_Proto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_uid()) {
      if (uid_ != &::google::protobuf::internal::kEmptyString) {
        uid_->clear();
      }
    }
    if (has_objecttype()) {
      if (objecttype_ != &::google::protobuf::internal::kEmptyString) {
        objecttype_->clear();
      }
    }
    if (has_parent_uid()) {
      if (parent_uid_ != &::google::protobuf::internal::kEmptyString) {
        parent_uid_->clear();
      }
    }
    algtype_ = 0;
    if (has_uid2()) {
      if (uid2_ != &::google::protobuf::internal::kEmptyString) {
        uid2_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_uid3()) {
      if (uid3_ != &::google::protobuf::internal::kEmptyString) {
        uid3_->clear();
      }
    }
  }
  filename_.Clear();
  physicalwedgeuidlist_.Clear();
  virtualwedgeuidlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RT_MS_Proto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string uid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->uid().data(), this->uid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_objectType;
        break;
      }
      
      // optional string objectType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_objectType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_objecttype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->objecttype().data(), this->objecttype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_parent_uid;
        break;
      }
      
      // optional string parent_uid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_parent_uid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent_uid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->parent_uid().data(), this->parent_uid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_algType;
        break;
      }
      
      // optional int32 algType = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_algType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &algtype_)));
          set_has_algtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_filename;
        break;
      }
      
      // repeated string filename = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_filename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->filename(0).data(), this->filename(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_filename;
        if (input->ExpectTag(50)) goto parse_physicalwedgeuidlist;
        break;
      }
      
      // repeated string physicalwedgeuidlist = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_physicalwedgeuidlist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_physicalwedgeuidlist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->physicalwedgeuidlist(0).data(), this->physicalwedgeuidlist(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_physicalwedgeuidlist;
        if (input->ExpectTag(58)) goto parse_virtualwedgeuidlist;
        break;
      }
      
      // repeated string virtualwedgeuidlist = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_virtualwedgeuidlist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_virtualwedgeuidlist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->virtualwedgeuidlist(0).data(), this->virtualwedgeuidlist(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_virtualwedgeuidlist;
        if (input->ExpectTag(66)) goto parse_uid2;
        break;
      }
      
      // optional string uid2 = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_uid2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->uid2().data(), this->uid2().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_uid3;
        break;
      }
      
      // optional string uid3 = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_uid3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid3()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->uid3().data(), this->uid3().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RT_MS_Proto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->uid(), output);
  }
  
  // optional string objectType = 2;
  if (has_objecttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->objecttype().data(), this->objecttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->objecttype(), output);
  }
  
  // optional string parent_uid = 3;
  if (has_parent_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->parent_uid().data(), this->parent_uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->parent_uid(), output);
  }
  
  // optional int32 algType = 4;
  if (has_algtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->algtype(), output);
  }
  
  // repeated string filename = 5;
  for (int i = 0; i < this->filename_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->filename(i).data(), this->filename(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->filename(i), output);
  }
  
  // repeated string physicalwedgeuidlist = 6;
  for (int i = 0; i < this->physicalwedgeuidlist_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->physicalwedgeuidlist(i).data(), this->physicalwedgeuidlist(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->physicalwedgeuidlist(i), output);
  }
  
  // repeated string virtualwedgeuidlist = 7;
  for (int i = 0; i < this->virtualwedgeuidlist_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->virtualwedgeuidlist(i).data(), this->virtualwedgeuidlist(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->virtualwedgeuidlist(i), output);
  }
  
  // optional string uid2 = 8;
  if (has_uid2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uid2().data(), this->uid2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->uid2(), output);
  }
  
  // optional string uid3 = 9;
  if (has_uid3()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uid3().data(), this->uid3().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->uid3(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RT_MS_Proto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }
  
  // optional string objectType = 2;
  if (has_objecttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->objecttype().data(), this->objecttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->objecttype(), target);
  }
  
  // optional string parent_uid = 3;
  if (has_parent_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->parent_uid().data(), this->parent_uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->parent_uid(), target);
  }
  
  // optional int32 algType = 4;
  if (has_algtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->algtype(), target);
  }
  
  // repeated string filename = 5;
  for (int i = 0; i < this->filename_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->filename(i).data(), this->filename(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->filename(i), target);
  }
  
  // repeated string physicalwedgeuidlist = 6;
  for (int i = 0; i < this->physicalwedgeuidlist_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->physicalwedgeuidlist(i).data(), this->physicalwedgeuidlist(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->physicalwedgeuidlist(i), target);
  }
  
  // repeated string virtualwedgeuidlist = 7;
  for (int i = 0; i < this->virtualwedgeuidlist_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->virtualwedgeuidlist(i).data(), this->virtualwedgeuidlist(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->virtualwedgeuidlist(i), target);
  }
  
  // optional string uid2 = 8;
  if (has_uid2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uid2().data(), this->uid2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->uid2(), target);
  }
  
  // optional string uid3 = 9;
  if (has_uid3()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uid3().data(), this->uid3().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->uid3(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RT_MS_Proto::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uid());
    }
    
    // optional string objectType = 2;
    if (has_objecttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->objecttype());
    }
    
    // optional string parent_uid = 3;
    if (has_parent_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->parent_uid());
    }
    
    // optional int32 algType = 4;
    if (has_algtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->algtype());
    }
    
    // optional string uid2 = 8;
    if (has_uid2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uid2());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string uid3 = 9;
    if (has_uid3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uid3());
    }
    
  }
  // repeated string filename = 5;
  total_size += 1 * this->filename_size();
  for (int i = 0; i < this->filename_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->filename(i));
  }
  
  // repeated string physicalwedgeuidlist = 6;
  total_size += 1 * this->physicalwedgeuidlist_size();
  for (int i = 0; i < this->physicalwedgeuidlist_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->physicalwedgeuidlist(i));
  }
  
  // repeated string virtualwedgeuidlist = 7;
  total_size += 1 * this->virtualwedgeuidlist_size();
  for (int i = 0; i < this->virtualwedgeuidlist_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->virtualwedgeuidlist(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RT_MS_Proto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RT_MS_Proto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RT_MS_Proto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RT_MS_Proto::MergeFrom(const RT_MS_Proto& from) {
  GOOGLE_CHECK_NE(&from, this);
  filename_.MergeFrom(from.filename_);
  physicalwedgeuidlist_.MergeFrom(from.physicalwedgeuidlist_);
  virtualwedgeuidlist_.MergeFrom(from.virtualwedgeuidlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_objecttype()) {
      set_objecttype(from.objecttype());
    }
    if (from.has_parent_uid()) {
      set_parent_uid(from.parent_uid());
    }
    if (from.has_algtype()) {
      set_algtype(from.algtype());
    }
    if (from.has_uid2()) {
      set_uid2(from.uid2());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_uid3()) {
      set_uid3(from.uid3());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RT_MS_Proto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RT_MS_Proto::CopyFrom(const RT_MS_Proto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RT_MS_Proto::IsInitialized() const {
  
  return true;
}

void RT_MS_Proto::Swap(RT_MS_Proto* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(objecttype_, other->objecttype_);
    std::swap(parent_uid_, other->parent_uid_);
    std::swap(algtype_, other->algtype_);
    filename_.Swap(&other->filename_);
    physicalwedgeuidlist_.Swap(&other->physicalwedgeuidlist_);
    virtualwedgeuidlist_.Swap(&other->virtualwedgeuidlist_);
    std::swap(uid2_, other->uid2_);
    std::swap(uid3_, other->uid3_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RT_MS_Proto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RT_MS_Proto_descriptor_;
  metadata.reflection = RT_MS_Proto_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace ms

// @@protoc_insertion_point(global_scope)
