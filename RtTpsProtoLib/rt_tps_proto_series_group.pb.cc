// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "rt_tps_proto_series_group.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tps {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* RtTpsProtoSeriesGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RtTpsProtoSeriesGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* RtTpsProtoRepeatedSeriesGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RtTpsProtoRepeatedSeriesGroup_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_rt_5ftps_5fproto_5fseries_5fgroup_2eproto() {
  protobuf_AddDesc_rt_5ftps_5fproto_5fseries_5fgroup_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "rt_tps_proto_series_group.proto");
  GOOGLE_CHECK(file != NULL);
  RtTpsProtoSeriesGroup_descriptor_ = file->message_type(0);
  static const int RtTpsProtoSeriesGroup_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoSeriesGroup, groupuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoSeriesGroup, groupname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoSeriesGroup, grouptype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoSeriesGroup, mainseries_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoSeriesGroup, serieslist_),
  };
  RtTpsProtoSeriesGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RtTpsProtoSeriesGroup_descriptor_,
      RtTpsProtoSeriesGroup::default_instance_,
      RtTpsProtoSeriesGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoSeriesGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoSeriesGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RtTpsProtoSeriesGroup));
  RtTpsProtoRepeatedSeriesGroup_descriptor_ = file->message_type(1);
  static const int RtTpsProtoRepeatedSeriesGroup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoRepeatedSeriesGroup, series_group_),
  };
  RtTpsProtoRepeatedSeriesGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RtTpsProtoRepeatedSeriesGroup_descriptor_,
      RtTpsProtoRepeatedSeriesGroup::default_instance_,
      RtTpsProtoRepeatedSeriesGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoRepeatedSeriesGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RtTpsProtoRepeatedSeriesGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RtTpsProtoRepeatedSeriesGroup));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_rt_5ftps_5fproto_5fseries_5fgroup_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RtTpsProtoSeriesGroup_descriptor_, &RtTpsProtoSeriesGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RtTpsProtoRepeatedSeriesGroup_descriptor_, &RtTpsProtoRepeatedSeriesGroup::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_rt_5ftps_5fproto_5fseries_5fgroup_2eproto() {
  delete RtTpsProtoSeriesGroup::default_instance_;
  delete RtTpsProtoSeriesGroup_reflection_;
  delete RtTpsProtoRepeatedSeriesGroup::default_instance_;
  delete RtTpsProtoRepeatedSeriesGroup_reflection_;
}

void protobuf_AddDesc_rt_5ftps_5fproto_5fseries_5fgroup_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\037rt_tps_proto_series_group.proto\022\ttps.p"
    "roto\"w\n\025RtTpsProtoSeriesGroup\022\020\n\010groupUi"
    "d\030\001 \002(\t\022\021\n\tgroupName\030\002 \001(\t\022\021\n\tgroupType\030"
    "\003 \001(\005\022\022\n\nmainSeries\030\004 \001(\t\022\022\n\nseriesList\030"
    "\005 \003(\t\"W\n\035RtTpsProtoRepeatedSeriesGroup\0226"
    "\n\014series_group\030\001 \003(\0132 .tps.proto.RtTpsPr"
    "otoSeriesGroup", 254);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rt_tps_proto_series_group.proto", &protobuf_RegisterTypes);
  RtTpsProtoSeriesGroup::default_instance_ = new RtTpsProtoSeriesGroup();
  RtTpsProtoRepeatedSeriesGroup::default_instance_ = new RtTpsProtoRepeatedSeriesGroup();
  RtTpsProtoSeriesGroup::default_instance_->InitAsDefaultInstance();
  RtTpsProtoRepeatedSeriesGroup::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_rt_5ftps_5fproto_5fseries_5fgroup_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_rt_5ftps_5fproto_5fseries_5fgroup_2eproto {
  StaticDescriptorInitializer_rt_5ftps_5fproto_5fseries_5fgroup_2eproto() {
    protobuf_AddDesc_rt_5ftps_5fproto_5fseries_5fgroup_2eproto();
  }
} static_descriptor_initializer_rt_5ftps_5fproto_5fseries_5fgroup_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int RtTpsProtoSeriesGroup::kGroupUidFieldNumber;
const int RtTpsProtoSeriesGroup::kGroupNameFieldNumber;
const int RtTpsProtoSeriesGroup::kGroupTypeFieldNumber;
const int RtTpsProtoSeriesGroup::kMainSeriesFieldNumber;
const int RtTpsProtoSeriesGroup::kSeriesListFieldNumber;
#endif  // !_MSC_VER

RtTpsProtoSeriesGroup::RtTpsProtoSeriesGroup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RtTpsProtoSeriesGroup::InitAsDefaultInstance() {
}

RtTpsProtoSeriesGroup::RtTpsProtoSeriesGroup(const RtTpsProtoSeriesGroup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RtTpsProtoSeriesGroup::SharedCtor() {
  _cached_size_ = 0;
  groupuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  groupname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  grouptype_ = 0;
  mainseries_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RtTpsProtoSeriesGroup::~RtTpsProtoSeriesGroup() {
  SharedDtor();
}

void RtTpsProtoSeriesGroup::SharedDtor() {
  if (groupuid_ != &::google::protobuf::internal::kEmptyString) {
    delete groupuid_;
  }
  if (groupname_ != &::google::protobuf::internal::kEmptyString) {
    delete groupname_;
  }
  if (mainseries_ != &::google::protobuf::internal::kEmptyString) {
    delete mainseries_;
  }
  if (this != default_instance_) {
  }
}

void RtTpsProtoSeriesGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RtTpsProtoSeriesGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RtTpsProtoSeriesGroup_descriptor_;
}

const RtTpsProtoSeriesGroup& RtTpsProtoSeriesGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rt_5ftps_5fproto_5fseries_5fgroup_2eproto();  return *default_instance_;
}

RtTpsProtoSeriesGroup* RtTpsProtoSeriesGroup::default_instance_ = NULL;

RtTpsProtoSeriesGroup* RtTpsProtoSeriesGroup::New() const {
  return new RtTpsProtoSeriesGroup;
}

void RtTpsProtoSeriesGroup::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_groupuid()) {
      if (groupuid_ != &::google::protobuf::internal::kEmptyString) {
        groupuid_->clear();
      }
    }
    if (has_groupname()) {
      if (groupname_ != &::google::protobuf::internal::kEmptyString) {
        groupname_->clear();
      }
    }
    grouptype_ = 0;
    if (has_mainseries()) {
      if (mainseries_ != &::google::protobuf::internal::kEmptyString) {
        mainseries_->clear();
      }
    }
  }
  serieslist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RtTpsProtoSeriesGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string groupUid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->groupuid().data(), this->groupuid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_groupName;
        break;
      }
      
      // optional string groupName = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_groupName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->groupname().data(), this->groupname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_groupType;
        break;
      }
      
      // optional int32 groupType = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_groupType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &grouptype_)));
          set_has_grouptype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_mainSeries;
        break;
      }
      
      // optional string mainSeries = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mainSeries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mainseries()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->mainseries().data(), this->mainseries().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_seriesList;
        break;
      }
      
      // repeated string seriesList = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_seriesList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_serieslist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->serieslist(0).data(), this->serieslist(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_seriesList;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RtTpsProtoSeriesGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string groupUid = 1;
  if (has_groupuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->groupuid().data(), this->groupuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->groupuid(), output);
  }
  
  // optional string groupName = 2;
  if (has_groupname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->groupname().data(), this->groupname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->groupname(), output);
  }
  
  // optional int32 groupType = 3;
  if (has_grouptype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->grouptype(), output);
  }
  
  // optional string mainSeries = 4;
  if (has_mainseries()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mainseries().data(), this->mainseries().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->mainseries(), output);
  }
  
  // repeated string seriesList = 5;
  for (int i = 0; i < this->serieslist_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->serieslist(i).data(), this->serieslist(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->serieslist(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RtTpsProtoSeriesGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string groupUid = 1;
  if (has_groupuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->groupuid().data(), this->groupuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->groupuid(), target);
  }
  
  // optional string groupName = 2;
  if (has_groupname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->groupname().data(), this->groupname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->groupname(), target);
  }
  
  // optional int32 groupType = 3;
  if (has_grouptype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->grouptype(), target);
  }
  
  // optional string mainSeries = 4;
  if (has_mainseries()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mainseries().data(), this->mainseries().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mainseries(), target);
  }
  
  // repeated string seriesList = 5;
  for (int i = 0; i < this->serieslist_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->serieslist(i).data(), this->serieslist(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->serieslist(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RtTpsProtoSeriesGroup::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string groupUid = 1;
    if (has_groupuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->groupuid());
    }
    
    // optional string groupName = 2;
    if (has_groupname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->groupname());
    }
    
    // optional int32 groupType = 3;
    if (has_grouptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->grouptype());
    }
    
    // optional string mainSeries = 4;
    if (has_mainseries()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mainseries());
    }
    
  }
  // repeated string seriesList = 5;
  total_size += 1 * this->serieslist_size();
  for (int i = 0; i < this->serieslist_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->serieslist(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RtTpsProtoSeriesGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RtTpsProtoSeriesGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RtTpsProtoSeriesGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RtTpsProtoSeriesGroup::MergeFrom(const RtTpsProtoSeriesGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  serieslist_.MergeFrom(from.serieslist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_groupuid()) {
      set_groupuid(from.groupuid());
    }
    if (from.has_groupname()) {
      set_groupname(from.groupname());
    }
    if (from.has_grouptype()) {
      set_grouptype(from.grouptype());
    }
    if (from.has_mainseries()) {
      set_mainseries(from.mainseries());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RtTpsProtoSeriesGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RtTpsProtoSeriesGroup::CopyFrom(const RtTpsProtoSeriesGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RtTpsProtoSeriesGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void RtTpsProtoSeriesGroup::Swap(RtTpsProtoSeriesGroup* other) {
  if (other != this) {
    std::swap(groupuid_, other->groupuid_);
    std::swap(groupname_, other->groupname_);
    std::swap(grouptype_, other->grouptype_);
    std::swap(mainseries_, other->mainseries_);
    serieslist_.Swap(&other->serieslist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RtTpsProtoSeriesGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RtTpsProtoSeriesGroup_descriptor_;
  metadata.reflection = RtTpsProtoSeriesGroup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RtTpsProtoRepeatedSeriesGroup::kSeriesGroupFieldNumber;
#endif  // !_MSC_VER

RtTpsProtoRepeatedSeriesGroup::RtTpsProtoRepeatedSeriesGroup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RtTpsProtoRepeatedSeriesGroup::InitAsDefaultInstance() {
}

RtTpsProtoRepeatedSeriesGroup::RtTpsProtoRepeatedSeriesGroup(const RtTpsProtoRepeatedSeriesGroup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RtTpsProtoRepeatedSeriesGroup::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RtTpsProtoRepeatedSeriesGroup::~RtTpsProtoRepeatedSeriesGroup() {
  SharedDtor();
}

void RtTpsProtoRepeatedSeriesGroup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RtTpsProtoRepeatedSeriesGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RtTpsProtoRepeatedSeriesGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RtTpsProtoRepeatedSeriesGroup_descriptor_;
}

const RtTpsProtoRepeatedSeriesGroup& RtTpsProtoRepeatedSeriesGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rt_5ftps_5fproto_5fseries_5fgroup_2eproto();  return *default_instance_;
}

RtTpsProtoRepeatedSeriesGroup* RtTpsProtoRepeatedSeriesGroup::default_instance_ = NULL;

RtTpsProtoRepeatedSeriesGroup* RtTpsProtoRepeatedSeriesGroup::New() const {
  return new RtTpsProtoRepeatedSeriesGroup;
}

void RtTpsProtoRepeatedSeriesGroup::Clear() {
  series_group_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RtTpsProtoRepeatedSeriesGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tps.proto.RtTpsProtoSeriesGroup series_group = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_series_group:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_series_group()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_series_group;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RtTpsProtoRepeatedSeriesGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .tps.proto.RtTpsProtoSeriesGroup series_group = 1;
  for (int i = 0; i < this->series_group_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->series_group(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RtTpsProtoRepeatedSeriesGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .tps.proto.RtTpsProtoSeriesGroup series_group = 1;
  for (int i = 0; i < this->series_group_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->series_group(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RtTpsProtoRepeatedSeriesGroup::ByteSize() const {
  int total_size = 0;
  
  // repeated .tps.proto.RtTpsProtoSeriesGroup series_group = 1;
  total_size += 1 * this->series_group_size();
  for (int i = 0; i < this->series_group_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->series_group(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RtTpsProtoRepeatedSeriesGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RtTpsProtoRepeatedSeriesGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RtTpsProtoRepeatedSeriesGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RtTpsProtoRepeatedSeriesGroup::MergeFrom(const RtTpsProtoRepeatedSeriesGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  series_group_.MergeFrom(from.series_group_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RtTpsProtoRepeatedSeriesGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RtTpsProtoRepeatedSeriesGroup::CopyFrom(const RtTpsProtoRepeatedSeriesGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RtTpsProtoRepeatedSeriesGroup::IsInitialized() const {
  
  for (int i = 0; i < series_group_size(); i++) {
    if (!this->series_group(i).IsInitialized()) return false;
  }
  return true;
}

void RtTpsProtoRepeatedSeriesGroup::Swap(RtTpsProtoRepeatedSeriesGroup* other) {
  if (other != this) {
    series_group_.Swap(&other->series_group_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RtTpsProtoRepeatedSeriesGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RtTpsProtoRepeatedSeriesGroup_descriptor_;
  metadata.reflection = RtTpsProtoRepeatedSeriesGroup_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace tps

// @@protoc_insertion_point(global_scope)
