//////////////////////////////////////////////////////////////////////////
/// \defgroup Radio Therapy Business Unit
///  Copyright, (c) Shanghai United Imaging Healthcare Inc., 2016
///  All rights reserved.
///
///  \author  ZHOU qiangqiang  mailto:qiangqiang.zhou@united-imaging.com
///
///  \file      rt_tps_database_interface_object.h
///  \brief     This file was generated by CodeGenerater.exe 
///              From database version: 2016-9-2 16:01:15
///
///  \version 1.0
///  \date    10/13/2016
///  \{
//////////////////////////////////////////////////////////////////////////

#ifndef RT_TPS_DATABASE_INTERFACE_OBJECT_STRUCTURESET_H_
#define RT_TPS_DATABASE_INTERFACE_OBJECT_STRUCTURESET_H_

#include "RtTpsDatabaseWrapper/rt_tps_database_defs.h"
#include "RtTpsDatabaseWrapper/rt_tps_database_interface_object_base.h"
#include "RtTpsDatabaseWrapper/rt_tps_database_common_enums.h"
#include "boost/date_time/gregorian/gregorian_types.hpp"
#include "boost/date_time/posix_time/posix_time_types.hpp"

RT_TPS_DATABASE_BEGIN_NAMESPACE;

enum STRUCTURESET_FIELD
{
    STRUCTURESET_UID = 0,
    STRUCTURESET_TPSEQUIPMENTUID,
    STRUCTURESET_SERIESUID,
    STRUCTURESET_SOPINSTANCEUID,
    STRUCTURESET_UPDATETIME,
    STRUCTURESET_FIELD_MAX
};

static const char* ENUM2STRING_STRUCTURESET_FIELD[] =
{
    "UID",
    "TPSEQUIPMENTUID",
    "SERIESUID",
    "SOPINSTANCEUID",
    "UPDATETIME",
    "STRUCTURESET_FIELD_MAX"
};

static const char* ENUM2STRING_STRUCTURESET_FIELD_NULL = "10001";

typedef boost::posix_time::ptime DATETIME_BOOST;
typedef boost::posix_time::time_duration TIME_BOOST;
typedef boost::gregorian::date DATE_BOOST;

class RtStructuresetImp;

class RT_DB_EXPORT RtStructureset : public RtDatabaseObject
{
public:

    //default is false to improve performance
    RtStructureset(bool bGeneraterUid = false);

    ~RtStructureset();

    RtStructureset(const RtStructureset& structureset);

    RtStructureset& operator = (const RtStructureset& structureset);

    /*uid varchar
      主键*/
    std::string get_uid() const;
    void set_uid(const std::string& uid);

    /*tpsequipmentuid varchar
      */
    std::string get_tpsequipmentuid() const;
    void set_tpsequipmentuid(const std::string& tpsequipmentuid);

    /*seriesuid varchar
      相关联的序列UId*/
    std::string get_seriesuid() const;
    void set_seriesuid(const std::string& seriesuid);

    /*sopinstanceuid varchar
      Dicom实例标示*/
    std::string get_sopinstanceuid() const;
    void set_sopinstanceuid(const std::string& sopinstanceuid);

    /*updatetime timestamp
      时间戳*/
    DATETIME_BOOST get_updatetime() const;
    void set_updatetime(const DATETIME_BOOST& updatetime);


private:
    RtStructuresetImp*                   m_pImp;
};


//////////////////////////////////////////////////////////////////////////
//for imp

class RtStructuresetImp
{

public:
    //default is false to improve performance
    RtStructuresetImp(bool bGeneraterUid = false);

    ~RtStructuresetImp();

    RtStructuresetImp(const RtStructuresetImp& structureset);

    RtStructuresetImp& operator = (const RtStructuresetImp& structureset);

    //uid
    inline std::string get_uid() const { return m_uid;}
    inline void set_uid(const std::string& uid) { m_uid = uid;}

    //tpsequipmentuid
    inline std::string get_tpsequipmentuid() const { return m_tpsequipmentuid;}
    inline void set_tpsequipmentuid(const std::string& tpsequipmentuid) { m_tpsequipmentuid = tpsequipmentuid;}

    //seriesuid
    inline std::string get_seriesuid() const { return m_seriesuid;}
    inline void set_seriesuid(const std::string& seriesuid) { m_seriesuid = seriesuid;}

    //sopinstanceuid
    inline std::string get_sopinstanceuid() const { return m_sopinstanceuid;}
    inline void set_sopinstanceuid(const std::string& sopinstanceuid) { m_sopinstanceuid = sopinstanceuid;}

    //updatetime
    inline DATETIME_BOOST get_updatetime() const { return m_updatetime;}
    inline void set_updatetime(const DATETIME_BOOST& updatetime) { m_updatetime = updatetime;}

private:    //5 parameters
    std::string						m_uid;
    std::string						m_tpsequipmentuid;
    std::string						m_seriesuid;
    std::string						m_sopinstanceuid;
    DATETIME_BOOST					m_updatetime;
};

RT_TPS_DATABASE_END_NAMESPACE
#endif