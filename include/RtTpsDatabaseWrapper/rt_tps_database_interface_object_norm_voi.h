//////////////////////////////////////////////////////////////////////////
/// \defgroup Radio Therapy Business Unit
///  Copyright, (c) Shanghai United Imaging Healthcare Inc., 2016
///  All rights reserved.
///
///  \author  ZHOU qiangqiang  mailto:qiangqiang.zhou@united-imaging.com
///
///  \file      rt_tps_database_interface_object.h
///  \brief     This file was generated by CodeGenerater.exe 
///              From database version: 2016-8-15 14:37:11
///
///  \version 1.0
///  \date    9/2/2016
///  \{
//////////////////////////////////////////////////////////////////////////

#ifndef RT_TPS_DATABASE_INTERFACE_OBJECT_NORM_VOI_H_
#define RT_TPS_DATABASE_INTERFACE_OBJECT_NORM_VOI_H_

#include "RtTpsDatabaseWrapper/rt_tps_database_defs.h"
#include "RtTpsDatabaseWrapper/rt_tps_database_common_enums.h"
#include "boost/date_time/gregorian/gregorian_types.hpp"
#include "boost/date_time/posix_time/posix_time_types.hpp"

RT_TPS_DATABASE_BEGIN_NAMESPACE;

typedef boost::posix_time::ptime DATETIME_BOOST;
typedef boost::posix_time::time_duration TIME_BOOST;
typedef boost::gregorian::date DATE_BOOST;

class RtNorm_voiImp;

class RT_DB_EXPORT RtNorm_voi
{
public:

    RtNorm_voi();

    ~RtNorm_voi();

    RtNorm_voi(const RtNorm_voi& norm_voi);

    RtNorm_voi& operator = (const RtNorm_voi& norm_voi);

    /*normgroupuid varchar
      normgroup和voi对应关系表中，normgroup的UID*/
    std::string get_normgroupuid() const;
    void set_normgroupuid(const std::string& normgroupuid);

    /*voiuid varchar
      normgroup和voi对应关系表中，voi的UID*/
    std::string get_voiuid() const;
    void set_voiuid(const std::string& voiuid);

    /*mindosecontribution float
      normgroup和voi对应关系表中，normgroup对voi的最小dose贡献率，单位是cGy*/
    float get_mindosecontribution() const;
    void set_mindosecontribution(const float& mindosecontribution);

    /*meandosecontribution float
      normgroup和voi对应关系表中，normgroup对voi的平均dose贡献率，单位是cGy*/
    float get_meandosecontribution() const;
    void set_meandosecontribution(const float& meandosecontribution);

    /*maxdosecontribution float
      normgroup和voi对应关系表中，normgroup对voi的最大dose贡献率，单位是cGy*/
    float get_maxdosecontribution() const;
    void set_maxdosecontribution(const float& maxdosecontribution);

    /*iscare tinyint
      剂量追踪数据是否需要关心*/
    bool get_iscare() const;
    void set_iscare(const bool& iscare);

    /*updatetime timestamp
      时间戳*/
    DATETIME_BOOST get_updatetime() const;
    void set_updatetime(const DATETIME_BOOST& updatetime);


private:
    RtNorm_voiImp*                   m_pImp;
};


//////////////////////////////////////////////////////////////////////////
//for imp

class RtNorm_voiImp
{

public:
    RtNorm_voiImp();

    ~RtNorm_voiImp();

    RtNorm_voiImp(const RtNorm_voiImp& norm_voi);

    RtNorm_voiImp& operator = (const RtNorm_voiImp& norm_voi);

    //normgroupuid
    inline std::string get_normgroupuid() const { return m_normgroupuid;}
    inline void set_normgroupuid(const std::string& normgroupuid) { m_normgroupuid = normgroupuid;}

    //voiuid
    inline std::string get_voiuid() const { return m_voiuid;}
    inline void set_voiuid(const std::string& voiuid) { m_voiuid = voiuid;}

    //mindosecontribution
    inline float get_mindosecontribution() const { return m_mindosecontribution;}
    inline void set_mindosecontribution(const float& mindosecontribution) { m_mindosecontribution = mindosecontribution;}

    //meandosecontribution
    inline float get_meandosecontribution() const { return m_meandosecontribution;}
    inline void set_meandosecontribution(const float& meandosecontribution) { m_meandosecontribution = meandosecontribution;}

    //maxdosecontribution
    inline float get_maxdosecontribution() const { return m_maxdosecontribution;}
    inline void set_maxdosecontribution(const float& maxdosecontribution) { m_maxdosecontribution = maxdosecontribution;}

    //iscare
    inline bool get_iscare() const { return m_iscare;}
    inline void set_iscare(const bool& iscare) { m_iscare = iscare;}

    //updatetime
    inline DATETIME_BOOST get_updatetime() const { return m_updatetime;}
    inline void set_updatetime(const DATETIME_BOOST& updatetime) { m_updatetime = updatetime;}

private:    //7 parameters
    std::string						m_normgroupuid;
    std::string						m_voiuid;
    float							m_mindosecontribution;
    float							m_meandosecontribution;
    float							m_maxdosecontribution;
    bool							m_iscare;
    DATETIME_BOOST					m_updatetime;
};

RT_TPS_DATABASE_END_NAMESPACE
#endif