// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rt_tps_proto_accessory.proto

#ifndef PROTOBUF_rt_5ftps_5fproto_5faccessory_2eproto__INCLUDED
#define PROTOBUF_rt_5ftps_5fproto_5faccessory_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace tps {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_rt_5ftps_5fproto_5faccessory_2eproto();
void protobuf_AssignDesc_rt_5ftps_5fproto_5faccessory_2eproto();
void protobuf_ShutdownFile_rt_5ftps_5fproto_5faccessory_2eproto();

class RtTpsProtoAccessory;
class RtTpsProtoRepeatedAccessory;
class RtTpsProtoCommissionUnitAccessoryPair;
class RtTpsProtoRepeatedCommissionUnitAccessoryPair;

// ===================================================================

class RtTpsProtoAccessory : public ::google::protobuf::Message {
 public:
  RtTpsProtoAccessory();
  virtual ~RtTpsProtoAccessory();
  
  RtTpsProtoAccessory(const RtTpsProtoAccessory& from);
  
  inline RtTpsProtoAccessory& operator=(const RtTpsProtoAccessory& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RtTpsProtoAccessory& default_instance();
  
  void Swap(RtTpsProtoAccessory* other);
  
  // implements Message ----------------------------------------------
  
  RtTpsProtoAccessory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RtTpsProtoAccessory& from);
  void MergeFrom(const RtTpsProtoAccessory& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string accessoryUID = 1;
  inline bool has_accessoryuid() const;
  inline void clear_accessoryuid();
  static const int kAccessoryUIDFieldNumber = 1;
  inline const ::std::string& accessoryuid() const;
  inline void set_accessoryuid(const ::std::string& value);
  inline void set_accessoryuid(const char* value);
  inline void set_accessoryuid(const char* value, size_t size);
  inline ::std::string* mutable_accessoryuid();
  inline ::std::string* release_accessoryuid();
  
  // optional int32 accessoryType = 2;
  inline bool has_accessorytype() const;
  inline void clear_accessorytype();
  static const int kAccessoryTypeFieldNumber = 2;
  inline ::google::protobuf::int32 accessorytype() const;
  inline void set_accessorytype(::google::protobuf::int32 value);
  
  // optional string accessoryName = 3;
  inline bool has_accessoryname() const;
  inline void clear_accessoryname();
  static const int kAccessoryNameFieldNumber = 3;
  inline const ::std::string& accessoryname() const;
  inline void set_accessoryname(const ::std::string& value);
  inline void set_accessoryname(const char* value);
  inline void set_accessoryname(const char* value, size_t size);
  inline ::std::string* mutable_accessoryname();
  inline ::std::string* release_accessoryname();
  
  // optional double wedgeAngle = 4;
  inline bool has_wedgeangle() const;
  inline void clear_wedgeangle();
  static const int kWedgeAngleFieldNumber = 4;
  inline double wedgeangle() const;
  inline void set_wedgeangle(double value);
  
  // optional int32 wedgeOrientation = 5;
  inline bool has_wedgeorientation() const;
  inline void clear_wedgeorientation();
  static const int kWedgeOrientationFieldNumber = 5;
  inline ::google::protobuf::int32 wedgeorientation() const;
  inline void set_wedgeorientation(::google::protobuf::int32 value);
  
  // optional float leftJawMin = 6;
  inline bool has_leftjawmin() const;
  inline void clear_leftjawmin();
  static const int kLeftJawMinFieldNumber = 6;
  inline float leftjawmin() const;
  inline void set_leftjawmin(float value);
  
  // optional float leftJawMax = 7;
  inline bool has_leftjawmax() const;
  inline void clear_leftjawmax();
  static const int kLeftJawMaxFieldNumber = 7;
  inline float leftjawmax() const;
  inline void set_leftjawmax(float value);
  
  // optional float rightJawMin = 8;
  inline bool has_rightjawmin() const;
  inline void clear_rightjawmin();
  static const int kRightJawMinFieldNumber = 8;
  inline float rightjawmin() const;
  inline void set_rightjawmin(float value);
  
  // optional float rightJawMax = 9;
  inline bool has_rightjawmax() const;
  inline void clear_rightjawmax();
  static const int kRightJawMaxFieldNumber = 9;
  inline float rightjawmax() const;
  inline void set_rightjawmax(float value);
  
  // optional float topJawMin = 10;
  inline bool has_topjawmin() const;
  inline void clear_topjawmin();
  static const int kTopJawMinFieldNumber = 10;
  inline float topjawmin() const;
  inline void set_topjawmin(float value);
  
  // optional float topJawMax = 11;
  inline bool has_topjawmax() const;
  inline void clear_topjawmax();
  static const int kTopJawMaxFieldNumber = 11;
  inline float topjawmax() const;
  inline void set_topjawmax(float value);
  
  // optional float bottomJawMin = 12;
  inline bool has_bottomjawmin() const;
  inline void clear_bottomjawmin();
  static const int kBottomJawMinFieldNumber = 12;
  inline float bottomjawmin() const;
  inline void set_bottomjawmin(float value);
  
  // optional float bottomJawMax = 13;
  inline bool has_bottomjawmax() const;
  inline void clear_bottomjawmax();
  static const int kBottomJawMaxFieldNumber = 13;
  inline float bottomjawmax() const;
  inline void set_bottomjawmax(float value);
  
  // @@protoc_insertion_point(class_scope:tps.proto.RtTpsProtoAccessory)
 private:
  inline void set_has_accessoryuid();
  inline void clear_has_accessoryuid();
  inline void set_has_accessorytype();
  inline void clear_has_accessorytype();
  inline void set_has_accessoryname();
  inline void clear_has_accessoryname();
  inline void set_has_wedgeangle();
  inline void clear_has_wedgeangle();
  inline void set_has_wedgeorientation();
  inline void clear_has_wedgeorientation();
  inline void set_has_leftjawmin();
  inline void clear_has_leftjawmin();
  inline void set_has_leftjawmax();
  inline void clear_has_leftjawmax();
  inline void set_has_rightjawmin();
  inline void clear_has_rightjawmin();
  inline void set_has_rightjawmax();
  inline void clear_has_rightjawmax();
  inline void set_has_topjawmin();
  inline void clear_has_topjawmin();
  inline void set_has_topjawmax();
  inline void clear_has_topjawmax();
  inline void set_has_bottomjawmin();
  inline void clear_has_bottomjawmin();
  inline void set_has_bottomjawmax();
  inline void clear_has_bottomjawmax();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* accessoryuid_;
  ::std::string* accessoryname_;
  ::google::protobuf::int32 accessorytype_;
  ::google::protobuf::int32 wedgeorientation_;
  double wedgeangle_;
  float leftjawmin_;
  float leftjawmax_;
  float rightjawmin_;
  float rightjawmax_;
  float topjawmin_;
  float topjawmax_;
  float bottomjawmin_;
  float bottomjawmax_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];
  
  friend void  protobuf_AddDesc_rt_5ftps_5fproto_5faccessory_2eproto();
  friend void protobuf_AssignDesc_rt_5ftps_5fproto_5faccessory_2eproto();
  friend void protobuf_ShutdownFile_rt_5ftps_5fproto_5faccessory_2eproto();
  
  void InitAsDefaultInstance();
  static RtTpsProtoAccessory* default_instance_;
};
// -------------------------------------------------------------------

class RtTpsProtoRepeatedAccessory : public ::google::protobuf::Message {
 public:
  RtTpsProtoRepeatedAccessory();
  virtual ~RtTpsProtoRepeatedAccessory();
  
  RtTpsProtoRepeatedAccessory(const RtTpsProtoRepeatedAccessory& from);
  
  inline RtTpsProtoRepeatedAccessory& operator=(const RtTpsProtoRepeatedAccessory& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RtTpsProtoRepeatedAccessory& default_instance();
  
  void Swap(RtTpsProtoRepeatedAccessory* other);
  
  // implements Message ----------------------------------------------
  
  RtTpsProtoRepeatedAccessory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RtTpsProtoRepeatedAccessory& from);
  void MergeFrom(const RtTpsProtoRepeatedAccessory& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .tps.proto.RtTpsProtoAccessory accessoryList = 1;
  inline int accessorylist_size() const;
  inline void clear_accessorylist();
  static const int kAccessoryListFieldNumber = 1;
  inline const ::tps::proto::RtTpsProtoAccessory& accessorylist(int index) const;
  inline ::tps::proto::RtTpsProtoAccessory* mutable_accessorylist(int index);
  inline ::tps::proto::RtTpsProtoAccessory* add_accessorylist();
  inline const ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoAccessory >&
      accessorylist() const;
  inline ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoAccessory >*
      mutable_accessorylist();
  
  // @@protoc_insertion_point(class_scope:tps.proto.RtTpsProtoRepeatedAccessory)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoAccessory > accessorylist_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_rt_5ftps_5fproto_5faccessory_2eproto();
  friend void protobuf_AssignDesc_rt_5ftps_5fproto_5faccessory_2eproto();
  friend void protobuf_ShutdownFile_rt_5ftps_5fproto_5faccessory_2eproto();
  
  void InitAsDefaultInstance();
  static RtTpsProtoRepeatedAccessory* default_instance_;
};
// -------------------------------------------------------------------

class RtTpsProtoCommissionUnitAccessoryPair : public ::google::protobuf::Message {
 public:
  RtTpsProtoCommissionUnitAccessoryPair();
  virtual ~RtTpsProtoCommissionUnitAccessoryPair();
  
  RtTpsProtoCommissionUnitAccessoryPair(const RtTpsProtoCommissionUnitAccessoryPair& from);
  
  inline RtTpsProtoCommissionUnitAccessoryPair& operator=(const RtTpsProtoCommissionUnitAccessoryPair& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RtTpsProtoCommissionUnitAccessoryPair& default_instance();
  
  void Swap(RtTpsProtoCommissionUnitAccessoryPair* other);
  
  // implements Message ----------------------------------------------
  
  RtTpsProtoCommissionUnitAccessoryPair* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RtTpsProtoCommissionUnitAccessoryPair& from);
  void MergeFrom(const RtTpsProtoCommissionUnitAccessoryPair& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string accessoryUID = 1;
  inline bool has_accessoryuid() const;
  inline void clear_accessoryuid();
  static const int kAccessoryUIDFieldNumber = 1;
  inline const ::std::string& accessoryuid() const;
  inline void set_accessoryuid(const ::std::string& value);
  inline void set_accessoryuid(const char* value);
  inline void set_accessoryuid(const char* value, size_t size);
  inline ::std::string* mutable_accessoryuid();
  inline ::std::string* release_accessoryuid();
  
  // required string commissionedunitUID = 2;
  inline bool has_commissionedunituid() const;
  inline void clear_commissionedunituid();
  static const int kCommissionedunitUIDFieldNumber = 2;
  inline const ::std::string& commissionedunituid() const;
  inline void set_commissionedunituid(const ::std::string& value);
  inline void set_commissionedunituid(const char* value);
  inline void set_commissionedunituid(const char* value, size_t size);
  inline ::std::string* mutable_commissionedunituid();
  inline ::std::string* release_commissionedunituid();
  
  // @@protoc_insertion_point(class_scope:tps.proto.RtTpsProtoCommissionUnitAccessoryPair)
 private:
  inline void set_has_accessoryuid();
  inline void clear_has_accessoryuid();
  inline void set_has_commissionedunituid();
  inline void clear_has_commissionedunituid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* accessoryuid_;
  ::std::string* commissionedunituid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_rt_5ftps_5fproto_5faccessory_2eproto();
  friend void protobuf_AssignDesc_rt_5ftps_5fproto_5faccessory_2eproto();
  friend void protobuf_ShutdownFile_rt_5ftps_5fproto_5faccessory_2eproto();
  
  void InitAsDefaultInstance();
  static RtTpsProtoCommissionUnitAccessoryPair* default_instance_;
};
// -------------------------------------------------------------------

class RtTpsProtoRepeatedCommissionUnitAccessoryPair : public ::google::protobuf::Message {
 public:
  RtTpsProtoRepeatedCommissionUnitAccessoryPair();
  virtual ~RtTpsProtoRepeatedCommissionUnitAccessoryPair();
  
  RtTpsProtoRepeatedCommissionUnitAccessoryPair(const RtTpsProtoRepeatedCommissionUnitAccessoryPair& from);
  
  inline RtTpsProtoRepeatedCommissionUnitAccessoryPair& operator=(const RtTpsProtoRepeatedCommissionUnitAccessoryPair& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RtTpsProtoRepeatedCommissionUnitAccessoryPair& default_instance();
  
  void Swap(RtTpsProtoRepeatedCommissionUnitAccessoryPair* other);
  
  // implements Message ----------------------------------------------
  
  RtTpsProtoRepeatedCommissionUnitAccessoryPair* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RtTpsProtoRepeatedCommissionUnitAccessoryPair& from);
  void MergeFrom(const RtTpsProtoRepeatedCommissionUnitAccessoryPair& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .tps.proto.RtTpsProtoCommissionUnitAccessoryPair commissionUnitAccessoryPair = 1;
  inline int commissionunitaccessorypair_size() const;
  inline void clear_commissionunitaccessorypair();
  static const int kCommissionUnitAccessoryPairFieldNumber = 1;
  inline const ::tps::proto::RtTpsProtoCommissionUnitAccessoryPair& commissionunitaccessorypair(int index) const;
  inline ::tps::proto::RtTpsProtoCommissionUnitAccessoryPair* mutable_commissionunitaccessorypair(int index);
  inline ::tps::proto::RtTpsProtoCommissionUnitAccessoryPair* add_commissionunitaccessorypair();
  inline const ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoCommissionUnitAccessoryPair >&
      commissionunitaccessorypair() const;
  inline ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoCommissionUnitAccessoryPair >*
      mutable_commissionunitaccessorypair();
  
  // @@protoc_insertion_point(class_scope:tps.proto.RtTpsProtoRepeatedCommissionUnitAccessoryPair)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoCommissionUnitAccessoryPair > commissionunitaccessorypair_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_rt_5ftps_5fproto_5faccessory_2eproto();
  friend void protobuf_AssignDesc_rt_5ftps_5fproto_5faccessory_2eproto();
  friend void protobuf_ShutdownFile_rt_5ftps_5fproto_5faccessory_2eproto();
  
  void InitAsDefaultInstance();
  static RtTpsProtoRepeatedCommissionUnitAccessoryPair* default_instance_;
};
// ===================================================================


// ===================================================================

// RtTpsProtoAccessory

// required string accessoryUID = 1;
inline bool RtTpsProtoAccessory::has_accessoryuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RtTpsProtoAccessory::set_has_accessoryuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RtTpsProtoAccessory::clear_has_accessoryuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RtTpsProtoAccessory::clear_accessoryuid() {
  if (accessoryuid_ != &::google::protobuf::internal::kEmptyString) {
    accessoryuid_->clear();
  }
  clear_has_accessoryuid();
}
inline const ::std::string& RtTpsProtoAccessory::accessoryuid() const {
  return *accessoryuid_;
}
inline void RtTpsProtoAccessory::set_accessoryuid(const ::std::string& value) {
  set_has_accessoryuid();
  if (accessoryuid_ == &::google::protobuf::internal::kEmptyString) {
    accessoryuid_ = new ::std::string;
  }
  accessoryuid_->assign(value);
}
inline void RtTpsProtoAccessory::set_accessoryuid(const char* value) {
  set_has_accessoryuid();
  if (accessoryuid_ == &::google::protobuf::internal::kEmptyString) {
    accessoryuid_ = new ::std::string;
  }
  accessoryuid_->assign(value);
}
inline void RtTpsProtoAccessory::set_accessoryuid(const char* value, size_t size) {
  set_has_accessoryuid();
  if (accessoryuid_ == &::google::protobuf::internal::kEmptyString) {
    accessoryuid_ = new ::std::string;
  }
  accessoryuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RtTpsProtoAccessory::mutable_accessoryuid() {
  set_has_accessoryuid();
  if (accessoryuid_ == &::google::protobuf::internal::kEmptyString) {
    accessoryuid_ = new ::std::string;
  }
  return accessoryuid_;
}
inline ::std::string* RtTpsProtoAccessory::release_accessoryuid() {
  clear_has_accessoryuid();
  if (accessoryuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = accessoryuid_;
    accessoryuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 accessoryType = 2;
inline bool RtTpsProtoAccessory::has_accessorytype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RtTpsProtoAccessory::set_has_accessorytype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RtTpsProtoAccessory::clear_has_accessorytype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RtTpsProtoAccessory::clear_accessorytype() {
  accessorytype_ = 0;
  clear_has_accessorytype();
}
inline ::google::protobuf::int32 RtTpsProtoAccessory::accessorytype() const {
  return accessorytype_;
}
inline void RtTpsProtoAccessory::set_accessorytype(::google::protobuf::int32 value) {
  set_has_accessorytype();
  accessorytype_ = value;
}

// optional string accessoryName = 3;
inline bool RtTpsProtoAccessory::has_accessoryname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RtTpsProtoAccessory::set_has_accessoryname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RtTpsProtoAccessory::clear_has_accessoryname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RtTpsProtoAccessory::clear_accessoryname() {
  if (accessoryname_ != &::google::protobuf::internal::kEmptyString) {
    accessoryname_->clear();
  }
  clear_has_accessoryname();
}
inline const ::std::string& RtTpsProtoAccessory::accessoryname() const {
  return *accessoryname_;
}
inline void RtTpsProtoAccessory::set_accessoryname(const ::std::string& value) {
  set_has_accessoryname();
  if (accessoryname_ == &::google::protobuf::internal::kEmptyString) {
    accessoryname_ = new ::std::string;
  }
  accessoryname_->assign(value);
}
inline void RtTpsProtoAccessory::set_accessoryname(const char* value) {
  set_has_accessoryname();
  if (accessoryname_ == &::google::protobuf::internal::kEmptyString) {
    accessoryname_ = new ::std::string;
  }
  accessoryname_->assign(value);
}
inline void RtTpsProtoAccessory::set_accessoryname(const char* value, size_t size) {
  set_has_accessoryname();
  if (accessoryname_ == &::google::protobuf::internal::kEmptyString) {
    accessoryname_ = new ::std::string;
  }
  accessoryname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RtTpsProtoAccessory::mutable_accessoryname() {
  set_has_accessoryname();
  if (accessoryname_ == &::google::protobuf::internal::kEmptyString) {
    accessoryname_ = new ::std::string;
  }
  return accessoryname_;
}
inline ::std::string* RtTpsProtoAccessory::release_accessoryname() {
  clear_has_accessoryname();
  if (accessoryname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = accessoryname_;
    accessoryname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional double wedgeAngle = 4;
inline bool RtTpsProtoAccessory::has_wedgeangle() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RtTpsProtoAccessory::set_has_wedgeangle() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RtTpsProtoAccessory::clear_has_wedgeangle() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RtTpsProtoAccessory::clear_wedgeangle() {
  wedgeangle_ = 0;
  clear_has_wedgeangle();
}
inline double RtTpsProtoAccessory::wedgeangle() const {
  return wedgeangle_;
}
inline void RtTpsProtoAccessory::set_wedgeangle(double value) {
  set_has_wedgeangle();
  wedgeangle_ = value;
}

// optional int32 wedgeOrientation = 5;
inline bool RtTpsProtoAccessory::has_wedgeorientation() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RtTpsProtoAccessory::set_has_wedgeorientation() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RtTpsProtoAccessory::clear_has_wedgeorientation() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RtTpsProtoAccessory::clear_wedgeorientation() {
  wedgeorientation_ = 0;
  clear_has_wedgeorientation();
}
inline ::google::protobuf::int32 RtTpsProtoAccessory::wedgeorientation() const {
  return wedgeorientation_;
}
inline void RtTpsProtoAccessory::set_wedgeorientation(::google::protobuf::int32 value) {
  set_has_wedgeorientation();
  wedgeorientation_ = value;
}

// optional float leftJawMin = 6;
inline bool RtTpsProtoAccessory::has_leftjawmin() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RtTpsProtoAccessory::set_has_leftjawmin() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RtTpsProtoAccessory::clear_has_leftjawmin() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RtTpsProtoAccessory::clear_leftjawmin() {
  leftjawmin_ = 0;
  clear_has_leftjawmin();
}
inline float RtTpsProtoAccessory::leftjawmin() const {
  return leftjawmin_;
}
inline void RtTpsProtoAccessory::set_leftjawmin(float value) {
  set_has_leftjawmin();
  leftjawmin_ = value;
}

// optional float leftJawMax = 7;
inline bool RtTpsProtoAccessory::has_leftjawmax() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RtTpsProtoAccessory::set_has_leftjawmax() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RtTpsProtoAccessory::clear_has_leftjawmax() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RtTpsProtoAccessory::clear_leftjawmax() {
  leftjawmax_ = 0;
  clear_has_leftjawmax();
}
inline float RtTpsProtoAccessory::leftjawmax() const {
  return leftjawmax_;
}
inline void RtTpsProtoAccessory::set_leftjawmax(float value) {
  set_has_leftjawmax();
  leftjawmax_ = value;
}

// optional float rightJawMin = 8;
inline bool RtTpsProtoAccessory::has_rightjawmin() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RtTpsProtoAccessory::set_has_rightjawmin() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RtTpsProtoAccessory::clear_has_rightjawmin() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RtTpsProtoAccessory::clear_rightjawmin() {
  rightjawmin_ = 0;
  clear_has_rightjawmin();
}
inline float RtTpsProtoAccessory::rightjawmin() const {
  return rightjawmin_;
}
inline void RtTpsProtoAccessory::set_rightjawmin(float value) {
  set_has_rightjawmin();
  rightjawmin_ = value;
}

// optional float rightJawMax = 9;
inline bool RtTpsProtoAccessory::has_rightjawmax() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RtTpsProtoAccessory::set_has_rightjawmax() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RtTpsProtoAccessory::clear_has_rightjawmax() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RtTpsProtoAccessory::clear_rightjawmax() {
  rightjawmax_ = 0;
  clear_has_rightjawmax();
}
inline float RtTpsProtoAccessory::rightjawmax() const {
  return rightjawmax_;
}
inline void RtTpsProtoAccessory::set_rightjawmax(float value) {
  set_has_rightjawmax();
  rightjawmax_ = value;
}

// optional float topJawMin = 10;
inline bool RtTpsProtoAccessory::has_topjawmin() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RtTpsProtoAccessory::set_has_topjawmin() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RtTpsProtoAccessory::clear_has_topjawmin() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RtTpsProtoAccessory::clear_topjawmin() {
  topjawmin_ = 0;
  clear_has_topjawmin();
}
inline float RtTpsProtoAccessory::topjawmin() const {
  return topjawmin_;
}
inline void RtTpsProtoAccessory::set_topjawmin(float value) {
  set_has_topjawmin();
  topjawmin_ = value;
}

// optional float topJawMax = 11;
inline bool RtTpsProtoAccessory::has_topjawmax() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RtTpsProtoAccessory::set_has_topjawmax() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RtTpsProtoAccessory::clear_has_topjawmax() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RtTpsProtoAccessory::clear_topjawmax() {
  topjawmax_ = 0;
  clear_has_topjawmax();
}
inline float RtTpsProtoAccessory::topjawmax() const {
  return topjawmax_;
}
inline void RtTpsProtoAccessory::set_topjawmax(float value) {
  set_has_topjawmax();
  topjawmax_ = value;
}

// optional float bottomJawMin = 12;
inline bool RtTpsProtoAccessory::has_bottomjawmin() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RtTpsProtoAccessory::set_has_bottomjawmin() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RtTpsProtoAccessory::clear_has_bottomjawmin() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RtTpsProtoAccessory::clear_bottomjawmin() {
  bottomjawmin_ = 0;
  clear_has_bottomjawmin();
}
inline float RtTpsProtoAccessory::bottomjawmin() const {
  return bottomjawmin_;
}
inline void RtTpsProtoAccessory::set_bottomjawmin(float value) {
  set_has_bottomjawmin();
  bottomjawmin_ = value;
}

// optional float bottomJawMax = 13;
inline bool RtTpsProtoAccessory::has_bottomjawmax() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RtTpsProtoAccessory::set_has_bottomjawmax() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RtTpsProtoAccessory::clear_has_bottomjawmax() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RtTpsProtoAccessory::clear_bottomjawmax() {
  bottomjawmax_ = 0;
  clear_has_bottomjawmax();
}
inline float RtTpsProtoAccessory::bottomjawmax() const {
  return bottomjawmax_;
}
inline void RtTpsProtoAccessory::set_bottomjawmax(float value) {
  set_has_bottomjawmax();
  bottomjawmax_ = value;
}

// -------------------------------------------------------------------

// RtTpsProtoRepeatedAccessory

// repeated .tps.proto.RtTpsProtoAccessory accessoryList = 1;
inline int RtTpsProtoRepeatedAccessory::accessorylist_size() const {
  return accessorylist_.size();
}
inline void RtTpsProtoRepeatedAccessory::clear_accessorylist() {
  accessorylist_.Clear();
}
inline const ::tps::proto::RtTpsProtoAccessory& RtTpsProtoRepeatedAccessory::accessorylist(int index) const {
  return accessorylist_.Get(index);
}
inline ::tps::proto::RtTpsProtoAccessory* RtTpsProtoRepeatedAccessory::mutable_accessorylist(int index) {
  return accessorylist_.Mutable(index);
}
inline ::tps::proto::RtTpsProtoAccessory* RtTpsProtoRepeatedAccessory::add_accessorylist() {
  return accessorylist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoAccessory >&
RtTpsProtoRepeatedAccessory::accessorylist() const {
  return accessorylist_;
}
inline ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoAccessory >*
RtTpsProtoRepeatedAccessory::mutable_accessorylist() {
  return &accessorylist_;
}

// -------------------------------------------------------------------

// RtTpsProtoCommissionUnitAccessoryPair

// required string accessoryUID = 1;
inline bool RtTpsProtoCommissionUnitAccessoryPair::has_accessoryuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RtTpsProtoCommissionUnitAccessoryPair::set_has_accessoryuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RtTpsProtoCommissionUnitAccessoryPair::clear_has_accessoryuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RtTpsProtoCommissionUnitAccessoryPair::clear_accessoryuid() {
  if (accessoryuid_ != &::google::protobuf::internal::kEmptyString) {
    accessoryuid_->clear();
  }
  clear_has_accessoryuid();
}
inline const ::std::string& RtTpsProtoCommissionUnitAccessoryPair::accessoryuid() const {
  return *accessoryuid_;
}
inline void RtTpsProtoCommissionUnitAccessoryPair::set_accessoryuid(const ::std::string& value) {
  set_has_accessoryuid();
  if (accessoryuid_ == &::google::protobuf::internal::kEmptyString) {
    accessoryuid_ = new ::std::string;
  }
  accessoryuid_->assign(value);
}
inline void RtTpsProtoCommissionUnitAccessoryPair::set_accessoryuid(const char* value) {
  set_has_accessoryuid();
  if (accessoryuid_ == &::google::protobuf::internal::kEmptyString) {
    accessoryuid_ = new ::std::string;
  }
  accessoryuid_->assign(value);
}
inline void RtTpsProtoCommissionUnitAccessoryPair::set_accessoryuid(const char* value, size_t size) {
  set_has_accessoryuid();
  if (accessoryuid_ == &::google::protobuf::internal::kEmptyString) {
    accessoryuid_ = new ::std::string;
  }
  accessoryuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RtTpsProtoCommissionUnitAccessoryPair::mutable_accessoryuid() {
  set_has_accessoryuid();
  if (accessoryuid_ == &::google::protobuf::internal::kEmptyString) {
    accessoryuid_ = new ::std::string;
  }
  return accessoryuid_;
}
inline ::std::string* RtTpsProtoCommissionUnitAccessoryPair::release_accessoryuid() {
  clear_has_accessoryuid();
  if (accessoryuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = accessoryuid_;
    accessoryuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string commissionedunitUID = 2;
inline bool RtTpsProtoCommissionUnitAccessoryPair::has_commissionedunituid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RtTpsProtoCommissionUnitAccessoryPair::set_has_commissionedunituid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RtTpsProtoCommissionUnitAccessoryPair::clear_has_commissionedunituid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RtTpsProtoCommissionUnitAccessoryPair::clear_commissionedunituid() {
  if (commissionedunituid_ != &::google::protobuf::internal::kEmptyString) {
    commissionedunituid_->clear();
  }
  clear_has_commissionedunituid();
}
inline const ::std::string& RtTpsProtoCommissionUnitAccessoryPair::commissionedunituid() const {
  return *commissionedunituid_;
}
inline void RtTpsProtoCommissionUnitAccessoryPair::set_commissionedunituid(const ::std::string& value) {
  set_has_commissionedunituid();
  if (commissionedunituid_ == &::google::protobuf::internal::kEmptyString) {
    commissionedunituid_ = new ::std::string;
  }
  commissionedunituid_->assign(value);
}
inline void RtTpsProtoCommissionUnitAccessoryPair::set_commissionedunituid(const char* value) {
  set_has_commissionedunituid();
  if (commissionedunituid_ == &::google::protobuf::internal::kEmptyString) {
    commissionedunituid_ = new ::std::string;
  }
  commissionedunituid_->assign(value);
}
inline void RtTpsProtoCommissionUnitAccessoryPair::set_commissionedunituid(const char* value, size_t size) {
  set_has_commissionedunituid();
  if (commissionedunituid_ == &::google::protobuf::internal::kEmptyString) {
    commissionedunituid_ = new ::std::string;
  }
  commissionedunituid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RtTpsProtoCommissionUnitAccessoryPair::mutable_commissionedunituid() {
  set_has_commissionedunituid();
  if (commissionedunituid_ == &::google::protobuf::internal::kEmptyString) {
    commissionedunituid_ = new ::std::string;
  }
  return commissionedunituid_;
}
inline ::std::string* RtTpsProtoCommissionUnitAccessoryPair::release_commissionedunituid() {
  clear_has_commissionedunituid();
  if (commissionedunituid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = commissionedunituid_;
    commissionedunituid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// RtTpsProtoRepeatedCommissionUnitAccessoryPair

// repeated .tps.proto.RtTpsProtoCommissionUnitAccessoryPair commissionUnitAccessoryPair = 1;
inline int RtTpsProtoRepeatedCommissionUnitAccessoryPair::commissionunitaccessorypair_size() const {
  return commissionunitaccessorypair_.size();
}
inline void RtTpsProtoRepeatedCommissionUnitAccessoryPair::clear_commissionunitaccessorypair() {
  commissionunitaccessorypair_.Clear();
}
inline const ::tps::proto::RtTpsProtoCommissionUnitAccessoryPair& RtTpsProtoRepeatedCommissionUnitAccessoryPair::commissionunitaccessorypair(int index) const {
  return commissionunitaccessorypair_.Get(index);
}
inline ::tps::proto::RtTpsProtoCommissionUnitAccessoryPair* RtTpsProtoRepeatedCommissionUnitAccessoryPair::mutable_commissionunitaccessorypair(int index) {
  return commissionunitaccessorypair_.Mutable(index);
}
inline ::tps::proto::RtTpsProtoCommissionUnitAccessoryPair* RtTpsProtoRepeatedCommissionUnitAccessoryPair::add_commissionunitaccessorypair() {
  return commissionunitaccessorypair_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoCommissionUnitAccessoryPair >&
RtTpsProtoRepeatedCommissionUnitAccessoryPair::commissionunitaccessorypair() const {
  return commissionunitaccessorypair_;
}
inline ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoCommissionUnitAccessoryPair >*
RtTpsProtoRepeatedCommissionUnitAccessoryPair::mutable_commissionunitaccessorypair() {
  return &commissionunitaccessorypair_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace tps

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rt_5ftps_5fproto_5faccessory_2eproto__INCLUDED
