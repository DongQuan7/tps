// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rt_tps_dvhdatalist.proto

#ifndef PROTOBUF_rt_5ftps_5fdvhdatalist_2eproto__INCLUDED
#define PROTOBUF_rt_5ftps_5fdvhdatalist_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "rt_tps_dvhdata.pb.h"
// @@protoc_insertion_point(includes)

namespace tps {
    namespace proto {

        // Internal implementation detail -- do not call these.
        void  protobuf_AddDesc_rt_5ftps_5fdvhdatalist_2eproto();
        void protobuf_AssignDesc_rt_5ftps_5fdvhdatalist_2eproto();
        void protobuf_ShutdownFile_rt_5ftps_5fdvhdatalist_2eproto();

        class RT_TPS_DVHDataList;

        // ===================================================================

        class RT_TPS_DVHDataList : public ::google::protobuf::Message {
        public:
            RT_TPS_DVHDataList();
            virtual ~RT_TPS_DVHDataList();

            RT_TPS_DVHDataList(const RT_TPS_DVHDataList& from);

            inline RT_TPS_DVHDataList& operator=(const RT_TPS_DVHDataList& from) {
                CopyFrom(from);
                return *this;
            }

            inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
                return _unknown_fields_;
            }

            inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
                return &_unknown_fields_;
            }

            static const ::google::protobuf::Descriptor* descriptor();
            static const RT_TPS_DVHDataList& default_instance();

            void Swap(RT_TPS_DVHDataList* other);

            // implements Message ----------------------------------------------

            RT_TPS_DVHDataList* New() const;
            void CopyFrom(const ::google::protobuf::Message& from);
            void MergeFrom(const ::google::protobuf::Message& from);
            void CopyFrom(const RT_TPS_DVHDataList& from);
            void MergeFrom(const RT_TPS_DVHDataList& from);
            void Clear();
            bool IsInitialized() const;

            int ByteSize() const;
            bool MergePartialFromCodedStream(
                ::google::protobuf::io::CodedInputStream* input);
            void SerializeWithCachedSizes(
                ::google::protobuf::io::CodedOutputStream* output) const;
            ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
            int GetCachedSize() const { return _cached_size_; }
        private:
            void SharedCtor();
            void SharedDtor();
            void SetCachedSize(int size) const;
        public:

            ::google::protobuf::Metadata GetMetadata() const;

            // nested types ----------------------------------------------------

            // accessors -------------------------------------------------------

            // repeated .tps.proto.RT_TPS_DVHData dvhdatalist = 1;
            inline int dvhdatalist_size() const;
            inline void clear_dvhdatalist();
            static const int kDvhdatalistFieldNumber = 1;
            inline const ::tps::proto::RT_TPS_DVHData& dvhdatalist(int index) const;
            inline ::tps::proto::RT_TPS_DVHData* mutable_dvhdatalist(int index);
            inline ::tps::proto::RT_TPS_DVHData* add_dvhdatalist();
            inline const ::google::protobuf::RepeatedPtrField< ::tps::proto::RT_TPS_DVHData >&
                dvhdatalist() const;
            inline ::google::protobuf::RepeatedPtrField< ::tps::proto::RT_TPS_DVHData >*
                mutable_dvhdatalist();

            // @@protoc_insertion_point(class_scope:tps.proto.RT_TPS_DVHDataList)
        private:

            ::google::protobuf::UnknownFieldSet _unknown_fields_;

            ::google::protobuf::RepeatedPtrField< ::tps::proto::RT_TPS_DVHData > dvhdatalist_;

            mutable int _cached_size_;
            ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

            friend void  protobuf_AddDesc_rt_5ftps_5fdvhdatalist_2eproto();
            friend void protobuf_AssignDesc_rt_5ftps_5fdvhdatalist_2eproto();
            friend void protobuf_ShutdownFile_rt_5ftps_5fdvhdatalist_2eproto();

            void InitAsDefaultInstance();
            static RT_TPS_DVHDataList* default_instance_;
        };
        // ===================================================================


        // ===================================================================

        // RT_TPS_DVHDataList

        // repeated .tps.proto.RT_TPS_DVHData dvhdatalist = 1;
        inline int RT_TPS_DVHDataList::dvhdatalist_size() const {
            return dvhdatalist_.size();
        }
        inline void RT_TPS_DVHDataList::clear_dvhdatalist() {
            dvhdatalist_.Clear();
        }
        inline const ::tps::proto::RT_TPS_DVHData& RT_TPS_DVHDataList::dvhdatalist(int index) const {
            return dvhdatalist_.Get(index);
        }
        inline ::tps::proto::RT_TPS_DVHData* RT_TPS_DVHDataList::mutable_dvhdatalist(int index) {
            return dvhdatalist_.Mutable(index);
        }
        inline ::tps::proto::RT_TPS_DVHData* RT_TPS_DVHDataList::add_dvhdatalist() {
            return dvhdatalist_.Add();
        }
        inline const ::google::protobuf::RepeatedPtrField< ::tps::proto::RT_TPS_DVHData >&
            RT_TPS_DVHDataList::dvhdatalist() const {
                return dvhdatalist_;
        }
        inline ::google::protobuf::RepeatedPtrField< ::tps::proto::RT_TPS_DVHData >*
            RT_TPS_DVHDataList::mutable_dvhdatalist() {
                return &dvhdatalist_;
        }


        // @@protoc_insertion_point(namespace_scope)

    }  // namespace proto
}  // namespace tps

#ifndef SWIG
namespace google {
    namespace protobuf {


    }  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rt_5ftps_5fdvhdatalist_2eproto__INCLUDED
