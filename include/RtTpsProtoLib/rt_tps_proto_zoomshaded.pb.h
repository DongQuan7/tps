// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rt_tps_proto_zoomshaded.proto

#ifndef PROTOBUF_rt_5ftps_5fproto_5fzoomshaded_2eproto__INCLUDED
#define PROTOBUF_rt_5ftps_5fproto_5fzoomshaded_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace tps {
    namespace proto {

        // Internal implementation detail -- do not call these.
        void  protobuf_AddDesc_rt_5ftps_5fproto_5fzoomshaded_2eproto();
        void protobuf_AssignDesc_rt_5ftps_5fproto_5fzoomshaded_2eproto();
        void protobuf_ShutdownFile_rt_5ftps_5fproto_5fzoomshaded_2eproto();

        class RtTpsProtoZoomShaded;

        // ===================================================================

        class RtTpsProtoZoomShaded : public ::google::protobuf::Message {
        public:
            RtTpsProtoZoomShaded();
            virtual ~RtTpsProtoZoomShaded();

            RtTpsProtoZoomShaded(const RtTpsProtoZoomShaded& from);

            inline RtTpsProtoZoomShaded& operator=(const RtTpsProtoZoomShaded& from) {
                CopyFrom(from);
                return *this;
            }

            inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
                return _unknown_fields_;
            }

            inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
                return &_unknown_fields_;
            }

            static const ::google::protobuf::Descriptor* descriptor();
            static const RtTpsProtoZoomShaded& default_instance();

            void Swap(RtTpsProtoZoomShaded* other);

            // implements Message ----------------------------------------------

            RtTpsProtoZoomShaded* New() const;
            void CopyFrom(const ::google::protobuf::Message& from);
            void MergeFrom(const ::google::protobuf::Message& from);
            void CopyFrom(const RtTpsProtoZoomShaded& from);
            void MergeFrom(const RtTpsProtoZoomShaded& from);
            void Clear();
            bool IsInitialized() const;

            int ByteSize() const;
            bool MergePartialFromCodedStream(
                ::google::protobuf::io::CodedInputStream* input);
            void SerializeWithCachedSizes(
                ::google::protobuf::io::CodedOutputStream* output) const;
            ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
            int GetCachedSize() const { return _cached_size_; }
        private:
            void SharedCtor();
            void SharedDtor();
            void SetCachedSize(int size) const;
        public:

            ::google::protobuf::Metadata GetMetadata() const;

            // nested types ----------------------------------------------------

            // accessors -------------------------------------------------------

            // required int32 windowType = 1;
            inline bool has_windowtype() const;
            inline void clear_windowtype();
            static const int kWindowTypeFieldNumber = 1;
            inline ::google::protobuf::int32 windowtype() const;
            inline void set_windowtype(::google::protobuf::int32 value);

            // optional string windowUid = 2;
            inline bool has_windowuid() const;
            inline void clear_windowuid();
            static const int kWindowUidFieldNumber = 2;
            inline const ::std::string& windowuid() const;
            inline void set_windowuid(const ::std::string& value);
            inline void set_windowuid(const char* value);
            inline void set_windowuid(const char* value, size_t size);
            inline ::std::string* mutable_windowuid();
            inline ::std::string* release_windowuid();

            // required float zoomFactor = 3;
            inline bool has_zoomfactor() const;
            inline void clear_zoomfactor();
            static const int kZoomFactorFieldNumber = 3;
            inline float zoomfactor() const;
            inline void set_zoomfactor(float value);

            // @@protoc_insertion_point(class_scope:tps.proto.RtTpsProtoZoomShaded)
        private:
            inline void set_has_windowtype();
            inline void clear_has_windowtype();
            inline void set_has_windowuid();
            inline void clear_has_windowuid();
            inline void set_has_zoomfactor();
            inline void clear_has_zoomfactor();

            ::google::protobuf::UnknownFieldSet _unknown_fields_;

            ::std::string* windowuid_;
            ::google::protobuf::int32 windowtype_;
            float zoomfactor_;

            mutable int _cached_size_;
            ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

            friend void  protobuf_AddDesc_rt_5ftps_5fproto_5fzoomshaded_2eproto();
            friend void protobuf_AssignDesc_rt_5ftps_5fproto_5fzoomshaded_2eproto();
            friend void protobuf_ShutdownFile_rt_5ftps_5fproto_5fzoomshaded_2eproto();

            void InitAsDefaultInstance();
            static RtTpsProtoZoomShaded* default_instance_;
        };
        // ===================================================================


        // ===================================================================

        // RtTpsProtoZoomShaded

        // required int32 windowType = 1;
        inline bool RtTpsProtoZoomShaded::has_windowtype() const {
            return (_has_bits_[0] & 0x00000001u) != 0;
        }
        inline void RtTpsProtoZoomShaded::set_has_windowtype() {
            _has_bits_[0] |= 0x00000001u;
        }
        inline void RtTpsProtoZoomShaded::clear_has_windowtype() {
            _has_bits_[0] &= ~0x00000001u;
        }
        inline void RtTpsProtoZoomShaded::clear_windowtype() {
            windowtype_ = 0;
            clear_has_windowtype();
        }
        inline ::google::protobuf::int32 RtTpsProtoZoomShaded::windowtype() const {
            return windowtype_;
        }
        inline void RtTpsProtoZoomShaded::set_windowtype(::google::protobuf::int32 value) {
            set_has_windowtype();
            windowtype_ = value;
        }

        // optional string windowUid = 2;
        inline bool RtTpsProtoZoomShaded::has_windowuid() const {
            return (_has_bits_[0] & 0x00000002u) != 0;
        }
        inline void RtTpsProtoZoomShaded::set_has_windowuid() {
            _has_bits_[0] |= 0x00000002u;
        }
        inline void RtTpsProtoZoomShaded::clear_has_windowuid() {
            _has_bits_[0] &= ~0x00000002u;
        }
        inline void RtTpsProtoZoomShaded::clear_windowuid() {
            if (windowuid_ != &::google::protobuf::internal::kEmptyString) {
                windowuid_->clear();
            }
            clear_has_windowuid();
        }
        inline const ::std::string& RtTpsProtoZoomShaded::windowuid() const {
            return *windowuid_;
        }
        inline void RtTpsProtoZoomShaded::set_windowuid(const ::std::string& value) {
            set_has_windowuid();
            if (windowuid_ == &::google::protobuf::internal::kEmptyString) {
                windowuid_ = new ::std::string;
            }
            windowuid_->assign(value);
        }
        inline void RtTpsProtoZoomShaded::set_windowuid(const char* value) {
            set_has_windowuid();
            if (windowuid_ == &::google::protobuf::internal::kEmptyString) {
                windowuid_ = new ::std::string;
            }
            windowuid_->assign(value);
        }
        inline void RtTpsProtoZoomShaded::set_windowuid(const char* value, size_t size) {
            set_has_windowuid();
            if (windowuid_ == &::google::protobuf::internal::kEmptyString) {
                windowuid_ = new ::std::string;
            }
            windowuid_->assign(reinterpret_cast<const char*>(value), size);
        }
        inline ::std::string* RtTpsProtoZoomShaded::mutable_windowuid() {
            set_has_windowuid();
            if (windowuid_ == &::google::protobuf::internal::kEmptyString) {
                windowuid_ = new ::std::string;
            }
            return windowuid_;
        }
        inline ::std::string* RtTpsProtoZoomShaded::release_windowuid() {
            clear_has_windowuid();
            if (windowuid_ == &::google::protobuf::internal::kEmptyString) {
                return NULL;
            } else {
                ::std::string* temp = windowuid_;
                windowuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
                return temp;
            }
        }

        // required float zoomFactor = 3;
        inline bool RtTpsProtoZoomShaded::has_zoomfactor() const {
            return (_has_bits_[0] & 0x00000004u) != 0;
        }
        inline void RtTpsProtoZoomShaded::set_has_zoomfactor() {
            _has_bits_[0] |= 0x00000004u;
        }
        inline void RtTpsProtoZoomShaded::clear_has_zoomfactor() {
            _has_bits_[0] &= ~0x00000004u;
        }
        inline void RtTpsProtoZoomShaded::clear_zoomfactor() {
            zoomfactor_ = 0;
            clear_has_zoomfactor();
        }
        inline float RtTpsProtoZoomShaded::zoomfactor() const {
            return zoomfactor_;
        }
        inline void RtTpsProtoZoomShaded::set_zoomfactor(float value) {
            set_has_zoomfactor();
            zoomfactor_ = value;
        }


        // @@protoc_insertion_point(namespace_scope)

    }  // namespace proto
}  // namespace tps

#ifndef SWIG
namespace google {
    namespace protobuf {


    }  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rt_5ftps_5fproto_5fzoomshaded_2eproto__INCLUDED
