// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rt_tps_proto_doselineparams.proto

#ifndef PROTOBUF_rt_5ftps_5fproto_5fdoselineparams_2eproto__INCLUDED
#define PROTOBUF_rt_5ftps_5fproto_5fdoselineparams_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "rt_tps_proto_doseline.pb.h"
#include "rt_tps_proto_doselinesetting.pb.h"
// @@protoc_insertion_point(includes)

namespace tps {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_rt_5ftps_5fproto_5fdoselineparams_2eproto();
void protobuf_AssignDesc_rt_5ftps_5fproto_5fdoselineparams_2eproto();
void protobuf_ShutdownFile_rt_5ftps_5fproto_5fdoselineparams_2eproto();

class RtTpsProtoDoseLineParams;

// ===================================================================

class RtTpsProtoDoseLineParams : public ::google::protobuf::Message {
 public:
  RtTpsProtoDoseLineParams();
  virtual ~RtTpsProtoDoseLineParams();
  
  RtTpsProtoDoseLineParams(const RtTpsProtoDoseLineParams& from);
  
  inline RtTpsProtoDoseLineParams& operator=(const RtTpsProtoDoseLineParams& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RtTpsProtoDoseLineParams& default_instance();
  
  void Swap(RtTpsProtoDoseLineParams* other);
  
  // implements Message ----------------------------------------------
  
  RtTpsProtoDoseLineParams* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RtTpsProtoDoseLineParams& from);
  void MergeFrom(const RtTpsProtoDoseLineParams& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .tps.proto.RtTpsProtoDoseLine doseLineList = 1;
  inline int doselinelist_size() const;
  inline void clear_doselinelist();
  static const int kDoseLineListFieldNumber = 1;
  inline const ::tps::proto::RtTpsProtoDoseLine& doselinelist(int index) const;
  inline ::tps::proto::RtTpsProtoDoseLine* mutable_doselinelist(int index);
  inline ::tps::proto::RtTpsProtoDoseLine* add_doselinelist();
  inline const ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoDoseLine >&
      doselinelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoDoseLine >*
      mutable_doselinelist();
  
  // optional .tps.proto.RtTpsProtoDoseLineSetting doseLineSetting = 2;
  inline bool has_doselinesetting() const;
  inline void clear_doselinesetting();
  static const int kDoseLineSettingFieldNumber = 2;
  inline const ::tps::proto::RtTpsProtoDoseLineSetting& doselinesetting() const;
  inline ::tps::proto::RtTpsProtoDoseLineSetting* mutable_doselinesetting();
  inline ::tps::proto::RtTpsProtoDoseLineSetting* release_doselinesetting();
  
  // optional string planUID = 3;
  inline bool has_planuid() const;
  inline void clear_planuid();
  static const int kPlanUIDFieldNumber = 3;
  inline const ::std::string& planuid() const;
  inline void set_planuid(const ::std::string& value);
  inline void set_planuid(const char* value);
  inline void set_planuid(const char* value, size_t size);
  inline ::std::string* mutable_planuid();
  inline ::std::string* release_planuid();
  
  // optional bool isTemporaryUpdated = 4;
  inline bool has_istemporaryupdated() const;
  inline void clear_istemporaryupdated();
  static const int kIsTemporaryUpdatedFieldNumber = 4;
  inline bool istemporaryupdated() const;
  inline void set_istemporaryupdated(bool value);
  
  // @@protoc_insertion_point(class_scope:tps.proto.RtTpsProtoDoseLineParams)
 private:
  inline void set_has_doselinesetting();
  inline void clear_has_doselinesetting();
  inline void set_has_planuid();
  inline void clear_has_planuid();
  inline void set_has_istemporaryupdated();
  inline void clear_has_istemporaryupdated();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoDoseLine > doselinelist_;
  ::tps::proto::RtTpsProtoDoseLineSetting* doselinesetting_;
  ::std::string* planuid_;
  bool istemporaryupdated_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_rt_5ftps_5fproto_5fdoselineparams_2eproto();
  friend void protobuf_AssignDesc_rt_5ftps_5fproto_5fdoselineparams_2eproto();
  friend void protobuf_ShutdownFile_rt_5ftps_5fproto_5fdoselineparams_2eproto();
  
  void InitAsDefaultInstance();
  static RtTpsProtoDoseLineParams* default_instance_;
};
// ===================================================================


// ===================================================================

// RtTpsProtoDoseLineParams

// repeated .tps.proto.RtTpsProtoDoseLine doseLineList = 1;
inline int RtTpsProtoDoseLineParams::doselinelist_size() const {
  return doselinelist_.size();
}
inline void RtTpsProtoDoseLineParams::clear_doselinelist() {
  doselinelist_.Clear();
}
inline const ::tps::proto::RtTpsProtoDoseLine& RtTpsProtoDoseLineParams::doselinelist(int index) const {
  return doselinelist_.Get(index);
}
inline ::tps::proto::RtTpsProtoDoseLine* RtTpsProtoDoseLineParams::mutable_doselinelist(int index) {
  return doselinelist_.Mutable(index);
}
inline ::tps::proto::RtTpsProtoDoseLine* RtTpsProtoDoseLineParams::add_doselinelist() {
  return doselinelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoDoseLine >&
RtTpsProtoDoseLineParams::doselinelist() const {
  return doselinelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoDoseLine >*
RtTpsProtoDoseLineParams::mutable_doselinelist() {
  return &doselinelist_;
}

// optional .tps.proto.RtTpsProtoDoseLineSetting doseLineSetting = 2;
inline bool RtTpsProtoDoseLineParams::has_doselinesetting() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RtTpsProtoDoseLineParams::set_has_doselinesetting() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RtTpsProtoDoseLineParams::clear_has_doselinesetting() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RtTpsProtoDoseLineParams::clear_doselinesetting() {
  if (doselinesetting_ != NULL) doselinesetting_->::tps::proto::RtTpsProtoDoseLineSetting::Clear();
  clear_has_doselinesetting();
}
inline const ::tps::proto::RtTpsProtoDoseLineSetting& RtTpsProtoDoseLineParams::doselinesetting() const {
  return doselinesetting_ != NULL ? *doselinesetting_ : *default_instance_->doselinesetting_;
}
inline ::tps::proto::RtTpsProtoDoseLineSetting* RtTpsProtoDoseLineParams::mutable_doselinesetting() {
  set_has_doselinesetting();
  if (doselinesetting_ == NULL) doselinesetting_ = new ::tps::proto::RtTpsProtoDoseLineSetting;
  return doselinesetting_;
}
inline ::tps::proto::RtTpsProtoDoseLineSetting* RtTpsProtoDoseLineParams::release_doselinesetting() {
  clear_has_doselinesetting();
  ::tps::proto::RtTpsProtoDoseLineSetting* temp = doselinesetting_;
  doselinesetting_ = NULL;
  return temp;
}

// optional string planUID = 3;
inline bool RtTpsProtoDoseLineParams::has_planuid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RtTpsProtoDoseLineParams::set_has_planuid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RtTpsProtoDoseLineParams::clear_has_planuid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RtTpsProtoDoseLineParams::clear_planuid() {
  if (planuid_ != &::google::protobuf::internal::kEmptyString) {
    planuid_->clear();
  }
  clear_has_planuid();
}
inline const ::std::string& RtTpsProtoDoseLineParams::planuid() const {
  return *planuid_;
}
inline void RtTpsProtoDoseLineParams::set_planuid(const ::std::string& value) {
  set_has_planuid();
  if (planuid_ == &::google::protobuf::internal::kEmptyString) {
    planuid_ = new ::std::string;
  }
  planuid_->assign(value);
}
inline void RtTpsProtoDoseLineParams::set_planuid(const char* value) {
  set_has_planuid();
  if (planuid_ == &::google::protobuf::internal::kEmptyString) {
    planuid_ = new ::std::string;
  }
  planuid_->assign(value);
}
inline void RtTpsProtoDoseLineParams::set_planuid(const char* value, size_t size) {
  set_has_planuid();
  if (planuid_ == &::google::protobuf::internal::kEmptyString) {
    planuid_ = new ::std::string;
  }
  planuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RtTpsProtoDoseLineParams::mutable_planuid() {
  set_has_planuid();
  if (planuid_ == &::google::protobuf::internal::kEmptyString) {
    planuid_ = new ::std::string;
  }
  return planuid_;
}
inline ::std::string* RtTpsProtoDoseLineParams::release_planuid() {
  clear_has_planuid();
  if (planuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = planuid_;
    planuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bool isTemporaryUpdated = 4;
inline bool RtTpsProtoDoseLineParams::has_istemporaryupdated() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RtTpsProtoDoseLineParams::set_has_istemporaryupdated() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RtTpsProtoDoseLineParams::clear_has_istemporaryupdated() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RtTpsProtoDoseLineParams::clear_istemporaryupdated() {
  istemporaryupdated_ = false;
  clear_has_istemporaryupdated();
}
inline bool RtTpsProtoDoseLineParams::istemporaryupdated() const {
  return istemporaryupdated_;
}
inline void RtTpsProtoDoseLineParams::set_istemporaryupdated(bool value) {
  set_has_istemporaryupdated();
  istemporaryupdated_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace tps

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rt_5ftps_5fproto_5fdoselineparams_2eproto__INCLUDED
