// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rt_tps_proto_doselinetemplate.proto

#ifndef PROTOBUF_rt_5ftps_5fproto_5fdoselinetemplate_2eproto__INCLUDED
#define PROTOBUF_rt_5ftps_5fproto_5fdoselinetemplate_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "rt_tps_proto_doseline.pb.h"
// @@protoc_insertion_point(includes)

namespace tps {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_rt_5ftps_5fproto_5fdoselinetemplate_2eproto();
void protobuf_AssignDesc_rt_5ftps_5fproto_5fdoselinetemplate_2eproto();
void protobuf_ShutdownFile_rt_5ftps_5fproto_5fdoselinetemplate_2eproto();

class RtTpsProtoDoseLineTemplate;
class RtTpsProtoRepeatedDoseLineTemplate;

// ===================================================================

class RtTpsProtoDoseLineTemplate : public ::google::protobuf::Message {
 public:
  RtTpsProtoDoseLineTemplate();
  virtual ~RtTpsProtoDoseLineTemplate();
  
  RtTpsProtoDoseLineTemplate(const RtTpsProtoDoseLineTemplate& from);
  
  inline RtTpsProtoDoseLineTemplate& operator=(const RtTpsProtoDoseLineTemplate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RtTpsProtoDoseLineTemplate& default_instance();
  
  void Swap(RtTpsProtoDoseLineTemplate* other);
  
  // implements Message ----------------------------------------------
  
  RtTpsProtoDoseLineTemplate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RtTpsProtoDoseLineTemplate& from);
  void MergeFrom(const RtTpsProtoDoseLineTemplate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string doseLineTemplateUID = 1;
  inline bool has_doselinetemplateuid() const;
  inline void clear_doselinetemplateuid();
  static const int kDoseLineTemplateUIDFieldNumber = 1;
  inline const ::std::string& doselinetemplateuid() const;
  inline void set_doselinetemplateuid(const ::std::string& value);
  inline void set_doselinetemplateuid(const char* value);
  inline void set_doselinetemplateuid(const char* value, size_t size);
  inline ::std::string* mutable_doselinetemplateuid();
  inline ::std::string* release_doselinetemplateuid();
  
  // optional string doseLineTemplateName = 2;
  inline bool has_doselinetemplatename() const;
  inline void clear_doselinetemplatename();
  static const int kDoseLineTemplateNameFieldNumber = 2;
  inline const ::std::string& doselinetemplatename() const;
  inline void set_doselinetemplatename(const ::std::string& value);
  inline void set_doselinetemplatename(const char* value);
  inline void set_doselinetemplatename(const char* value, size_t size);
  inline ::std::string* mutable_doselinetemplatename();
  inline ::std::string* release_doselinetemplatename();
  
  // optional string doseLineTemplateDescription = 3;
  inline bool has_doselinetemplatedescription() const;
  inline void clear_doselinetemplatedescription();
  static const int kDoseLineTemplateDescriptionFieldNumber = 3;
  inline const ::std::string& doselinetemplatedescription() const;
  inline void set_doselinetemplatedescription(const ::std::string& value);
  inline void set_doselinetemplatedescription(const char* value);
  inline void set_doselinetemplatedescription(const char* value, size_t size);
  inline ::std::string* mutable_doselinetemplatedescription();
  inline ::std::string* release_doselinetemplatedescription();
  
  // optional int32 displayMode = 4;
  inline bool has_displaymode() const;
  inline void clear_displaymode();
  static const int kDisplayModeFieldNumber = 4;
  inline ::google::protobuf::int32 displaymode() const;
  inline void set_displaymode(::google::protobuf::int32 value);
  
  // optional int32 hundredPercentDefinition = 5;
  inline bool has_hundredpercentdefinition() const;
  inline void clear_hundredpercentdefinition();
  static const int kHundredPercentDefinitionFieldNumber = 5;
  inline ::google::protobuf::int32 hundredpercentdefinition() const;
  inline void set_hundredpercentdefinition(::google::protobuf::int32 value);
  
  // optional double specifiedDose = 6;
  inline bool has_specifieddose() const;
  inline void clear_specifieddose();
  static const int kSpecifiedDoseFieldNumber = 6;
  inline double specifieddose() const;
  inline void set_specifieddose(double value);
  
  // repeated .tps.proto.RtTpsProtoDoseLine doseLineList = 7;
  inline int doselinelist_size() const;
  inline void clear_doselinelist();
  static const int kDoseLineListFieldNumber = 7;
  inline const ::tps::proto::RtTpsProtoDoseLine& doselinelist(int index) const;
  inline ::tps::proto::RtTpsProtoDoseLine* mutable_doselinelist(int index);
  inline ::tps::proto::RtTpsProtoDoseLine* add_doselinelist();
  inline const ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoDoseLine >&
      doselinelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoDoseLine >*
      mutable_doselinelist();
  
  // @@protoc_insertion_point(class_scope:tps.proto.RtTpsProtoDoseLineTemplate)
 private:
  inline void set_has_doselinetemplateuid();
  inline void clear_has_doselinetemplateuid();
  inline void set_has_doselinetemplatename();
  inline void clear_has_doselinetemplatename();
  inline void set_has_doselinetemplatedescription();
  inline void clear_has_doselinetemplatedescription();
  inline void set_has_displaymode();
  inline void clear_has_displaymode();
  inline void set_has_hundredpercentdefinition();
  inline void clear_has_hundredpercentdefinition();
  inline void set_has_specifieddose();
  inline void clear_has_specifieddose();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* doselinetemplateuid_;
  ::std::string* doselinetemplatename_;
  ::std::string* doselinetemplatedescription_;
  ::google::protobuf::int32 displaymode_;
  ::google::protobuf::int32 hundredpercentdefinition_;
  double specifieddose_;
  ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoDoseLine > doselinelist_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_rt_5ftps_5fproto_5fdoselinetemplate_2eproto();
  friend void protobuf_AssignDesc_rt_5ftps_5fproto_5fdoselinetemplate_2eproto();
  friend void protobuf_ShutdownFile_rt_5ftps_5fproto_5fdoselinetemplate_2eproto();
  
  void InitAsDefaultInstance();
  static RtTpsProtoDoseLineTemplate* default_instance_;
};
// -------------------------------------------------------------------

class RtTpsProtoRepeatedDoseLineTemplate : public ::google::protobuf::Message {
 public:
  RtTpsProtoRepeatedDoseLineTemplate();
  virtual ~RtTpsProtoRepeatedDoseLineTemplate();
  
  RtTpsProtoRepeatedDoseLineTemplate(const RtTpsProtoRepeatedDoseLineTemplate& from);
  
  inline RtTpsProtoRepeatedDoseLineTemplate& operator=(const RtTpsProtoRepeatedDoseLineTemplate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RtTpsProtoRepeatedDoseLineTemplate& default_instance();
  
  void Swap(RtTpsProtoRepeatedDoseLineTemplate* other);
  
  // implements Message ----------------------------------------------
  
  RtTpsProtoRepeatedDoseLineTemplate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RtTpsProtoRepeatedDoseLineTemplate& from);
  void MergeFrom(const RtTpsProtoRepeatedDoseLineTemplate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .tps.proto.RtTpsProtoDoseLineTemplate doseLineTemplateList = 1;
  inline int doselinetemplatelist_size() const;
  inline void clear_doselinetemplatelist();
  static const int kDoseLineTemplateListFieldNumber = 1;
  inline const ::tps::proto::RtTpsProtoDoseLineTemplate& doselinetemplatelist(int index) const;
  inline ::tps::proto::RtTpsProtoDoseLineTemplate* mutable_doselinetemplatelist(int index);
  inline ::tps::proto::RtTpsProtoDoseLineTemplate* add_doselinetemplatelist();
  inline const ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoDoseLineTemplate >&
      doselinetemplatelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoDoseLineTemplate >*
      mutable_doselinetemplatelist();
  
  // @@protoc_insertion_point(class_scope:tps.proto.RtTpsProtoRepeatedDoseLineTemplate)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoDoseLineTemplate > doselinetemplatelist_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_rt_5ftps_5fproto_5fdoselinetemplate_2eproto();
  friend void protobuf_AssignDesc_rt_5ftps_5fproto_5fdoselinetemplate_2eproto();
  friend void protobuf_ShutdownFile_rt_5ftps_5fproto_5fdoselinetemplate_2eproto();
  
  void InitAsDefaultInstance();
  static RtTpsProtoRepeatedDoseLineTemplate* default_instance_;
};
// ===================================================================


// ===================================================================

// RtTpsProtoDoseLineTemplate

// required string doseLineTemplateUID = 1;
inline bool RtTpsProtoDoseLineTemplate::has_doselinetemplateuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RtTpsProtoDoseLineTemplate::set_has_doselinetemplateuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RtTpsProtoDoseLineTemplate::clear_has_doselinetemplateuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RtTpsProtoDoseLineTemplate::clear_doselinetemplateuid() {
  if (doselinetemplateuid_ != &::google::protobuf::internal::kEmptyString) {
    doselinetemplateuid_->clear();
  }
  clear_has_doselinetemplateuid();
}
inline const ::std::string& RtTpsProtoDoseLineTemplate::doselinetemplateuid() const {
  return *doselinetemplateuid_;
}
inline void RtTpsProtoDoseLineTemplate::set_doselinetemplateuid(const ::std::string& value) {
  set_has_doselinetemplateuid();
  if (doselinetemplateuid_ == &::google::protobuf::internal::kEmptyString) {
    doselinetemplateuid_ = new ::std::string;
  }
  doselinetemplateuid_->assign(value);
}
inline void RtTpsProtoDoseLineTemplate::set_doselinetemplateuid(const char* value) {
  set_has_doselinetemplateuid();
  if (doselinetemplateuid_ == &::google::protobuf::internal::kEmptyString) {
    doselinetemplateuid_ = new ::std::string;
  }
  doselinetemplateuid_->assign(value);
}
inline void RtTpsProtoDoseLineTemplate::set_doselinetemplateuid(const char* value, size_t size) {
  set_has_doselinetemplateuid();
  if (doselinetemplateuid_ == &::google::protobuf::internal::kEmptyString) {
    doselinetemplateuid_ = new ::std::string;
  }
  doselinetemplateuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RtTpsProtoDoseLineTemplate::mutable_doselinetemplateuid() {
  set_has_doselinetemplateuid();
  if (doselinetemplateuid_ == &::google::protobuf::internal::kEmptyString) {
    doselinetemplateuid_ = new ::std::string;
  }
  return doselinetemplateuid_;
}
inline ::std::string* RtTpsProtoDoseLineTemplate::release_doselinetemplateuid() {
  clear_has_doselinetemplateuid();
  if (doselinetemplateuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = doselinetemplateuid_;
    doselinetemplateuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string doseLineTemplateName = 2;
inline bool RtTpsProtoDoseLineTemplate::has_doselinetemplatename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RtTpsProtoDoseLineTemplate::set_has_doselinetemplatename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RtTpsProtoDoseLineTemplate::clear_has_doselinetemplatename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RtTpsProtoDoseLineTemplate::clear_doselinetemplatename() {
  if (doselinetemplatename_ != &::google::protobuf::internal::kEmptyString) {
    doselinetemplatename_->clear();
  }
  clear_has_doselinetemplatename();
}
inline const ::std::string& RtTpsProtoDoseLineTemplate::doselinetemplatename() const {
  return *doselinetemplatename_;
}
inline void RtTpsProtoDoseLineTemplate::set_doselinetemplatename(const ::std::string& value) {
  set_has_doselinetemplatename();
  if (doselinetemplatename_ == &::google::protobuf::internal::kEmptyString) {
    doselinetemplatename_ = new ::std::string;
  }
  doselinetemplatename_->assign(value);
}
inline void RtTpsProtoDoseLineTemplate::set_doselinetemplatename(const char* value) {
  set_has_doselinetemplatename();
  if (doselinetemplatename_ == &::google::protobuf::internal::kEmptyString) {
    doselinetemplatename_ = new ::std::string;
  }
  doselinetemplatename_->assign(value);
}
inline void RtTpsProtoDoseLineTemplate::set_doselinetemplatename(const char* value, size_t size) {
  set_has_doselinetemplatename();
  if (doselinetemplatename_ == &::google::protobuf::internal::kEmptyString) {
    doselinetemplatename_ = new ::std::string;
  }
  doselinetemplatename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RtTpsProtoDoseLineTemplate::mutable_doselinetemplatename() {
  set_has_doselinetemplatename();
  if (doselinetemplatename_ == &::google::protobuf::internal::kEmptyString) {
    doselinetemplatename_ = new ::std::string;
  }
  return doselinetemplatename_;
}
inline ::std::string* RtTpsProtoDoseLineTemplate::release_doselinetemplatename() {
  clear_has_doselinetemplatename();
  if (doselinetemplatename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = doselinetemplatename_;
    doselinetemplatename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string doseLineTemplateDescription = 3;
inline bool RtTpsProtoDoseLineTemplate::has_doselinetemplatedescription() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RtTpsProtoDoseLineTemplate::set_has_doselinetemplatedescription() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RtTpsProtoDoseLineTemplate::clear_has_doselinetemplatedescription() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RtTpsProtoDoseLineTemplate::clear_doselinetemplatedescription() {
  if (doselinetemplatedescription_ != &::google::protobuf::internal::kEmptyString) {
    doselinetemplatedescription_->clear();
  }
  clear_has_doselinetemplatedescription();
}
inline const ::std::string& RtTpsProtoDoseLineTemplate::doselinetemplatedescription() const {
  return *doselinetemplatedescription_;
}
inline void RtTpsProtoDoseLineTemplate::set_doselinetemplatedescription(const ::std::string& value) {
  set_has_doselinetemplatedescription();
  if (doselinetemplatedescription_ == &::google::protobuf::internal::kEmptyString) {
    doselinetemplatedescription_ = new ::std::string;
  }
  doselinetemplatedescription_->assign(value);
}
inline void RtTpsProtoDoseLineTemplate::set_doselinetemplatedescription(const char* value) {
  set_has_doselinetemplatedescription();
  if (doselinetemplatedescription_ == &::google::protobuf::internal::kEmptyString) {
    doselinetemplatedescription_ = new ::std::string;
  }
  doselinetemplatedescription_->assign(value);
}
inline void RtTpsProtoDoseLineTemplate::set_doselinetemplatedescription(const char* value, size_t size) {
  set_has_doselinetemplatedescription();
  if (doselinetemplatedescription_ == &::google::protobuf::internal::kEmptyString) {
    doselinetemplatedescription_ = new ::std::string;
  }
  doselinetemplatedescription_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RtTpsProtoDoseLineTemplate::mutable_doselinetemplatedescription() {
  set_has_doselinetemplatedescription();
  if (doselinetemplatedescription_ == &::google::protobuf::internal::kEmptyString) {
    doselinetemplatedescription_ = new ::std::string;
  }
  return doselinetemplatedescription_;
}
inline ::std::string* RtTpsProtoDoseLineTemplate::release_doselinetemplatedescription() {
  clear_has_doselinetemplatedescription();
  if (doselinetemplatedescription_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = doselinetemplatedescription_;
    doselinetemplatedescription_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 displayMode = 4;
inline bool RtTpsProtoDoseLineTemplate::has_displaymode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RtTpsProtoDoseLineTemplate::set_has_displaymode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RtTpsProtoDoseLineTemplate::clear_has_displaymode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RtTpsProtoDoseLineTemplate::clear_displaymode() {
  displaymode_ = 0;
  clear_has_displaymode();
}
inline ::google::protobuf::int32 RtTpsProtoDoseLineTemplate::displaymode() const {
  return displaymode_;
}
inline void RtTpsProtoDoseLineTemplate::set_displaymode(::google::protobuf::int32 value) {
  set_has_displaymode();
  displaymode_ = value;
}

// optional int32 hundredPercentDefinition = 5;
inline bool RtTpsProtoDoseLineTemplate::has_hundredpercentdefinition() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RtTpsProtoDoseLineTemplate::set_has_hundredpercentdefinition() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RtTpsProtoDoseLineTemplate::clear_has_hundredpercentdefinition() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RtTpsProtoDoseLineTemplate::clear_hundredpercentdefinition() {
  hundredpercentdefinition_ = 0;
  clear_has_hundredpercentdefinition();
}
inline ::google::protobuf::int32 RtTpsProtoDoseLineTemplate::hundredpercentdefinition() const {
  return hundredpercentdefinition_;
}
inline void RtTpsProtoDoseLineTemplate::set_hundredpercentdefinition(::google::protobuf::int32 value) {
  set_has_hundredpercentdefinition();
  hundredpercentdefinition_ = value;
}

// optional double specifiedDose = 6;
inline bool RtTpsProtoDoseLineTemplate::has_specifieddose() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RtTpsProtoDoseLineTemplate::set_has_specifieddose() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RtTpsProtoDoseLineTemplate::clear_has_specifieddose() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RtTpsProtoDoseLineTemplate::clear_specifieddose() {
  specifieddose_ = 0;
  clear_has_specifieddose();
}
inline double RtTpsProtoDoseLineTemplate::specifieddose() const {
  return specifieddose_;
}
inline void RtTpsProtoDoseLineTemplate::set_specifieddose(double value) {
  set_has_specifieddose();
  specifieddose_ = value;
}

// repeated .tps.proto.RtTpsProtoDoseLine doseLineList = 7;
inline int RtTpsProtoDoseLineTemplate::doselinelist_size() const {
  return doselinelist_.size();
}
inline void RtTpsProtoDoseLineTemplate::clear_doselinelist() {
  doselinelist_.Clear();
}
inline const ::tps::proto::RtTpsProtoDoseLine& RtTpsProtoDoseLineTemplate::doselinelist(int index) const {
  return doselinelist_.Get(index);
}
inline ::tps::proto::RtTpsProtoDoseLine* RtTpsProtoDoseLineTemplate::mutable_doselinelist(int index) {
  return doselinelist_.Mutable(index);
}
inline ::tps::proto::RtTpsProtoDoseLine* RtTpsProtoDoseLineTemplate::add_doselinelist() {
  return doselinelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoDoseLine >&
RtTpsProtoDoseLineTemplate::doselinelist() const {
  return doselinelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoDoseLine >*
RtTpsProtoDoseLineTemplate::mutable_doselinelist() {
  return &doselinelist_;
}

// -------------------------------------------------------------------

// RtTpsProtoRepeatedDoseLineTemplate

// repeated .tps.proto.RtTpsProtoDoseLineTemplate doseLineTemplateList = 1;
inline int RtTpsProtoRepeatedDoseLineTemplate::doselinetemplatelist_size() const {
  return doselinetemplatelist_.size();
}
inline void RtTpsProtoRepeatedDoseLineTemplate::clear_doselinetemplatelist() {
  doselinetemplatelist_.Clear();
}
inline const ::tps::proto::RtTpsProtoDoseLineTemplate& RtTpsProtoRepeatedDoseLineTemplate::doselinetemplatelist(int index) const {
  return doselinetemplatelist_.Get(index);
}
inline ::tps::proto::RtTpsProtoDoseLineTemplate* RtTpsProtoRepeatedDoseLineTemplate::mutable_doselinetemplatelist(int index) {
  return doselinetemplatelist_.Mutable(index);
}
inline ::tps::proto::RtTpsProtoDoseLineTemplate* RtTpsProtoRepeatedDoseLineTemplate::add_doselinetemplatelist() {
  return doselinetemplatelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoDoseLineTemplate >&
RtTpsProtoRepeatedDoseLineTemplate::doselinetemplatelist() const {
  return doselinetemplatelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoDoseLineTemplate >*
RtTpsProtoRepeatedDoseLineTemplate::mutable_doselinetemplatelist() {
  return &doselinetemplatelist_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace tps

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rt_5ftps_5fproto_5fdoselinetemplate_2eproto__INCLUDED
