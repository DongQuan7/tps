// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rt_tps_mprpageturn.proto

#ifndef PROTOBUF_rt_5ftps_5fmprpageturn_2eproto__INCLUDED
#define PROTOBUF_rt_5ftps_5fmprpageturn_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace tps {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_rt_5ftps_5fmprpageturn_2eproto();
void protobuf_AssignDesc_rt_5ftps_5fmprpageturn_2eproto();
void protobuf_ShutdownFile_rt_5ftps_5fmprpageturn_2eproto();

class RT_TPS_MPR_PAGETURN;

// ===================================================================

class RT_TPS_MPR_PAGETURN : public ::google::protobuf::Message {
 public:
  RT_TPS_MPR_PAGETURN();
  virtual ~RT_TPS_MPR_PAGETURN();
  
  RT_TPS_MPR_PAGETURN(const RT_TPS_MPR_PAGETURN& from);
  
  inline RT_TPS_MPR_PAGETURN& operator=(const RT_TPS_MPR_PAGETURN& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RT_TPS_MPR_PAGETURN& default_instance();
  
  void Swap(RT_TPS_MPR_PAGETURN* other);
  
  // implements Message ----------------------------------------------
  
  RT_TPS_MPR_PAGETURN* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RT_TPS_MPR_PAGETURN& from);
  void MergeFrom(const RT_TPS_MPR_PAGETURN& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 viewerControlID = 1;
  inline bool has_viewercontrolid() const;
  inline void clear_viewercontrolid();
  static const int kViewerControlIDFieldNumber = 1;
  inline ::google::protobuf::int32 viewercontrolid() const;
  inline void set_viewercontrolid(::google::protobuf::int32 value);
  
  // required int32 cellID = 2;
  inline bool has_cellid() const;
  inline void clear_cellid();
  static const int kCellIDFieldNumber = 2;
  inline ::google::protobuf::int32 cellid() const;
  inline void set_cellid(::google::protobuf::int32 value);
  
  // required int32 pageturn = 3;
  inline bool has_pageturn() const;
  inline void clear_pageturn();
  static const int kPageturnFieldNumber = 3;
  inline ::google::protobuf::int32 pageturn() const;
  inline void set_pageturn(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:tps.proto.RT_TPS_MPR_PAGETURN)
 private:
  inline void set_has_viewercontrolid();
  inline void clear_has_viewercontrolid();
  inline void set_has_cellid();
  inline void clear_has_cellid();
  inline void set_has_pageturn();
  inline void clear_has_pageturn();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 viewercontrolid_;
  ::google::protobuf::int32 cellid_;
  ::google::protobuf::int32 pageturn_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_rt_5ftps_5fmprpageturn_2eproto();
  friend void protobuf_AssignDesc_rt_5ftps_5fmprpageturn_2eproto();
  friend void protobuf_ShutdownFile_rt_5ftps_5fmprpageturn_2eproto();
  
  void InitAsDefaultInstance();
  static RT_TPS_MPR_PAGETURN* default_instance_;
};
// ===================================================================


// ===================================================================

// RT_TPS_MPR_PAGETURN

// required int32 viewerControlID = 1;
inline bool RT_TPS_MPR_PAGETURN::has_viewercontrolid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RT_TPS_MPR_PAGETURN::set_has_viewercontrolid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RT_TPS_MPR_PAGETURN::clear_has_viewercontrolid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RT_TPS_MPR_PAGETURN::clear_viewercontrolid() {
  viewercontrolid_ = 0;
  clear_has_viewercontrolid();
}
inline ::google::protobuf::int32 RT_TPS_MPR_PAGETURN::viewercontrolid() const {
  return viewercontrolid_;
}
inline void RT_TPS_MPR_PAGETURN::set_viewercontrolid(::google::protobuf::int32 value) {
  set_has_viewercontrolid();
  viewercontrolid_ = value;
}

// required int32 cellID = 2;
inline bool RT_TPS_MPR_PAGETURN::has_cellid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RT_TPS_MPR_PAGETURN::set_has_cellid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RT_TPS_MPR_PAGETURN::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RT_TPS_MPR_PAGETURN::clear_cellid() {
  cellid_ = 0;
  clear_has_cellid();
}
inline ::google::protobuf::int32 RT_TPS_MPR_PAGETURN::cellid() const {
  return cellid_;
}
inline void RT_TPS_MPR_PAGETURN::set_cellid(::google::protobuf::int32 value) {
  set_has_cellid();
  cellid_ = value;
}

// required int32 pageturn = 3;
inline bool RT_TPS_MPR_PAGETURN::has_pageturn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RT_TPS_MPR_PAGETURN::set_has_pageturn() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RT_TPS_MPR_PAGETURN::clear_has_pageturn() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RT_TPS_MPR_PAGETURN::clear_pageturn() {
  pageturn_ = 0;
  clear_has_pageturn();
}
inline ::google::protobuf::int32 RT_TPS_MPR_PAGETURN::pageturn() const {
  return pageturn_;
}
inline void RT_TPS_MPR_PAGETURN::set_pageturn(::google::protobuf::int32 value) {
  set_has_pageturn();
  pageturn_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace tps

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rt_5ftps_5fmprpageturn_2eproto__INCLUDED
