// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rt_ms_wedgefactorSetting.proto

#ifndef PROTOBUF_rt_5fms_5fwedgefactorSetting_2eproto__INCLUDED
#define PROTOBUF_rt_5fms_5fwedgefactorSetting_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace ms {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_rt_5fms_5fwedgefactorSetting_2eproto();
void protobuf_AssignDesc_rt_5fms_5fwedgefactorSetting_2eproto();
void protobuf_ShutdownFile_rt_5fms_5fwedgefactorSetting_2eproto();

class RT_MS_WedgeFactorSettingInfo;
class RT_MS_WedgeFactorSettingInfoList;

// ===================================================================

class RT_MS_WedgeFactorSettingInfo : public ::google::protobuf::Message {
 public:
  RT_MS_WedgeFactorSettingInfo();
  virtual ~RT_MS_WedgeFactorSettingInfo();
  
  RT_MS_WedgeFactorSettingInfo(const RT_MS_WedgeFactorSettingInfo& from);
  
  inline RT_MS_WedgeFactorSettingInfo& operator=(const RT_MS_WedgeFactorSettingInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RT_MS_WedgeFactorSettingInfo& default_instance();
  
  void Swap(RT_MS_WedgeFactorSettingInfo* other);
  
  // implements Message ----------------------------------------------
  
  RT_MS_WedgeFactorSettingInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RT_MS_WedgeFactorSettingInfo& from);
  void MergeFrom(const RT_MS_WedgeFactorSettingInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string accessoryUID = 1;
  inline bool has_accessoryuid() const;
  inline void clear_accessoryuid();
  static const int kAccessoryUIDFieldNumber = 1;
  inline const ::std::string& accessoryuid() const;
  inline void set_accessoryuid(const ::std::string& value);
  inline void set_accessoryuid(const char* value);
  inline void set_accessoryuid(const char* value, size_t size);
  inline ::std::string* mutable_accessoryuid();
  inline ::std::string* release_accessoryuid();
  
  // optional float fieldSizeX = 2;
  inline bool has_fieldsizex() const;
  inline void clear_fieldsizex();
  static const int kFieldSizeXFieldNumber = 2;
  inline float fieldsizex() const;
  inline void set_fieldsizex(float value);
  
  // optional float fieldSizeY = 3;
  inline bool has_fieldsizey() const;
  inline void clear_fieldsizey();
  static const int kFieldSizeYFieldNumber = 3;
  inline float fieldsizey() const;
  inline void set_fieldsizey(float value);
  
  // optional float value = 4;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 4;
  inline float value() const;
  inline void set_value(float value);
  
  // optional string accessoryName = 5;
  inline bool has_accessoryname() const;
  inline void clear_accessoryname();
  static const int kAccessoryNameFieldNumber = 5;
  inline const ::std::string& accessoryname() const;
  inline void set_accessoryname(const ::std::string& value);
  inline void set_accessoryname(const char* value);
  inline void set_accessoryname(const char* value, size_t size);
  inline ::std::string* mutable_accessoryname();
  inline ::std::string* release_accessoryname();
  
  // @@protoc_insertion_point(class_scope:ms.proto.RT_MS_WedgeFactorSettingInfo)
 private:
  inline void set_has_accessoryuid();
  inline void clear_has_accessoryuid();
  inline void set_has_fieldsizex();
  inline void clear_has_fieldsizex();
  inline void set_has_fieldsizey();
  inline void clear_has_fieldsizey();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_accessoryname();
  inline void clear_has_accessoryname();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* accessoryuid_;
  float fieldsizex_;
  float fieldsizey_;
  ::std::string* accessoryname_;
  float value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_rt_5fms_5fwedgefactorSetting_2eproto();
  friend void protobuf_AssignDesc_rt_5fms_5fwedgefactorSetting_2eproto();
  friend void protobuf_ShutdownFile_rt_5fms_5fwedgefactorSetting_2eproto();
  
  void InitAsDefaultInstance();
  static RT_MS_WedgeFactorSettingInfo* default_instance_;
};
// -------------------------------------------------------------------

class RT_MS_WedgeFactorSettingInfoList : public ::google::protobuf::Message {
 public:
  RT_MS_WedgeFactorSettingInfoList();
  virtual ~RT_MS_WedgeFactorSettingInfoList();
  
  RT_MS_WedgeFactorSettingInfoList(const RT_MS_WedgeFactorSettingInfoList& from);
  
  inline RT_MS_WedgeFactorSettingInfoList& operator=(const RT_MS_WedgeFactorSettingInfoList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RT_MS_WedgeFactorSettingInfoList& default_instance();
  
  void Swap(RT_MS_WedgeFactorSettingInfoList* other);
  
  // implements Message ----------------------------------------------
  
  RT_MS_WedgeFactorSettingInfoList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RT_MS_WedgeFactorSettingInfoList& from);
  void MergeFrom(const RT_MS_WedgeFactorSettingInfoList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline const ::std::string& uid() const;
  inline void set_uid(const ::std::string& value);
  inline void set_uid(const char* value);
  inline void set_uid(const char* value, size_t size);
  inline ::std::string* mutable_uid();
  inline ::std::string* release_uid();
  
  // optional string parentUID = 2;
  inline bool has_parentuid() const;
  inline void clear_parentuid();
  static const int kParentUIDFieldNumber = 2;
  inline const ::std::string& parentuid() const;
  inline void set_parentuid(const ::std::string& value);
  inline void set_parentuid(const char* value);
  inline void set_parentuid(const char* value, size_t size);
  inline ::std::string* mutable_parentuid();
  inline ::std::string* release_parentuid();
  
  // repeated .ms.proto.RT_MS_WedgeFactorSettingInfo wedgeFactorList = 3;
  inline int wedgefactorlist_size() const;
  inline void clear_wedgefactorlist();
  static const int kWedgeFactorListFieldNumber = 3;
  inline const ::ms::proto::RT_MS_WedgeFactorSettingInfo& wedgefactorlist(int index) const;
  inline ::ms::proto::RT_MS_WedgeFactorSettingInfo* mutable_wedgefactorlist(int index);
  inline ::ms::proto::RT_MS_WedgeFactorSettingInfo* add_wedgefactorlist();
  inline const ::google::protobuf::RepeatedPtrField< ::ms::proto::RT_MS_WedgeFactorSettingInfo >&
      wedgefactorlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::ms::proto::RT_MS_WedgeFactorSettingInfo >*
      mutable_wedgefactorlist();
  
  // optional float wedgefactordepth = 4;
  inline bool has_wedgefactordepth() const;
  inline void clear_wedgefactordepth();
  static const int kWedgefactordepthFieldNumber = 4;
  inline float wedgefactordepth() const;
  inline void set_wedgefactordepth(float value);
  
  // @@protoc_insertion_point(class_scope:ms.proto.RT_MS_WedgeFactorSettingInfoList)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_parentuid();
  inline void clear_has_parentuid();
  inline void set_has_wedgefactordepth();
  inline void clear_has_wedgefactordepth();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* uid_;
  ::std::string* parentuid_;
  ::google::protobuf::RepeatedPtrField< ::ms::proto::RT_MS_WedgeFactorSettingInfo > wedgefactorlist_;
  float wedgefactordepth_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_rt_5fms_5fwedgefactorSetting_2eproto();
  friend void protobuf_AssignDesc_rt_5fms_5fwedgefactorSetting_2eproto();
  friend void protobuf_ShutdownFile_rt_5fms_5fwedgefactorSetting_2eproto();
  
  void InitAsDefaultInstance();
  static RT_MS_WedgeFactorSettingInfoList* default_instance_;
};
// ===================================================================


// ===================================================================

// RT_MS_WedgeFactorSettingInfo

// optional string accessoryUID = 1;
inline bool RT_MS_WedgeFactorSettingInfo::has_accessoryuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RT_MS_WedgeFactorSettingInfo::set_has_accessoryuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RT_MS_WedgeFactorSettingInfo::clear_has_accessoryuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RT_MS_WedgeFactorSettingInfo::clear_accessoryuid() {
  if (accessoryuid_ != &::google::protobuf::internal::kEmptyString) {
    accessoryuid_->clear();
  }
  clear_has_accessoryuid();
}
inline const ::std::string& RT_MS_WedgeFactorSettingInfo::accessoryuid() const {
  return *accessoryuid_;
}
inline void RT_MS_WedgeFactorSettingInfo::set_accessoryuid(const ::std::string& value) {
  set_has_accessoryuid();
  if (accessoryuid_ == &::google::protobuf::internal::kEmptyString) {
    accessoryuid_ = new ::std::string;
  }
  accessoryuid_->assign(value);
}
inline void RT_MS_WedgeFactorSettingInfo::set_accessoryuid(const char* value) {
  set_has_accessoryuid();
  if (accessoryuid_ == &::google::protobuf::internal::kEmptyString) {
    accessoryuid_ = new ::std::string;
  }
  accessoryuid_->assign(value);
}
inline void RT_MS_WedgeFactorSettingInfo::set_accessoryuid(const char* value, size_t size) {
  set_has_accessoryuid();
  if (accessoryuid_ == &::google::protobuf::internal::kEmptyString) {
    accessoryuid_ = new ::std::string;
  }
  accessoryuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RT_MS_WedgeFactorSettingInfo::mutable_accessoryuid() {
  set_has_accessoryuid();
  if (accessoryuid_ == &::google::protobuf::internal::kEmptyString) {
    accessoryuid_ = new ::std::string;
  }
  return accessoryuid_;
}
inline ::std::string* RT_MS_WedgeFactorSettingInfo::release_accessoryuid() {
  clear_has_accessoryuid();
  if (accessoryuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = accessoryuid_;
    accessoryuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional float fieldSizeX = 2;
inline bool RT_MS_WedgeFactorSettingInfo::has_fieldsizex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RT_MS_WedgeFactorSettingInfo::set_has_fieldsizex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RT_MS_WedgeFactorSettingInfo::clear_has_fieldsizex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RT_MS_WedgeFactorSettingInfo::clear_fieldsizex() {
  fieldsizex_ = 0;
  clear_has_fieldsizex();
}
inline float RT_MS_WedgeFactorSettingInfo::fieldsizex() const {
  return fieldsizex_;
}
inline void RT_MS_WedgeFactorSettingInfo::set_fieldsizex(float value) {
  set_has_fieldsizex();
  fieldsizex_ = value;
}

// optional float fieldSizeY = 3;
inline bool RT_MS_WedgeFactorSettingInfo::has_fieldsizey() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RT_MS_WedgeFactorSettingInfo::set_has_fieldsizey() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RT_MS_WedgeFactorSettingInfo::clear_has_fieldsizey() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RT_MS_WedgeFactorSettingInfo::clear_fieldsizey() {
  fieldsizey_ = 0;
  clear_has_fieldsizey();
}
inline float RT_MS_WedgeFactorSettingInfo::fieldsizey() const {
  return fieldsizey_;
}
inline void RT_MS_WedgeFactorSettingInfo::set_fieldsizey(float value) {
  set_has_fieldsizey();
  fieldsizey_ = value;
}

// optional float value = 4;
inline bool RT_MS_WedgeFactorSettingInfo::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RT_MS_WedgeFactorSettingInfo::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RT_MS_WedgeFactorSettingInfo::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RT_MS_WedgeFactorSettingInfo::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline float RT_MS_WedgeFactorSettingInfo::value() const {
  return value_;
}
inline void RT_MS_WedgeFactorSettingInfo::set_value(float value) {
  set_has_value();
  value_ = value;
}

// optional string accessoryName = 5;
inline bool RT_MS_WedgeFactorSettingInfo::has_accessoryname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RT_MS_WedgeFactorSettingInfo::set_has_accessoryname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RT_MS_WedgeFactorSettingInfo::clear_has_accessoryname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RT_MS_WedgeFactorSettingInfo::clear_accessoryname() {
  if (accessoryname_ != &::google::protobuf::internal::kEmptyString) {
    accessoryname_->clear();
  }
  clear_has_accessoryname();
}
inline const ::std::string& RT_MS_WedgeFactorSettingInfo::accessoryname() const {
  return *accessoryname_;
}
inline void RT_MS_WedgeFactorSettingInfo::set_accessoryname(const ::std::string& value) {
  set_has_accessoryname();
  if (accessoryname_ == &::google::protobuf::internal::kEmptyString) {
    accessoryname_ = new ::std::string;
  }
  accessoryname_->assign(value);
}
inline void RT_MS_WedgeFactorSettingInfo::set_accessoryname(const char* value) {
  set_has_accessoryname();
  if (accessoryname_ == &::google::protobuf::internal::kEmptyString) {
    accessoryname_ = new ::std::string;
  }
  accessoryname_->assign(value);
}
inline void RT_MS_WedgeFactorSettingInfo::set_accessoryname(const char* value, size_t size) {
  set_has_accessoryname();
  if (accessoryname_ == &::google::protobuf::internal::kEmptyString) {
    accessoryname_ = new ::std::string;
  }
  accessoryname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RT_MS_WedgeFactorSettingInfo::mutable_accessoryname() {
  set_has_accessoryname();
  if (accessoryname_ == &::google::protobuf::internal::kEmptyString) {
    accessoryname_ = new ::std::string;
  }
  return accessoryname_;
}
inline ::std::string* RT_MS_WedgeFactorSettingInfo::release_accessoryname() {
  clear_has_accessoryname();
  if (accessoryname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = accessoryname_;
    accessoryname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// RT_MS_WedgeFactorSettingInfoList

// optional string uid = 1;
inline bool RT_MS_WedgeFactorSettingInfoList::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RT_MS_WedgeFactorSettingInfoList::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RT_MS_WedgeFactorSettingInfoList::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RT_MS_WedgeFactorSettingInfoList::clear_uid() {
  if (uid_ != &::google::protobuf::internal::kEmptyString) {
    uid_->clear();
  }
  clear_has_uid();
}
inline const ::std::string& RT_MS_WedgeFactorSettingInfoList::uid() const {
  return *uid_;
}
inline void RT_MS_WedgeFactorSettingInfoList::set_uid(const ::std::string& value) {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::kEmptyString) {
    uid_ = new ::std::string;
  }
  uid_->assign(value);
}
inline void RT_MS_WedgeFactorSettingInfoList::set_uid(const char* value) {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::kEmptyString) {
    uid_ = new ::std::string;
  }
  uid_->assign(value);
}
inline void RT_MS_WedgeFactorSettingInfoList::set_uid(const char* value, size_t size) {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::kEmptyString) {
    uid_ = new ::std::string;
  }
  uid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RT_MS_WedgeFactorSettingInfoList::mutable_uid() {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::kEmptyString) {
    uid_ = new ::std::string;
  }
  return uid_;
}
inline ::std::string* RT_MS_WedgeFactorSettingInfoList::release_uid() {
  clear_has_uid();
  if (uid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = uid_;
    uid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string parentUID = 2;
inline bool RT_MS_WedgeFactorSettingInfoList::has_parentuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RT_MS_WedgeFactorSettingInfoList::set_has_parentuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RT_MS_WedgeFactorSettingInfoList::clear_has_parentuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RT_MS_WedgeFactorSettingInfoList::clear_parentuid() {
  if (parentuid_ != &::google::protobuf::internal::kEmptyString) {
    parentuid_->clear();
  }
  clear_has_parentuid();
}
inline const ::std::string& RT_MS_WedgeFactorSettingInfoList::parentuid() const {
  return *parentuid_;
}
inline void RT_MS_WedgeFactorSettingInfoList::set_parentuid(const ::std::string& value) {
  set_has_parentuid();
  if (parentuid_ == &::google::protobuf::internal::kEmptyString) {
    parentuid_ = new ::std::string;
  }
  parentuid_->assign(value);
}
inline void RT_MS_WedgeFactorSettingInfoList::set_parentuid(const char* value) {
  set_has_parentuid();
  if (parentuid_ == &::google::protobuf::internal::kEmptyString) {
    parentuid_ = new ::std::string;
  }
  parentuid_->assign(value);
}
inline void RT_MS_WedgeFactorSettingInfoList::set_parentuid(const char* value, size_t size) {
  set_has_parentuid();
  if (parentuid_ == &::google::protobuf::internal::kEmptyString) {
    parentuid_ = new ::std::string;
  }
  parentuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RT_MS_WedgeFactorSettingInfoList::mutable_parentuid() {
  set_has_parentuid();
  if (parentuid_ == &::google::protobuf::internal::kEmptyString) {
    parentuid_ = new ::std::string;
  }
  return parentuid_;
}
inline ::std::string* RT_MS_WedgeFactorSettingInfoList::release_parentuid() {
  clear_has_parentuid();
  if (parentuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = parentuid_;
    parentuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .ms.proto.RT_MS_WedgeFactorSettingInfo wedgeFactorList = 3;
inline int RT_MS_WedgeFactorSettingInfoList::wedgefactorlist_size() const {
  return wedgefactorlist_.size();
}
inline void RT_MS_WedgeFactorSettingInfoList::clear_wedgefactorlist() {
  wedgefactorlist_.Clear();
}
inline const ::ms::proto::RT_MS_WedgeFactorSettingInfo& RT_MS_WedgeFactorSettingInfoList::wedgefactorlist(int index) const {
  return wedgefactorlist_.Get(index);
}
inline ::ms::proto::RT_MS_WedgeFactorSettingInfo* RT_MS_WedgeFactorSettingInfoList::mutable_wedgefactorlist(int index) {
  return wedgefactorlist_.Mutable(index);
}
inline ::ms::proto::RT_MS_WedgeFactorSettingInfo* RT_MS_WedgeFactorSettingInfoList::add_wedgefactorlist() {
  return wedgefactorlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ms::proto::RT_MS_WedgeFactorSettingInfo >&
RT_MS_WedgeFactorSettingInfoList::wedgefactorlist() const {
  return wedgefactorlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::ms::proto::RT_MS_WedgeFactorSettingInfo >*
RT_MS_WedgeFactorSettingInfoList::mutable_wedgefactorlist() {
  return &wedgefactorlist_;
}

// optional float wedgefactordepth = 4;
inline bool RT_MS_WedgeFactorSettingInfoList::has_wedgefactordepth() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RT_MS_WedgeFactorSettingInfoList::set_has_wedgefactordepth() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RT_MS_WedgeFactorSettingInfoList::clear_has_wedgefactordepth() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RT_MS_WedgeFactorSettingInfoList::clear_wedgefactordepth() {
  wedgefactordepth_ = 0;
  clear_has_wedgefactordepth();
}
inline float RT_MS_WedgeFactorSettingInfoList::wedgefactordepth() const {
  return wedgefactordepth_;
}
inline void RT_MS_WedgeFactorSettingInfoList::set_wedgefactordepth(float value) {
  set_has_wedgefactordepth();
  wedgefactordepth_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace ms

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rt_5fms_5fwedgefactorSetting_2eproto__INCLUDED
