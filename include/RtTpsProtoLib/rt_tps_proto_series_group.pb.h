// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rt_tps_proto_series_group.proto

#ifndef PROTOBUF_rt_5ftps_5fproto_5fseries_5fgroup_2eproto__INCLUDED
#define PROTOBUF_rt_5ftps_5fproto_5fseries_5fgroup_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace tps {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_rt_5ftps_5fproto_5fseries_5fgroup_2eproto();
void protobuf_AssignDesc_rt_5ftps_5fproto_5fseries_5fgroup_2eproto();
void protobuf_ShutdownFile_rt_5ftps_5fproto_5fseries_5fgroup_2eproto();

class RtTpsProtoSeriesGroup;
class RtTpsProtoRepeatedSeriesGroup;

// ===================================================================

class RtTpsProtoSeriesGroup : public ::google::protobuf::Message {
 public:
  RtTpsProtoSeriesGroup();
  virtual ~RtTpsProtoSeriesGroup();
  
  RtTpsProtoSeriesGroup(const RtTpsProtoSeriesGroup& from);
  
  inline RtTpsProtoSeriesGroup& operator=(const RtTpsProtoSeriesGroup& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RtTpsProtoSeriesGroup& default_instance();
  
  void Swap(RtTpsProtoSeriesGroup* other);
  
  // implements Message ----------------------------------------------
  
  RtTpsProtoSeriesGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RtTpsProtoSeriesGroup& from);
  void MergeFrom(const RtTpsProtoSeriesGroup& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string groupUid = 1;
  inline bool has_groupuid() const;
  inline void clear_groupuid();
  static const int kGroupUidFieldNumber = 1;
  inline const ::std::string& groupuid() const;
  inline void set_groupuid(const ::std::string& value);
  inline void set_groupuid(const char* value);
  inline void set_groupuid(const char* value, size_t size);
  inline ::std::string* mutable_groupuid();
  inline ::std::string* release_groupuid();
  
  // optional string groupName = 2;
  inline bool has_groupname() const;
  inline void clear_groupname();
  static const int kGroupNameFieldNumber = 2;
  inline const ::std::string& groupname() const;
  inline void set_groupname(const ::std::string& value);
  inline void set_groupname(const char* value);
  inline void set_groupname(const char* value, size_t size);
  inline ::std::string* mutable_groupname();
  inline ::std::string* release_groupname();
  
  // optional int32 groupType = 3;
  inline bool has_grouptype() const;
  inline void clear_grouptype();
  static const int kGroupTypeFieldNumber = 3;
  inline ::google::protobuf::int32 grouptype() const;
  inline void set_grouptype(::google::protobuf::int32 value);
  
  // optional string mainSeries = 4;
  inline bool has_mainseries() const;
  inline void clear_mainseries();
  static const int kMainSeriesFieldNumber = 4;
  inline const ::std::string& mainseries() const;
  inline void set_mainseries(const ::std::string& value);
  inline void set_mainseries(const char* value);
  inline void set_mainseries(const char* value, size_t size);
  inline ::std::string* mutable_mainseries();
  inline ::std::string* release_mainseries();
  
  // repeated string seriesList = 5;
  inline int serieslist_size() const;
  inline void clear_serieslist();
  static const int kSeriesListFieldNumber = 5;
  inline const ::std::string& serieslist(int index) const;
  inline ::std::string* mutable_serieslist(int index);
  inline void set_serieslist(int index, const ::std::string& value);
  inline void set_serieslist(int index, const char* value);
  inline void set_serieslist(int index, const char* value, size_t size);
  inline ::std::string* add_serieslist();
  inline void add_serieslist(const ::std::string& value);
  inline void add_serieslist(const char* value);
  inline void add_serieslist(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& serieslist() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_serieslist();
  
  // @@protoc_insertion_point(class_scope:tps.proto.RtTpsProtoSeriesGroup)
 private:
  inline void set_has_groupuid();
  inline void clear_has_groupuid();
  inline void set_has_groupname();
  inline void clear_has_groupname();
  inline void set_has_grouptype();
  inline void clear_has_grouptype();
  inline void set_has_mainseries();
  inline void clear_has_mainseries();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* groupuid_;
  ::std::string* groupname_;
  ::std::string* mainseries_;
  ::google::protobuf::RepeatedPtrField< ::std::string> serieslist_;
  ::google::protobuf::int32 grouptype_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_rt_5ftps_5fproto_5fseries_5fgroup_2eproto();
  friend void protobuf_AssignDesc_rt_5ftps_5fproto_5fseries_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_rt_5ftps_5fproto_5fseries_5fgroup_2eproto();
  
  void InitAsDefaultInstance();
  static RtTpsProtoSeriesGroup* default_instance_;
};
// -------------------------------------------------------------------

class RtTpsProtoRepeatedSeriesGroup : public ::google::protobuf::Message {
 public:
  RtTpsProtoRepeatedSeriesGroup();
  virtual ~RtTpsProtoRepeatedSeriesGroup();
  
  RtTpsProtoRepeatedSeriesGroup(const RtTpsProtoRepeatedSeriesGroup& from);
  
  inline RtTpsProtoRepeatedSeriesGroup& operator=(const RtTpsProtoRepeatedSeriesGroup& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RtTpsProtoRepeatedSeriesGroup& default_instance();
  
  void Swap(RtTpsProtoRepeatedSeriesGroup* other);
  
  // implements Message ----------------------------------------------
  
  RtTpsProtoRepeatedSeriesGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RtTpsProtoRepeatedSeriesGroup& from);
  void MergeFrom(const RtTpsProtoRepeatedSeriesGroup& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .tps.proto.RtTpsProtoSeriesGroup series_group = 1;
  inline int series_group_size() const;
  inline void clear_series_group();
  static const int kSeriesGroupFieldNumber = 1;
  inline const ::tps::proto::RtTpsProtoSeriesGroup& series_group(int index) const;
  inline ::tps::proto::RtTpsProtoSeriesGroup* mutable_series_group(int index);
  inline ::tps::proto::RtTpsProtoSeriesGroup* add_series_group();
  inline const ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoSeriesGroup >&
      series_group() const;
  inline ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoSeriesGroup >*
      mutable_series_group();
  
  // @@protoc_insertion_point(class_scope:tps.proto.RtTpsProtoRepeatedSeriesGroup)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoSeriesGroup > series_group_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_rt_5ftps_5fproto_5fseries_5fgroup_2eproto();
  friend void protobuf_AssignDesc_rt_5ftps_5fproto_5fseries_5fgroup_2eproto();
  friend void protobuf_ShutdownFile_rt_5ftps_5fproto_5fseries_5fgroup_2eproto();
  
  void InitAsDefaultInstance();
  static RtTpsProtoRepeatedSeriesGroup* default_instance_;
};
// ===================================================================


// ===================================================================

// RtTpsProtoSeriesGroup

// required string groupUid = 1;
inline bool RtTpsProtoSeriesGroup::has_groupuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RtTpsProtoSeriesGroup::set_has_groupuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RtTpsProtoSeriesGroup::clear_has_groupuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RtTpsProtoSeriesGroup::clear_groupuid() {
  if (groupuid_ != &::google::protobuf::internal::kEmptyString) {
    groupuid_->clear();
  }
  clear_has_groupuid();
}
inline const ::std::string& RtTpsProtoSeriesGroup::groupuid() const {
  return *groupuid_;
}
inline void RtTpsProtoSeriesGroup::set_groupuid(const ::std::string& value) {
  set_has_groupuid();
  if (groupuid_ == &::google::protobuf::internal::kEmptyString) {
    groupuid_ = new ::std::string;
  }
  groupuid_->assign(value);
}
inline void RtTpsProtoSeriesGroup::set_groupuid(const char* value) {
  set_has_groupuid();
  if (groupuid_ == &::google::protobuf::internal::kEmptyString) {
    groupuid_ = new ::std::string;
  }
  groupuid_->assign(value);
}
inline void RtTpsProtoSeriesGroup::set_groupuid(const char* value, size_t size) {
  set_has_groupuid();
  if (groupuid_ == &::google::protobuf::internal::kEmptyString) {
    groupuid_ = new ::std::string;
  }
  groupuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RtTpsProtoSeriesGroup::mutable_groupuid() {
  set_has_groupuid();
  if (groupuid_ == &::google::protobuf::internal::kEmptyString) {
    groupuid_ = new ::std::string;
  }
  return groupuid_;
}
inline ::std::string* RtTpsProtoSeriesGroup::release_groupuid() {
  clear_has_groupuid();
  if (groupuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = groupuid_;
    groupuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string groupName = 2;
inline bool RtTpsProtoSeriesGroup::has_groupname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RtTpsProtoSeriesGroup::set_has_groupname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RtTpsProtoSeriesGroup::clear_has_groupname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RtTpsProtoSeriesGroup::clear_groupname() {
  if (groupname_ != &::google::protobuf::internal::kEmptyString) {
    groupname_->clear();
  }
  clear_has_groupname();
}
inline const ::std::string& RtTpsProtoSeriesGroup::groupname() const {
  return *groupname_;
}
inline void RtTpsProtoSeriesGroup::set_groupname(const ::std::string& value) {
  set_has_groupname();
  if (groupname_ == &::google::protobuf::internal::kEmptyString) {
    groupname_ = new ::std::string;
  }
  groupname_->assign(value);
}
inline void RtTpsProtoSeriesGroup::set_groupname(const char* value) {
  set_has_groupname();
  if (groupname_ == &::google::protobuf::internal::kEmptyString) {
    groupname_ = new ::std::string;
  }
  groupname_->assign(value);
}
inline void RtTpsProtoSeriesGroup::set_groupname(const char* value, size_t size) {
  set_has_groupname();
  if (groupname_ == &::google::protobuf::internal::kEmptyString) {
    groupname_ = new ::std::string;
  }
  groupname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RtTpsProtoSeriesGroup::mutable_groupname() {
  set_has_groupname();
  if (groupname_ == &::google::protobuf::internal::kEmptyString) {
    groupname_ = new ::std::string;
  }
  return groupname_;
}
inline ::std::string* RtTpsProtoSeriesGroup::release_groupname() {
  clear_has_groupname();
  if (groupname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = groupname_;
    groupname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 groupType = 3;
inline bool RtTpsProtoSeriesGroup::has_grouptype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RtTpsProtoSeriesGroup::set_has_grouptype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RtTpsProtoSeriesGroup::clear_has_grouptype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RtTpsProtoSeriesGroup::clear_grouptype() {
  grouptype_ = 0;
  clear_has_grouptype();
}
inline ::google::protobuf::int32 RtTpsProtoSeriesGroup::grouptype() const {
  return grouptype_;
}
inline void RtTpsProtoSeriesGroup::set_grouptype(::google::protobuf::int32 value) {
  set_has_grouptype();
  grouptype_ = value;
}

// optional string mainSeries = 4;
inline bool RtTpsProtoSeriesGroup::has_mainseries() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RtTpsProtoSeriesGroup::set_has_mainseries() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RtTpsProtoSeriesGroup::clear_has_mainseries() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RtTpsProtoSeriesGroup::clear_mainseries() {
  if (mainseries_ != &::google::protobuf::internal::kEmptyString) {
    mainseries_->clear();
  }
  clear_has_mainseries();
}
inline const ::std::string& RtTpsProtoSeriesGroup::mainseries() const {
  return *mainseries_;
}
inline void RtTpsProtoSeriesGroup::set_mainseries(const ::std::string& value) {
  set_has_mainseries();
  if (mainseries_ == &::google::protobuf::internal::kEmptyString) {
    mainseries_ = new ::std::string;
  }
  mainseries_->assign(value);
}
inline void RtTpsProtoSeriesGroup::set_mainseries(const char* value) {
  set_has_mainseries();
  if (mainseries_ == &::google::protobuf::internal::kEmptyString) {
    mainseries_ = new ::std::string;
  }
  mainseries_->assign(value);
}
inline void RtTpsProtoSeriesGroup::set_mainseries(const char* value, size_t size) {
  set_has_mainseries();
  if (mainseries_ == &::google::protobuf::internal::kEmptyString) {
    mainseries_ = new ::std::string;
  }
  mainseries_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RtTpsProtoSeriesGroup::mutable_mainseries() {
  set_has_mainseries();
  if (mainseries_ == &::google::protobuf::internal::kEmptyString) {
    mainseries_ = new ::std::string;
  }
  return mainseries_;
}
inline ::std::string* RtTpsProtoSeriesGroup::release_mainseries() {
  clear_has_mainseries();
  if (mainseries_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = mainseries_;
    mainseries_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated string seriesList = 5;
inline int RtTpsProtoSeriesGroup::serieslist_size() const {
  return serieslist_.size();
}
inline void RtTpsProtoSeriesGroup::clear_serieslist() {
  serieslist_.Clear();
}
inline const ::std::string& RtTpsProtoSeriesGroup::serieslist(int index) const {
  return serieslist_.Get(index);
}
inline ::std::string* RtTpsProtoSeriesGroup::mutable_serieslist(int index) {
  return serieslist_.Mutable(index);
}
inline void RtTpsProtoSeriesGroup::set_serieslist(int index, const ::std::string& value) {
  serieslist_.Mutable(index)->assign(value);
}
inline void RtTpsProtoSeriesGroup::set_serieslist(int index, const char* value) {
  serieslist_.Mutable(index)->assign(value);
}
inline void RtTpsProtoSeriesGroup::set_serieslist(int index, const char* value, size_t size) {
  serieslist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RtTpsProtoSeriesGroup::add_serieslist() {
  return serieslist_.Add();
}
inline void RtTpsProtoSeriesGroup::add_serieslist(const ::std::string& value) {
  serieslist_.Add()->assign(value);
}
inline void RtTpsProtoSeriesGroup::add_serieslist(const char* value) {
  serieslist_.Add()->assign(value);
}
inline void RtTpsProtoSeriesGroup::add_serieslist(const char* value, size_t size) {
  serieslist_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
RtTpsProtoSeriesGroup::serieslist() const {
  return serieslist_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
RtTpsProtoSeriesGroup::mutable_serieslist() {
  return &serieslist_;
}

// -------------------------------------------------------------------

// RtTpsProtoRepeatedSeriesGroup

// repeated .tps.proto.RtTpsProtoSeriesGroup series_group = 1;
inline int RtTpsProtoRepeatedSeriesGroup::series_group_size() const {
  return series_group_.size();
}
inline void RtTpsProtoRepeatedSeriesGroup::clear_series_group() {
  series_group_.Clear();
}
inline const ::tps::proto::RtTpsProtoSeriesGroup& RtTpsProtoRepeatedSeriesGroup::series_group(int index) const {
  return series_group_.Get(index);
}
inline ::tps::proto::RtTpsProtoSeriesGroup* RtTpsProtoRepeatedSeriesGroup::mutable_series_group(int index) {
  return series_group_.Mutable(index);
}
inline ::tps::proto::RtTpsProtoSeriesGroup* RtTpsProtoRepeatedSeriesGroup::add_series_group() {
  return series_group_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoSeriesGroup >&
RtTpsProtoRepeatedSeriesGroup::series_group() const {
  return series_group_;
}
inline ::google::protobuf::RepeatedPtrField< ::tps::proto::RtTpsProtoSeriesGroup >*
RtTpsProtoRepeatedSeriesGroup::mutable_series_group() {
  return &series_group_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace tps

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rt_5ftps_5fproto_5fseries_5fgroup_2eproto__INCLUDED
