// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rt_tps_ct2densitytable.proto

#ifndef PROTOBUF_rt_5ftps_5fct2densitytable_2eproto__INCLUDED
#define PROTOBUF_rt_5ftps_5fct2densitytable_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "rt_tps_point.pb.h"
// @@protoc_insertion_point(includes)

namespace tps {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_rt_5ftps_5fct2densitytable_2eproto();
void protobuf_AssignDesc_rt_5ftps_5fct2densitytable_2eproto();
void protobuf_ShutdownFile_rt_5ftps_5fct2densitytable_2eproto();

class RT_TPS_CT2DensityTable;
class RT_TPS_CT2DensityItem;

// ===================================================================

class RT_TPS_CT2DensityTable : public ::google::protobuf::Message {
 public:
  RT_TPS_CT2DensityTable();
  virtual ~RT_TPS_CT2DensityTable();
  
  RT_TPS_CT2DensityTable(const RT_TPS_CT2DensityTable& from);
  
  inline RT_TPS_CT2DensityTable& operator=(const RT_TPS_CT2DensityTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RT_TPS_CT2DensityTable& default_instance();
  
  void Swap(RT_TPS_CT2DensityTable* other);
  
  // implements Message ----------------------------------------------
  
  RT_TPS_CT2DensityTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RT_TPS_CT2DensityTable& from);
  void MergeFrom(const RT_TPS_CT2DensityTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string tableUid = 1;
  inline bool has_tableuid() const;
  inline void clear_tableuid();
  static const int kTableUidFieldNumber = 1;
  inline const ::std::string& tableuid() const;
  inline void set_tableuid(const ::std::string& value);
  inline void set_tableuid(const char* value);
  inline void set_tableuid(const char* value, size_t size);
  inline ::std::string* mutable_tableuid();
  inline ::std::string* release_tableuid();
  
  // optional string tableName = 2;
  inline bool has_tablename() const;
  inline void clear_tablename();
  static const int kTableNameFieldNumber = 2;
  inline const ::std::string& tablename() const;
  inline void set_tablename(const ::std::string& value);
  inline void set_tablename(const char* value);
  inline void set_tablename(const char* value, size_t size);
  inline ::std::string* mutable_tablename();
  inline ::std::string* release_tablename();
  
  // repeated .tps.proto.RT_TPS_CT2DensityItem tableData = 3;
  inline int tabledata_size() const;
  inline void clear_tabledata();
  static const int kTableDataFieldNumber = 3;
  inline const ::tps::proto::RT_TPS_CT2DensityItem& tabledata(int index) const;
  inline ::tps::proto::RT_TPS_CT2DensityItem* mutable_tabledata(int index);
  inline ::tps::proto::RT_TPS_CT2DensityItem* add_tabledata();
  inline const ::google::protobuf::RepeatedPtrField< ::tps::proto::RT_TPS_CT2DensityItem >&
      tabledata() const;
  inline ::google::protobuf::RepeatedPtrField< ::tps::proto::RT_TPS_CT2DensityItem >*
      mutable_tabledata();
  
  // optional bool isdefault = 4;
  inline bool has_isdefault() const;
  inline void clear_isdefault();
  static const int kIsdefaultFieldNumber = 4;
  inline bool isdefault() const;
  inline void set_isdefault(bool value);
  
  // @@protoc_insertion_point(class_scope:tps.proto.RT_TPS_CT2DensityTable)
 private:
  inline void set_has_tableuid();
  inline void clear_has_tableuid();
  inline void set_has_tablename();
  inline void clear_has_tablename();
  inline void set_has_isdefault();
  inline void clear_has_isdefault();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* tableuid_;
  ::std::string* tablename_;
  ::google::protobuf::RepeatedPtrField< ::tps::proto::RT_TPS_CT2DensityItem > tabledata_;
  bool isdefault_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_rt_5ftps_5fct2densitytable_2eproto();
  friend void protobuf_AssignDesc_rt_5ftps_5fct2densitytable_2eproto();
  friend void protobuf_ShutdownFile_rt_5ftps_5fct2densitytable_2eproto();
  
  void InitAsDefaultInstance();
  static RT_TPS_CT2DensityTable* default_instance_;
};
// -------------------------------------------------------------------

class RT_TPS_CT2DensityItem : public ::google::protobuf::Message {
 public:
  RT_TPS_CT2DensityItem();
  virtual ~RT_TPS_CT2DensityItem();
  
  RT_TPS_CT2DensityItem(const RT_TPS_CT2DensityItem& from);
  
  inline RT_TPS_CT2DensityItem& operator=(const RT_TPS_CT2DensityItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RT_TPS_CT2DensityItem& default_instance();
  
  void Swap(RT_TPS_CT2DensityItem* other);
  
  // implements Message ----------------------------------------------
  
  RT_TPS_CT2DensityItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RT_TPS_CT2DensityItem& from);
  void MergeFrom(const RT_TPS_CT2DensityItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 ctValue = 1;
  inline bool has_ctvalue() const;
  inline void clear_ctvalue();
  static const int kCtValueFieldNumber = 1;
  inline ::google::protobuf::int32 ctvalue() const;
  inline void set_ctvalue(::google::protobuf::int32 value);
  
  // required float massDensity = 2;
  inline bool has_massdensity() const;
  inline void clear_massdensity();
  static const int kMassDensityFieldNumber = 2;
  inline float massdensity() const;
  inline void set_massdensity(float value);
  
  // required float referenceElectronDensity = 3;
  inline bool has_referenceelectrondensity() const;
  inline void clear_referenceelectrondensity();
  static const int kReferenceElectronDensityFieldNumber = 3;
  inline float referenceelectrondensity() const;
  inline void set_referenceelectrondensity(float value);
  
  // @@protoc_insertion_point(class_scope:tps.proto.RT_TPS_CT2DensityItem)
 private:
  inline void set_has_ctvalue();
  inline void clear_has_ctvalue();
  inline void set_has_massdensity();
  inline void clear_has_massdensity();
  inline void set_has_referenceelectrondensity();
  inline void clear_has_referenceelectrondensity();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 ctvalue_;
  float massdensity_;
  float referenceelectrondensity_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_rt_5ftps_5fct2densitytable_2eproto();
  friend void protobuf_AssignDesc_rt_5ftps_5fct2densitytable_2eproto();
  friend void protobuf_ShutdownFile_rt_5ftps_5fct2densitytable_2eproto();
  
  void InitAsDefaultInstance();
  static RT_TPS_CT2DensityItem* default_instance_;
};
// ===================================================================


// ===================================================================

// RT_TPS_CT2DensityTable

// required string tableUid = 1;
inline bool RT_TPS_CT2DensityTable::has_tableuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RT_TPS_CT2DensityTable::set_has_tableuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RT_TPS_CT2DensityTable::clear_has_tableuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RT_TPS_CT2DensityTable::clear_tableuid() {
  if (tableuid_ != &::google::protobuf::internal::kEmptyString) {
    tableuid_->clear();
  }
  clear_has_tableuid();
}
inline const ::std::string& RT_TPS_CT2DensityTable::tableuid() const {
  return *tableuid_;
}
inline void RT_TPS_CT2DensityTable::set_tableuid(const ::std::string& value) {
  set_has_tableuid();
  if (tableuid_ == &::google::protobuf::internal::kEmptyString) {
    tableuid_ = new ::std::string;
  }
  tableuid_->assign(value);
}
inline void RT_TPS_CT2DensityTable::set_tableuid(const char* value) {
  set_has_tableuid();
  if (tableuid_ == &::google::protobuf::internal::kEmptyString) {
    tableuid_ = new ::std::string;
  }
  tableuid_->assign(value);
}
inline void RT_TPS_CT2DensityTable::set_tableuid(const char* value, size_t size) {
  set_has_tableuid();
  if (tableuid_ == &::google::protobuf::internal::kEmptyString) {
    tableuid_ = new ::std::string;
  }
  tableuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RT_TPS_CT2DensityTable::mutable_tableuid() {
  set_has_tableuid();
  if (tableuid_ == &::google::protobuf::internal::kEmptyString) {
    tableuid_ = new ::std::string;
  }
  return tableuid_;
}
inline ::std::string* RT_TPS_CT2DensityTable::release_tableuid() {
  clear_has_tableuid();
  if (tableuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = tableuid_;
    tableuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string tableName = 2;
inline bool RT_TPS_CT2DensityTable::has_tablename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RT_TPS_CT2DensityTable::set_has_tablename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RT_TPS_CT2DensityTable::clear_has_tablename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RT_TPS_CT2DensityTable::clear_tablename() {
  if (tablename_ != &::google::protobuf::internal::kEmptyString) {
    tablename_->clear();
  }
  clear_has_tablename();
}
inline const ::std::string& RT_TPS_CT2DensityTable::tablename() const {
  return *tablename_;
}
inline void RT_TPS_CT2DensityTable::set_tablename(const ::std::string& value) {
  set_has_tablename();
  if (tablename_ == &::google::protobuf::internal::kEmptyString) {
    tablename_ = new ::std::string;
  }
  tablename_->assign(value);
}
inline void RT_TPS_CT2DensityTable::set_tablename(const char* value) {
  set_has_tablename();
  if (tablename_ == &::google::protobuf::internal::kEmptyString) {
    tablename_ = new ::std::string;
  }
  tablename_->assign(value);
}
inline void RT_TPS_CT2DensityTable::set_tablename(const char* value, size_t size) {
  set_has_tablename();
  if (tablename_ == &::google::protobuf::internal::kEmptyString) {
    tablename_ = new ::std::string;
  }
  tablename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RT_TPS_CT2DensityTable::mutable_tablename() {
  set_has_tablename();
  if (tablename_ == &::google::protobuf::internal::kEmptyString) {
    tablename_ = new ::std::string;
  }
  return tablename_;
}
inline ::std::string* RT_TPS_CT2DensityTable::release_tablename() {
  clear_has_tablename();
  if (tablename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = tablename_;
    tablename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .tps.proto.RT_TPS_CT2DensityItem tableData = 3;
inline int RT_TPS_CT2DensityTable::tabledata_size() const {
  return tabledata_.size();
}
inline void RT_TPS_CT2DensityTable::clear_tabledata() {
  tabledata_.Clear();
}
inline const ::tps::proto::RT_TPS_CT2DensityItem& RT_TPS_CT2DensityTable::tabledata(int index) const {
  return tabledata_.Get(index);
}
inline ::tps::proto::RT_TPS_CT2DensityItem* RT_TPS_CT2DensityTable::mutable_tabledata(int index) {
  return tabledata_.Mutable(index);
}
inline ::tps::proto::RT_TPS_CT2DensityItem* RT_TPS_CT2DensityTable::add_tabledata() {
  return tabledata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tps::proto::RT_TPS_CT2DensityItem >&
RT_TPS_CT2DensityTable::tabledata() const {
  return tabledata_;
}
inline ::google::protobuf::RepeatedPtrField< ::tps::proto::RT_TPS_CT2DensityItem >*
RT_TPS_CT2DensityTable::mutable_tabledata() {
  return &tabledata_;
}

// optional bool isdefault = 4;
inline bool RT_TPS_CT2DensityTable::has_isdefault() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RT_TPS_CT2DensityTable::set_has_isdefault() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RT_TPS_CT2DensityTable::clear_has_isdefault() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RT_TPS_CT2DensityTable::clear_isdefault() {
  isdefault_ = false;
  clear_has_isdefault();
}
inline bool RT_TPS_CT2DensityTable::isdefault() const {
  return isdefault_;
}
inline void RT_TPS_CT2DensityTable::set_isdefault(bool value) {
  set_has_isdefault();
  isdefault_ = value;
}

// -------------------------------------------------------------------

// RT_TPS_CT2DensityItem

// required int32 ctValue = 1;
inline bool RT_TPS_CT2DensityItem::has_ctvalue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RT_TPS_CT2DensityItem::set_has_ctvalue() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RT_TPS_CT2DensityItem::clear_has_ctvalue() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RT_TPS_CT2DensityItem::clear_ctvalue() {
  ctvalue_ = 0;
  clear_has_ctvalue();
}
inline ::google::protobuf::int32 RT_TPS_CT2DensityItem::ctvalue() const {
  return ctvalue_;
}
inline void RT_TPS_CT2DensityItem::set_ctvalue(::google::protobuf::int32 value) {
  set_has_ctvalue();
  ctvalue_ = value;
}

// required float massDensity = 2;
inline bool RT_TPS_CT2DensityItem::has_massdensity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RT_TPS_CT2DensityItem::set_has_massdensity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RT_TPS_CT2DensityItem::clear_has_massdensity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RT_TPS_CT2DensityItem::clear_massdensity() {
  massdensity_ = 0;
  clear_has_massdensity();
}
inline float RT_TPS_CT2DensityItem::massdensity() const {
  return massdensity_;
}
inline void RT_TPS_CT2DensityItem::set_massdensity(float value) {
  set_has_massdensity();
  massdensity_ = value;
}

// required float referenceElectronDensity = 3;
inline bool RT_TPS_CT2DensityItem::has_referenceelectrondensity() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RT_TPS_CT2DensityItem::set_has_referenceelectrondensity() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RT_TPS_CT2DensityItem::clear_has_referenceelectrondensity() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RT_TPS_CT2DensityItem::clear_referenceelectrondensity() {
  referenceelectrondensity_ = 0;
  clear_has_referenceelectrondensity();
}
inline float RT_TPS_CT2DensityItem::referenceelectrondensity() const {
  return referenceelectrondensity_;
}
inline void RT_TPS_CT2DensityItem::set_referenceelectrondensity(float value) {
  set_has_referenceelectrondensity();
  referenceelectrondensity_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace tps

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rt_5ftps_5fct2densitytable_2eproto__INCLUDED
